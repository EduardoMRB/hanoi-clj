// Compiled by ClojureScript 0.0-2850 {:static-fns true}
goog.provide('cljs.core');
goog.require('goog.string.StringBuffer');
goog.require('goog.array');
goog.require('goog.object');
goog.require('goog.string');
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-2850";
cljs.core._STAR_unchecked_if_STAR_ = false;
if(typeof cljs.core._STAR_print_fn_STAR_ !== 'undefined'){
} else {
/**
* Each runtime environment provides a different way to print output.
* Whatever function *print-fn* is bound to will be passed any
* Strings which should be printed.
*/
cljs.core._STAR_print_fn_STAR_ = (function _STAR_print_fn_STAR_(_){
throw (new Error("No *print-fn* fn set for evaluation environment"));
});
}
/**
* Set *print-fn* to f.
*/
cljs.core.set_print_fn_BANG_ = (function set_print_fn_BANG_(f){
return cljs.core._STAR_print_fn_STAR_ = f;
});
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
if(typeof cljs.core._STAR_loaded_libs_STAR_ !== 'undefined'){
} else {
cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = (function pr_opts(){
return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939),cljs.core._STAR_flush_on_newline_STAR_,new cljs.core.Keyword(null,"readably","readably",1129599760),cljs.core._STAR_print_readably_STAR_,new cljs.core.Keyword(null,"meta","meta",1499536964),cljs.core._STAR_print_meta_STAR_,new cljs.core.Keyword(null,"dup","dup",556298533),cljs.core._STAR_print_dup_STAR_,new cljs.core.Keyword(null,"print-length","print-length",1931866356),cljs.core._STAR_print_length_STAR_], null);
});
/**
* Set *print-fn* to console.log
*/
cljs.core.enable_console_print_BANG_ = (function enable_console_print_BANG_(){
cljs.core._STAR_print_newline_STAR_ = false;

return cljs.core._STAR_print_fn_STAR_ = (function() { 
var G__20011__delegate = function (args){
return console.log.apply(console,(function (){var G__20010 = args;
return (cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(G__20010) : cljs.core.into_array.call(null,G__20010));
})());
};
var G__20011 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__20012__i = 0, G__20012__a = new Array(arguments.length -  0);
while (G__20012__i < G__20012__a.length) {G__20012__a[G__20012__i] = arguments[G__20012__i + 0]; ++G__20012__i;}
  args = new cljs.core.IndexedSeq(G__20012__a,0);
} 
return G__20011__delegate.call(this,args);};
G__20011.cljs$lang$maxFixedArity = 0;
G__20011.cljs$lang$applyTo = (function (arglist__20013){
var args = cljs.core.seq(arglist__20013);
return G__20011__delegate(args);
});
G__20011.cljs$core$IFn$_invoke$arity$variadic = G__20011__delegate;
return G__20011;
})()
;
});
/**
* Internal - do not use!
*/
cljs.core.truth_ = (function truth_(x){
return (x != null && x !== false);
});
cljs.core.not_native = null;

/**
* Tests if 2 arguments are the same object
*/
cljs.core.identical_QMARK_ = (function identical_QMARK_(x,y){
return (x === y);
});
/**
* Returns true if x is nil, false otherwise.
*/
cljs.core.nil_QMARK_ = (function nil_QMARK_(x){
return (x == null);
});
cljs.core.array_QMARK_ = (function array_QMARK_(x){
return x instanceof Array;
});
cljs.core.number_QMARK_ = (function number_QMARK_(n){
return typeof n === 'number';
});
/**
* Returns true if x is logical false, false otherwise.
*/
cljs.core.not = (function not(x){
if(cljs.core.truth_(x)){
return false;
} else {
return true;
}
});
/**
* Returns true if x is not nil, false otherwise.
*/
cljs.core.some_QMARK_ = (function some_QMARK_(x){
return !((x == null));
});
cljs.core.object_QMARK_ = (function object_QMARK_(x){
if(!((x == null))){
return (x.constructor === Object);
} else {
return false;
}
});
cljs.core.string_QMARK_ = (function string_QMARK_(x){
var G__20015 = x;
return goog.isString(G__20015);
});
/**
* Internal - do not use!
*/
cljs.core.native_satisfies_QMARK_ = (function native_satisfies_QMARK_(p,x){
var x__$1 = (((x == null))?null:x);
if((p[(function (){var G__20017 = x__$1;
return goog.typeOf(G__20017);
})()])){
return true;
} else {
if((p["_"])){
return true;
} else {
return false;

}
}
});
cljs.core.is_proto_ = (function is_proto_(x){
return (x.constructor.prototype === x);
});
/**
* When compiled for a command-line target, whatever
* function *main-fn* is set to will be called with the command-line
* argv as arguments
*/
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = (function type(x){
if((x == null)){
return null;
} else {
return x.constructor;
}
});
cljs.core.missing_protocol = (function missing_protocol(proto,obj){
var ty = cljs.core.type(obj);
var ty__$1 = (cljs.core.truth_((function (){var and__11588__auto__ = ty;
if(cljs.core.truth_(and__11588__auto__)){
return ty.cljs$lang$type;
} else {
return and__11588__auto__;
}
})())?ty.cljs$lang$ctorStr:(function (){var G__20019 = obj;
return goog.typeOf(G__20019);
})());
return (new Error(["No protocol method ",proto," defined for type ",ty__$1,": ",obj].join("")));
});
cljs.core.type__GT_str = (function type__GT_str(ty){
var temp__4124__auto__ = ty.cljs$lang$ctorStr;
if(cljs.core.truth_(temp__4124__auto__)){
var s = temp__4124__auto__;
return s;
} else {
return [cljs.core.str(ty)].join('');
}
});
cljs.core.load_file = (function load_file(file){
if(cljs.core.truth_(COMPILED)){
return null;
} else {
return goog.importScript_(file);
}
});
if((typeof Symbol !== 'undefined') && (((function (){var G__20021 = Symbol;
return goog.typeOf(G__20021);
})() === "function"))){
cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.make_array = (function() {
var make_array = null;
var make_array__1 = (function (size){
return (new Array(size));
});
var make_array__2 = (function (type,size){
return make_array.cljs$core$IFn$_invoke$arity$1(size);
});
make_array = function(type,size){
switch(arguments.length){
case 1:
return make_array__1.call(this,type);
case 2:
return make_array__2.call(this,type,size);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
return make_array;
})()
;
/**
* Returns a javascript array, cloned from the passed in array
*/
cljs.core.aclone = (function aclone(arr){
var len = arr.length;
var new_arr = (new Array(len));
var n__12487__auto___20023 = len;
var i_20024 = (0);
while(true){
if((i_20024 < n__12487__auto___20023)){
(new_arr[i_20024] = (arr[i_20024]));

var G__20025 = (i_20024 + (1));
i_20024 = G__20025;
continue;
} else {
}
break;
}

return new_arr;
});
/**
* Creates a new javascript array.
* @param {...*} var_args
*/
cljs.core.array = (function array(var_args){
var a = (new Array(arguments.length));
var i = (0);
while(true){
if((i < a.length)){
(a[i] = (arguments[i]));

var G__20026 = (i + (1));
i = G__20026;
continue;
} else {
return a;
}
break;
}
});
/**
* Returns the value at the index.
* @param {...*} var_args
*/
cljs.core.aget = (function() {
var aget = null;
var aget__2 = (function (array,i){
return (array[i]);
});
var aget__3 = (function() { 
var G__20035__delegate = function (array,i,idxs){
var G__20032 = aget;
var G__20033 = aget.cljs$core$IFn$_invoke$arity$2(array,i);
var G__20034 = idxs;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__20032,G__20033,G__20034) : cljs.core.apply.call(null,G__20032,G__20033,G__20034));
};
var G__20035 = function (array,i,var_args){
var idxs = null;
if (arguments.length > 2) {
var G__20036__i = 0, G__20036__a = new Array(arguments.length -  2);
while (G__20036__i < G__20036__a.length) {G__20036__a[G__20036__i] = arguments[G__20036__i + 2]; ++G__20036__i;}
  idxs = new cljs.core.IndexedSeq(G__20036__a,0);
} 
return G__20035__delegate.call(this,array,i,idxs);};
G__20035.cljs$lang$maxFixedArity = 2;
G__20035.cljs$lang$applyTo = (function (arglist__20037){
var array = cljs.core.first(arglist__20037);
arglist__20037 = cljs.core.next(arglist__20037);
var i = cljs.core.first(arglist__20037);
var idxs = cljs.core.rest(arglist__20037);
return G__20035__delegate(array,i,idxs);
});
G__20035.cljs$core$IFn$_invoke$arity$variadic = G__20035__delegate;
return G__20035;
})()
;
aget = function(array,i,var_args){
var idxs = var_args;
switch(arguments.length){
case 2:
return aget__2.call(this,array,i);
default:
var G__20038 = null;
if (arguments.length > 2) {
var G__20039__i = 0, G__20039__a = new Array(arguments.length -  2);
while (G__20039__i < G__20039__a.length) {G__20039__a[G__20039__i] = arguments[G__20039__i + 2]; ++G__20039__i;}
G__20038 = new cljs.core.IndexedSeq(G__20039__a,0);
}
return aget__3.cljs$core$IFn$_invoke$arity$variadic(array,i, G__20038);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aget.cljs$lang$maxFixedArity = 2;
aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
return aget;
})()
;
/**
* Sets the value at the index.
* @param {...*} var_args
*/
cljs.core.aset = (function() {
var aset = null;
var aset__3 = (function (array,i,val){
return (array[i] = val);
});
var aset__4 = (function() { 
var G__20048__delegate = function (array,idx,idx2,idxv){
var G__20044 = aset;
var G__20045 = (array[idx]);
var G__20046 = idx2;
var G__20047 = idxv;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__20044,G__20045,G__20046,G__20047) : cljs.core.apply.call(null,G__20044,G__20045,G__20046,G__20047));
};
var G__20048 = function (array,idx,idx2,var_args){
var idxv = null;
if (arguments.length > 3) {
var G__20049__i = 0, G__20049__a = new Array(arguments.length -  3);
while (G__20049__i < G__20049__a.length) {G__20049__a[G__20049__i] = arguments[G__20049__i + 3]; ++G__20049__i;}
  idxv = new cljs.core.IndexedSeq(G__20049__a,0);
} 
return G__20048__delegate.call(this,array,idx,idx2,idxv);};
G__20048.cljs$lang$maxFixedArity = 3;
G__20048.cljs$lang$applyTo = (function (arglist__20050){
var array = cljs.core.first(arglist__20050);
arglist__20050 = cljs.core.next(arglist__20050);
var idx = cljs.core.first(arglist__20050);
arglist__20050 = cljs.core.next(arglist__20050);
var idx2 = cljs.core.first(arglist__20050);
var idxv = cljs.core.rest(arglist__20050);
return G__20048__delegate(array,idx,idx2,idxv);
});
G__20048.cljs$core$IFn$_invoke$arity$variadic = G__20048__delegate;
return G__20048;
})()
;
aset = function(array,idx,idx2,var_args){
var idxv = var_args;
switch(arguments.length){
case 3:
return aset__3.call(this,array,idx,idx2);
default:
var G__20051 = null;
if (arguments.length > 3) {
var G__20052__i = 0, G__20052__a = new Array(arguments.length -  3);
while (G__20052__i < G__20052__a.length) {G__20052__a[G__20052__i] = arguments[G__20052__i + 3]; ++G__20052__i;}
G__20051 = new cljs.core.IndexedSeq(G__20052__a,0);
}
return aset__4.cljs$core$IFn$_invoke$arity$variadic(array,idx,idx2, G__20051);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aset.cljs$lang$maxFixedArity = 3;
aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
return aset;
})()
;
/**
* Returns the length of the array. Works on arrays of all types.
*/
cljs.core.alength = (function alength(array){
return array.length;
});
cljs.core.into_array = (function() {
var into_array = null;
var into_array__1 = (function (aseq){
return into_array.cljs$core$IFn$_invoke$arity$2(null,aseq);
});
var into_array__2 = (function (type,aseq){
var G__20058 = (function (a,x){
a.push(x);

return a;
});
var G__20059 = [];
var G__20060 = aseq;
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__20058,G__20059,G__20060) : cljs.core.reduce.call(null,G__20058,G__20059,G__20060));
});
into_array = function(type,aseq){
switch(arguments.length){
case 1:
return into_array__1.call(this,type);
case 2:
return into_array__2.call(this,type,aseq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
return into_array;
})()
;
/**
* Invoke JavaScript object method via string. Needed when the
* string is not a valid unquoted property name.
* @param {...*} var_args
*/
cljs.core.js_invoke = (function() { 
var js_invoke__delegate = function (obj,s,args){
return (obj[s]).apply(obj,cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
};
var js_invoke = function (obj,s,var_args){
var args = null;
if (arguments.length > 2) {
var G__20061__i = 0, G__20061__a = new Array(arguments.length -  2);
while (G__20061__i < G__20061__a.length) {G__20061__a[G__20061__i] = arguments[G__20061__i + 2]; ++G__20061__i;}
  args = new cljs.core.IndexedSeq(G__20061__a,0);
} 
return js_invoke__delegate.call(this,obj,s,args);};
js_invoke.cljs$lang$maxFixedArity = 2;
js_invoke.cljs$lang$applyTo = (function (arglist__20062){
var obj = cljs.core.first(arglist__20062);
arglist__20062 = cljs.core.next(arglist__20062);
var s = cljs.core.first(arglist__20062);
var args = cljs.core.rest(arglist__20062);
return js_invoke__delegate(obj,s,args);
});
js_invoke.cljs$core$IFn$_invoke$arity$variadic = js_invoke__delegate;
return js_invoke;
})()
;

cljs.core.Fn = (function (){var obj20064 = {};
return obj20064;
})();


cljs.core.IFn = (function (){var obj20066 = {};
return obj20066;
})();

cljs.core._invoke = (function() {
var _invoke = null;
var _invoke__1 = (function (this$){
if((function (){var and__11588__auto__ = this$;
if(and__11588__auto__){
return this$.cljs$core$IFn$_invoke$arity$1;
} else {
return and__11588__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$1(this$);
} else {
var x__12244__auto__ = (((this$ == null))?null:this$);
return (function (){var or__11600__auto__ = (cljs.core._invoke[(function (){var G__20112 = x__12244__auto__;
return goog.typeOf(G__20112);
})()]);
if(or__11600__auto__){
return or__11600__auto__;
} else {
var or__11600__auto____$1 = (cljs.core._invoke["_"]);
if(or__11600__auto____$1){
return or__11600__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$);
}
});
var _invoke__2 = (function (this$,a){
if((function (){var and__11588__auto__ = this$;
if(and__11588__auto__){
return this$.cljs$core$IFn$_invoke$arity$2;
} else {
return and__11588__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$2(this$,a);
} else {
var x__12244__auto__ = (((this$ == null))?null:this$);
return (function (){var or__11600__auto__ = (cljs.core._invoke[(function (){var G__20114 = x__12244__auto__;
return goog.typeOf(G__20114);
})()]);
if(or__11600__auto__){
return or__11600__auto__;
} else {
var or__11600__auto____$1 = (cljs.core._invoke["_"]);
if(or__11600__auto____$1){
return or__11600__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a);
}
});
var _invoke__3 = (function (this$,a,b){
if((function (){var and__11588__auto__ = this$;
if(and__11588__auto__){
return this$.cljs$core$IFn$_invoke$arity$3;
} else {
return and__11588__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$3(this$,a,b);
} else {
var x__12244__auto__ = (((this$ == null))?null:this$);
return (function (){var or__11600__auto__ = (cljs.core._invoke[(function (){var G__20116 = x__12244__auto__;
return goog.typeOf(G__20116);
})()]);
if(or__11600__auto__){
return or__11600__auto__;
} else {
var or__11600__auto____$1 = (cljs.core._invoke["_"]);
if(or__11600__auto____$1){
return or__11600__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b);
}
});
var _invoke__4 = (function (this$,a,b,c){
if((function (){var and__11588__auto__ = this$;
if(and__11588__auto__){
return this$.cljs$core$IFn$_invoke$arity$4;
} else {
return and__11588__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$4(this$,a,b,c);
} else {
var x__12244__auto__ = (((this$ == null))?null:this$);
return (function (){var or__11600__auto__ = (cljs.core._invoke[(function (){var G__20118 = x__12244__auto__;
return goog.typeOf(G__20118);
})()]);
if(or__11600__auto__){
return or__11600__auto__;
} else {
var or__11600__auto____$1 = (cljs.core._invoke["_"]);
if(or__11600__auto____$1){
return or__11600__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c);
}
});
var _invoke__5 = (function (this$,a,b,c,d){
if((function (){var and__11588__auto__ = this$;
if(and__11588__auto__){
return this$.cljs$core$IFn$_invoke$arity$5;
} else {
return and__11588__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$5(this$,a,b,c,d);
} else {
var x__12244__auto__ = (((this$ == null))?null:this$);
return (function (){var or__11600__auto__ = (cljs.core._invoke[(function (){var G__20120 = x__12244__auto__;
return goog.typeOf(G__20120);
})()]);
if(or__11600__auto__){
return or__11600__auto__;
} else {
var or__11600__auto____$1 = (cljs.core._invoke["_"]);
if(or__11600__auto____$1){
return or__11600__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d);
}
});
var _invoke__6 = (function (this$,a,b,c,d,e){
if((function (){var and__11588__auto__ = this$;
if(and__11588__auto__){
return this$.cljs$core$IFn$_invoke$arity$6;
} else {
return and__11588__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$6(this$,a,b,c,d,e);
} else {
var x__12244__auto__ = (((this$ == null))?null:this$);
return (function (){var or__11600__auto__ = (cljs.core._invoke[(function (){var G__20122 = x__12244__auto__;
return goog.typeOf(G__20122);
})()]);
if(or__11600__auto__){
return or__11600__auto__;
} else {
var or__11600__auto____$1 = (cljs.core._invoke["_"]);
if(or__11600__auto____$1){
return or__11600__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e);
}
});
var _invoke__7 = (function (this$,a,b,c,d,e,f){
if((function (){var and__11588__auto__ = this$;
if(and__11588__auto__){
return this$.cljs$core$IFn$_invoke$arity$7;
} else {
return and__11588__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$7(this$,a,b,c,d,e,f);
} else {
var x__12244__auto__ = (((this$ == null))?null:this$);
return (function (){var or__11600__auto__ = (cljs.core._invoke[(function (){var G__20124 = x__12244__auto__;
return goog.typeOf(G__20124);
})()]);
if(or__11600__auto__){
return or__11600__auto__;
} else {
var or__11600__auto____$1 = (cljs.core._invoke["_"]);
if(or__11600__auto____$1){
return or__11600__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f);
}
});
var _invoke__8 = (function (this$,a,b,c,d,e,f,g){
if((function (){var and__11588__auto__ = this$;
if(and__11588__auto__){
return this$.cljs$core$IFn$_invoke$arity$8;
} else {
return and__11588__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$8(this$,a,b,c,d,e,f,g);
} else {
var x__12244__auto__ = (((this$ == null))?null:this$);
return (function (){var or__11600__auto__ = (cljs.core._invoke[(function (){var G__20126 = x__12244__auto__;
return goog.typeOf(G__20126);
})()]);
if(or__11600__auto__){
return or__11600__auto__;
} else {
var or__11600__auto____$1 = (cljs.core._invoke["_"]);
if(or__11600__auto____$1){
return or__11600__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g);
}
});
var _invoke__9 = (function (this$,a,b,c,d,e,f,g,h){
if((function (){var and__11588__auto__ = this$;
if(and__11588__auto__){
return this$.cljs$core$IFn$_invoke$arity$9;
} else {
return and__11588__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$9(this$,a,b,c,d,e,f,g,h);
} else {
var x__12244__auto__ = (((this$ == null))?null:this$);
return (function (){var or__11600__auto__ = (cljs.core._invoke[(function (){var G__20128 = x__12244__auto__;
return goog.typeOf(G__20128);
})()]);
if(or__11600__auto__){
return or__11600__auto__;
} else {
var or__11600__auto____$1 = (cljs.core._invoke["_"]);
if(or__11600__auto____$1){
return or__11600__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h);
}
});
var _invoke__10 = (function (this$,a,b,c,d,e,f,g,h,i){
if((function (){var and__11588__auto__ = this$;
if(and__11588__auto__){
return this$.cljs$core$IFn$_invoke$arity$10;
} else {
return and__11588__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$10(this$,a,b,c,d,e,f,g,h,i);
} else {
var x__12244__auto__ = (((this$ == null))?null:this$);
return (function (){var or__11600__auto__ = (cljs.core._invoke[(function (){var G__20130 = x__12244__auto__;
return goog.typeOf(G__20130);
})()]);
if(or__11600__auto__){
return or__11600__auto__;
} else {
var or__11600__auto____$1 = (cljs.core._invoke["_"]);
if(or__11600__auto____$1){
return or__11600__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i);
}
});
var _invoke__11 = (function (this$,a,b,c,d,e,f,g,h,i,j){
if((function (){var and__11588__auto__ = this$;
if(and__11588__auto__){
return this$.cljs$core$IFn$_invoke$arity$11;
} else {
return and__11588__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$11(this$,a,b,c,d,e,f,g,h,i,j);
} else {
var x__12244__auto__ = (((this$ == null))?null:this$);
return (function (){var or__11600__auto__ = (cljs.core._invoke[(function (){var G__20132 = x__12244__auto__;
return goog.typeOf(G__20132);
})()]);
if(or__11600__auto__){
return or__11600__auto__;
} else {
var or__11600__auto____$1 = (cljs.core._invoke["_"]);
if(or__11600__auto____$1){
return or__11600__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j);
}
});
var _invoke__12 = (function (this$,a,b,c,d,e,f,g,h,i,j,k){
if((function (){var and__11588__auto__ = this$;
if(and__11588__auto__){
return this$.cljs$core$IFn$_invoke$arity$12;
} else {
return and__11588__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$12(this$,a,b,c,d,e,f,g,h,i,j,k);
} else {
var x__12244__auto__ = (((this$ == null))?null:this$);
return (function (){var or__11600__auto__ = (cljs.core._invoke[(function (){var G__20134 = x__12244__auto__;
return goog.typeOf(G__20134);
})()]);
if(or__11600__auto__){
return or__11600__auto__;
} else {
var or__11600__auto____$1 = (cljs.core._invoke["_"]);
if(or__11600__auto____$1){
return or__11600__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k);
}
});
var _invoke__13 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l){
if((function (){var and__11588__auto__ = this$;
if(and__11588__auto__){
return this$.cljs$core$IFn$_invoke$arity$13;
} else {
return and__11588__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$13(this$,a,b,c,d,e,f,g,h,i,j,k,l);
} else {
var x__12244__auto__ = (((this$ == null))?null:this$);
return (function (){var or__11600__auto__ = (cljs.core._invoke[(function (){var G__20136 = x__12244__auto__;
return goog.typeOf(G__20136);
})()]);
if(or__11600__auto__){
return or__11600__auto__;
} else {
var or__11600__auto____$1 = (cljs.core._invoke["_"]);
if(or__11600__auto____$1){
return or__11600__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l);
}
});
var _invoke__14 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m){
if((function (){var and__11588__auto__ = this$;
if(and__11588__auto__){
return this$.cljs$core$IFn$_invoke$arity$14;
} else {
return and__11588__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$14(this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
} else {
var x__12244__auto__ = (((this$ == null))?null:this$);
return (function (){var or__11600__auto__ = (cljs.core._invoke[(function (){var G__20138 = x__12244__auto__;
return goog.typeOf(G__20138);
})()]);
if(or__11600__auto__){
return or__11600__auto__;
} else {
var or__11600__auto____$1 = (cljs.core._invoke["_"]);
if(or__11600__auto____$1){
return or__11600__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
}
});
var _invoke__15 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
if((function (){var and__11588__auto__ = this$;
if(and__11588__auto__){
return this$.cljs$core$IFn$_invoke$arity$15;
} else {
return and__11588__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$15(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
} else {
var x__12244__auto__ = (((this$ == null))?null:this$);
return (function (){var or__11600__auto__ = (cljs.core._invoke[(function (){var G__20140 = x__12244__auto__;
return goog.typeOf(G__20140);
})()]);
if(or__11600__auto__){
return or__11600__auto__;
} else {
var or__11600__auto____$1 = (cljs.core._invoke["_"]);
if(or__11600__auto____$1){
return or__11600__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
}
});
var _invoke__16 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
if((function (){var and__11588__auto__ = this$;
if(and__11588__auto__){
return this$.cljs$core$IFn$_invoke$arity$16;
} else {
return and__11588__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$16(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
} else {
var x__12244__auto__ = (((this$ == null))?null:this$);
return (function (){var or__11600__auto__ = (cljs.core._invoke[(function (){var G__20142 = x__12244__auto__;
return goog.typeOf(G__20142);
})()]);
if(or__11600__auto__){
return or__11600__auto__;
} else {
var or__11600__auto____$1 = (cljs.core._invoke["_"]);
if(or__11600__auto____$1){
return or__11600__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
}
});
var _invoke__17 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
if((function (){var and__11588__auto__ = this$;
if(and__11588__auto__){
return this$.cljs$core$IFn$_invoke$arity$17;
} else {
return and__11588__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$17(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
} else {
var x__12244__auto__ = (((this$ == null))?null:this$);
return (function (){var or__11600__auto__ = (cljs.core._invoke[(function (){var G__20144 = x__12244__auto__;
return goog.typeOf(G__20144);
})()]);
if(or__11600__auto__){
return or__11600__auto__;
} else {
var or__11600__auto____$1 = (cljs.core._invoke["_"]);
if(or__11600__auto____$1){
return or__11600__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
}
});
var _invoke__18 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
if((function (){var and__11588__auto__ = this$;
if(and__11588__auto__){
return this$.cljs$core$IFn$_invoke$arity$18;
} else {
return and__11588__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$18(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
} else {
var x__12244__auto__ = (((this$ == null))?null:this$);
return (function (){var or__11600__auto__ = (cljs.core._invoke[(function (){var G__20146 = x__12244__auto__;
return goog.typeOf(G__20146);
})()]);
if(or__11600__auto__){
return or__11600__auto__;
} else {
var or__11600__auto____$1 = (cljs.core._invoke["_"]);
if(or__11600__auto____$1){
return or__11600__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
}
});
var _invoke__19 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
if((function (){var and__11588__auto__ = this$;
if(and__11588__auto__){
return this$.cljs$core$IFn$_invoke$arity$19;
} else {
return and__11588__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$19(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
} else {
var x__12244__auto__ = (((this$ == null))?null:this$);
return (function (){var or__11600__auto__ = (cljs.core._invoke[(function (){var G__20148 = x__12244__auto__;
return goog.typeOf(G__20148);
})()]);
if(or__11600__auto__){
return or__11600__auto__;
} else {
var or__11600__auto____$1 = (cljs.core._invoke["_"]);
if(or__11600__auto____$1){
return or__11600__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
}
});
var _invoke__20 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
if((function (){var and__11588__auto__ = this$;
if(and__11588__auto__){
return this$.cljs$core$IFn$_invoke$arity$20;
} else {
return and__11588__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$20(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
} else {
var x__12244__auto__ = (((this$ == null))?null:this$);
return (function (){var or__11600__auto__ = (cljs.core._invoke[(function (){var G__20150 = x__12244__auto__;
return goog.typeOf(G__20150);
})()]);
if(or__11600__auto__){
return or__11600__auto__;
} else {
var or__11600__auto____$1 = (cljs.core._invoke["_"]);
if(or__11600__auto____$1){
return or__11600__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
}
});
var _invoke__21 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
if((function (){var and__11588__auto__ = this$;
if(and__11588__auto__){
return this$.cljs$core$IFn$_invoke$arity$21;
} else {
return and__11588__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$21(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
} else {
var x__12244__auto__ = (((this$ == null))?null:this$);
return (function (){var or__11600__auto__ = (cljs.core._invoke[(function (){var G__20152 = x__12244__auto__;
return goog.typeOf(G__20152);
})()]);
if(or__11600__auto__){
return or__11600__auto__;
} else {
var or__11600__auto____$1 = (cljs.core._invoke["_"]);
if(or__11600__auto____$1){
return or__11600__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
}
});
var _invoke__22 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
if((function (){var and__11588__auto__ = this$;
if(and__11588__auto__){
return this$.cljs$core$IFn$_invoke$arity$22;
} else {
return and__11588__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$22(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
} else {
var x__12244__auto__ = (((this$ == null))?null:this$);
return (function (){var or__11600__auto__ = (cljs.core._invoke[(function (){var G__20154 = x__12244__auto__;
return goog.typeOf(G__20154);
})()]);
if(or__11600__auto__){
return or__11600__auto__;
} else {
var or__11600__auto____$1 = (cljs.core._invoke["_"]);
if(or__11600__auto____$1){
return or__11600__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
});
_invoke = function(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return _invoke__1.call(this,this$);
case 2:
return _invoke__2.call(this,this$,a);
case 3:
return _invoke__3.call(this,this$,a,b);
case 4:
return _invoke__4.call(this,this$,a,b,c);
case 5:
return _invoke__5.call(this,this$,a,b,c,d);
case 6:
return _invoke__6.call(this,this$,a,b,c,d,e);
case 7:
return _invoke__7.call(this,this$,a,b,c,d,e,f);
case 8:
return _invoke__8.call(this,this$,a,b,c,d,e,f,g);
case 9:
return _invoke__9.call(this,this$,a,b,c,d,e,f,g,h);
case 10:
return _invoke__10.call(this,this$,a,b,c,d,e,f,g,h,i);
case 11:
return _invoke__11.call(this,this$,a,b,c,d,e,f,g,h,i,j);
case 12:
return _invoke__12.call(this,this$,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return _invoke__13.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return _invoke__14.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return _invoke__15.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return _invoke__16.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return _invoke__17.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return _invoke__18.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return _invoke__19.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return _invoke__20.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return _invoke__21.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return _invoke__22.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
_invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
_invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
_invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
_invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
_invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
_invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
_invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
_invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
_invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
_invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
_invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
_invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
_invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
_invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
_invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
_invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
_invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
_invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
_invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
_invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
_invoke.cljs$core$IFn$_invoke$arity$22 = _invoke__22;
return _invoke;
})()
;


cljs.core.ICloneable = (function (){var obj20156 = {};
return obj20156;
})();

cljs.core._clone = (function _clone(value){
if((function (){var and__11588__auto__ = value;
if(and__11588__auto__){
return value.cljs$core$ICloneable$_clone$arity$1;
} else {
return and__11588__auto__;
}
})()){
return value.cljs$core$ICloneable$_clone$arity$1(value);
} else {
var x__12244__auto__ = (((value == null))?null:value);
return (function (){var or__11600__auto__ = (cljs.core._clone[(function (){var G__20160 = x__12244__auto__;
return goog.typeOf(G__20160);
})()]);
if(or__11600__auto__){
return or__11600__auto__;
} else {
var or__11600__auto____$1 = (cljs.core._clone["_"]);
if(or__11600__auto____$1){
return or__11600__auto____$1;
} else {
throw cljs.core.missing_protocol("ICloneable.-clone",value);
}
}
})().call(null,value);
}
});


cljs.core.ICounted = (function (){var obj20162 = {};
return obj20162;
})();

cljs.core._count = (function _count(coll){
if((function (){var and__11588__auto__ = coll;
if(and__11588__auto__){
return coll.cljs$core$ICounted$_count$arity$1;
} else {
return and__11588__auto__;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(coll);
} else {
var x__12244__auto__ = (((coll == null))?null:coll);
return (function (){var or__11600__auto__ = (cljs.core._count[(function (){var G__20166 = x__12244__auto__;
return goog.typeOf(G__20166);
})()]);
if(or__11600__auto__){
return or__11600__auto__;
} else {
var or__11600__auto____$1 = (cljs.core._count["_"]);
if(or__11600__auto____$1){
return or__11600__auto____$1;
} else {
throw cljs.core.missing_protocol("ICounted.-count",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IEmptyableCollection = (function (){var obj20168 = {};
return obj20168;
})();

cljs.core._empty = (function _empty(coll){
if((function (){var and__11588__auto__ = coll;
if(and__11588__auto__){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
} else {
return and__11588__auto__;
}
})()){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
} else {
var x__12244__auto__ = (((coll == null))?null:coll);
return (function (){var or__11600__auto__ = (cljs.core._empty[(function (){var G__20172 = x__12244__auto__;
return goog.typeOf(G__20172);
})()]);
if(or__11600__auto__){
return or__11600__auto__;
} else {
var or__11600__auto____$1 = (cljs.core._empty["_"]);
if(or__11600__auto____$1){
return or__11600__auto____$1;
} else {
throw cljs.core.missing_protocol("IEmptyableCollection.-empty",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ICollection = (function (){var obj20174 = {};
return obj20174;
})();

cljs.core._conj = (function _conj(coll,o){
if((function (){var and__11588__auto__ = coll;
if(and__11588__auto__){
return coll.cljs$core$ICollection$_conj$arity$2;
} else {
return and__11588__auto__;
}
})()){
return coll.cljs$core$ICollection$_conj$arity$2(coll,o);
} else {
var x__12244__auto__ = (((coll == null))?null:coll);
return (function (){var or__11600__auto__ = (cljs.core._conj[(function (){var G__20178 = x__12244__auto__;
return goog.typeOf(G__20178);
})()]);
if(or__11600__auto__){
return or__11600__auto__;
} else {
var or__11600__auto____$1 = (cljs.core._conj["_"]);
if(or__11600__auto____$1){
return or__11600__auto____$1;
} else {
throw cljs.core.missing_protocol("ICollection.-conj",coll);
}
}
})().call(null,coll,o);
}
});


cljs.core.IIndexed = (function (){var obj20180 = {};
return obj20180;
})();

cljs.core._nth = (function() {
var _nth = null;
var _nth__2 = (function (coll,n){
if((function (){var and__11588__auto__ = coll;
if(and__11588__auto__){
return coll.cljs$core$IIndexed$_nth$arity$2;
} else {
return and__11588__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(coll,n);
} else {
var x__12244__auto__ = (((coll == null))?null:coll);
return (function (){var or__11600__auto__ = (cljs.core._nth[(function (){var G__20186 = x__12244__auto__;
return goog.typeOf(G__20186);
})()]);
if(or__11600__auto__){
return or__11600__auto__;
} else {
var or__11600__auto____$1 = (cljs.core._nth["_"]);
if(or__11600__auto____$1){
return or__11600__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n);
}
});
var _nth__3 = (function (coll,n,not_found){
if((function (){var and__11588__auto__ = coll;
if(and__11588__auto__){
return coll.cljs$core$IIndexed$_nth$arity$3;
} else {
return and__11588__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(coll,n,not_found);
} else {
var x__12244__auto__ = (((coll == null))?null:coll);
return (function (){var or__11600__auto__ = (cljs.core._nth[(function (){var G__20188 = x__12244__auto__;
return goog.typeOf(G__20188);
})()]);
if(or__11600__auto__){
return or__11600__auto__;
} else {
var or__11600__auto____$1 = (cljs.core._nth["_"]);
if(or__11600__auto____$1){
return or__11600__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n,not_found);
}
});
_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return _nth__2.call(this,coll,n);
case 3:
return _nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
_nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
return _nth;
})()
;


cljs.core.ASeq = (function (){var obj20190 = {};
return obj20190;
})();


cljs.core.ISeq = (function (){var obj20192 = {};
return obj20192;
})();

cljs.core._first = (function _first(coll){
if((function (){var and__11588__auto__ = coll;
if(and__11588__auto__){
return coll.cljs$core$ISeq$_first$arity$1;
} else {
return and__11588__auto__;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(coll);
} else {
var x__12244__auto__ = (((coll == null))?null:coll);
return (function (){var or__11600__auto__ = (cljs.core._first[(function (){var G__20196 = x__12244__auto__;
return goog.typeOf(G__20196);
})()]);
if(or__11600__auto__){
return or__11600__auto__;
} else {
var or__11600__auto____$1 = (cljs.core._first["_"]);
if(or__11600__auto____$1){
return or__11600__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._rest = (function _rest(coll){
if((function (){var and__11588__auto__ = coll;
if(and__11588__auto__){
return coll.cljs$core$ISeq$_rest$arity$1;
} else {
return and__11588__auto__;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(coll);
} else {
var x__12244__auto__ = (((coll == null))?null:coll);
return (function (){var or__11600__auto__ = (cljs.core._rest[(function (){var G__20200 = x__12244__auto__;
return goog.typeOf(G__20200);
})()]);
if(or__11600__auto__){
return or__11600__auto__;
} else {
var or__11600__auto____$1 = (cljs.core._rest["_"]);
if(or__11600__auto____$1){
return or__11600__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INext = (function (){var obj20202 = {};
return obj20202;
})();

cljs.core._next = (function _next(coll){
if((function (){var and__11588__auto__ = coll;
if(and__11588__auto__){
return coll.cljs$core$INext$_next$arity$1;
} else {
return and__11588__auto__;
}
})()){
return coll.cljs$core$INext$_next$arity$1(coll);
} else {
var x__12244__auto__ = (((coll == null))?null:coll);
return (function (){var or__11600__auto__ = (cljs.core._next[(function (){var G__20206 = x__12244__auto__;
return goog.typeOf(G__20206);
})()]);
if(or__11600__auto__){
return or__11600__auto__;
} else {
var or__11600__auto____$1 = (cljs.core._next["_"]);
if(or__11600__auto____$1){
return or__11600__auto____$1;
} else {
throw cljs.core.missing_protocol("INext.-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ILookup = (function (){var obj20208 = {};
return obj20208;
})();

cljs.core._lookup = (function() {
var _lookup = null;
var _lookup__2 = (function (o,k){
if((function (){var and__11588__auto__ = o;
if(and__11588__auto__){
return o.cljs$core$ILookup$_lookup$arity$2;
} else {
return and__11588__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(o,k);
} else {
var x__12244__auto__ = (((o == null))?null:o);
return (function (){var or__11600__auto__ = (cljs.core._lookup[(function (){var G__20214 = x__12244__auto__;
return goog.typeOf(G__20214);
})()]);
if(or__11600__auto__){
return or__11600__auto__;
} else {
var or__11600__auto____$1 = (cljs.core._lookup["_"]);
if(or__11600__auto____$1){
return or__11600__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k);
}
});
var _lookup__3 = (function (o,k,not_found){
if((function (){var and__11588__auto__ = o;
if(and__11588__auto__){
return o.cljs$core$ILookup$_lookup$arity$3;
} else {
return and__11588__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(o,k,not_found);
} else {
var x__12244__auto__ = (((o == null))?null:o);
return (function (){var or__11600__auto__ = (cljs.core._lookup[(function (){var G__20216 = x__12244__auto__;
return goog.typeOf(G__20216);
})()]);
if(or__11600__auto__){
return or__11600__auto__;
} else {
var or__11600__auto____$1 = (cljs.core._lookup["_"]);
if(or__11600__auto____$1){
return or__11600__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k,not_found);
}
});
_lookup = function(o,k,not_found){
switch(arguments.length){
case 2:
return _lookup__2.call(this,o,k);
case 3:
return _lookup__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
_lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
return _lookup;
})()
;


cljs.core.IAssociative = (function (){var obj20218 = {};
return obj20218;
})();

cljs.core._contains_key_QMARK_ = (function _contains_key_QMARK_(coll,k){
if((function (){var and__11588__auto__ = coll;
if(and__11588__auto__){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
} else {
return and__11588__auto__;
}
})()){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll,k);
} else {
var x__12244__auto__ = (((coll == null))?null:coll);
return (function (){var or__11600__auto__ = (cljs.core._contains_key_QMARK_[(function (){var G__20222 = x__12244__auto__;
return goog.typeOf(G__20222);
})()]);
if(or__11600__auto__){
return or__11600__auto__;
} else {
var or__11600__auto____$1 = (cljs.core._contains_key_QMARK_["_"]);
if(or__11600__auto____$1){
return or__11600__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-contains-key?",coll);
}
}
})().call(null,coll,k);
}
});

cljs.core._assoc = (function _assoc(coll,k,v){
if((function (){var and__11588__auto__ = coll;
if(and__11588__auto__){
return coll.cljs$core$IAssociative$_assoc$arity$3;
} else {
return and__11588__auto__;
}
})()){
return coll.cljs$core$IAssociative$_assoc$arity$3(coll,k,v);
} else {
var x__12244__auto__ = (((coll == null))?null:coll);
return (function (){var or__11600__auto__ = (cljs.core._assoc[(function (){var G__20226 = x__12244__auto__;
return goog.typeOf(G__20226);
})()]);
if(or__11600__auto__){
return or__11600__auto__;
} else {
var or__11600__auto____$1 = (cljs.core._assoc["_"]);
if(or__11600__auto____$1){
return or__11600__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-assoc",coll);
}
}
})().call(null,coll,k,v);
}
});


cljs.core.IMap = (function (){var obj20228 = {};
return obj20228;
})();

cljs.core._dissoc = (function _dissoc(coll,k){
if((function (){var and__11588__auto__ = coll;
if(and__11588__auto__){
return coll.cljs$core$IMap$_dissoc$arity$2;
} else {
return and__11588__auto__;
}
})()){
return coll.cljs$core$IMap$_dissoc$arity$2(coll,k);
} else {
var x__12244__auto__ = (((coll == null))?null:coll);
return (function (){var or__11600__auto__ = (cljs.core._dissoc[(function (){var G__20232 = x__12244__auto__;
return goog.typeOf(G__20232);
})()]);
if(or__11600__auto__){
return or__11600__auto__;
} else {
var or__11600__auto____$1 = (cljs.core._dissoc["_"]);
if(or__11600__auto____$1){
return or__11600__auto____$1;
} else {
throw cljs.core.missing_protocol("IMap.-dissoc",coll);
}
}
})().call(null,coll,k);
}
});


cljs.core.IMapEntry = (function (){var obj20234 = {};
return obj20234;
})();

cljs.core._key = (function _key(coll){
if((function (){var and__11588__auto__ = coll;
if(and__11588__auto__){
return coll.cljs$core$IMapEntry$_key$arity$1;
} else {
return and__11588__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_key$arity$1(coll);
} else {
var x__12244__auto__ = (((coll == null))?null:coll);
return (function (){var or__11600__auto__ = (cljs.core._key[(function (){var G__20238 = x__12244__auto__;
return goog.typeOf(G__20238);
})()]);
if(or__11600__auto__){
return or__11600__auto__;
} else {
var or__11600__auto____$1 = (cljs.core._key["_"]);
if(or__11600__auto____$1){
return or__11600__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-key",coll);
}
}
})().call(null,coll);
}
});

cljs.core._val = (function _val(coll){
if((function (){var and__11588__auto__ = coll;
if(and__11588__auto__){
return coll.cljs$core$IMapEntry$_val$arity$1;
} else {
return and__11588__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_val$arity$1(coll);
} else {
var x__12244__auto__ = (((coll == null))?null:coll);
return (function (){var or__11600__auto__ = (cljs.core._val[(function (){var G__20242 = x__12244__auto__;
return goog.typeOf(G__20242);
})()]);
if(or__11600__auto__){
return or__11600__auto__;
} else {
var or__11600__auto____$1 = (cljs.core._val["_"]);
if(or__11600__auto____$1){
return or__11600__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-val",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISet = (function (){var obj20244 = {};
return obj20244;
})();

cljs.core._disjoin = (function _disjoin(coll,v){
if((function (){var and__11588__auto__ = coll;
if(and__11588__auto__){
return coll.cljs$core$ISet$_disjoin$arity$2;
} else {
return and__11588__auto__;
}
})()){
return coll.cljs$core$ISet$_disjoin$arity$2(coll,v);
} else {
var x__12244__auto__ = (((coll == null))?null:coll);
return (function (){var or__11600__auto__ = (cljs.core._disjoin[(function (){var G__20248 = x__12244__auto__;
return goog.typeOf(G__20248);
})()]);
if(or__11600__auto__){
return or__11600__auto__;
} else {
var or__11600__auto____$1 = (cljs.core._disjoin["_"]);
if(or__11600__auto____$1){
return or__11600__auto____$1;
} else {
throw cljs.core.missing_protocol("ISet.-disjoin",coll);
}
}
})().call(null,coll,v);
}
});


cljs.core.IStack = (function (){var obj20250 = {};
return obj20250;
})();

cljs.core._peek = (function _peek(coll){
if((function (){var and__11588__auto__ = coll;
if(and__11588__auto__){
return coll.cljs$core$IStack$_peek$arity$1;
} else {
return and__11588__auto__;
}
})()){
return coll.cljs$core$IStack$_peek$arity$1(coll);
} else {
var x__12244__auto__ = (((coll == null))?null:coll);
return (function (){var or__11600__auto__ = (cljs.core._peek[(function (){var G__20254 = x__12244__auto__;
return goog.typeOf(G__20254);
})()]);
if(or__11600__auto__){
return or__11600__auto__;
} else {
var or__11600__auto____$1 = (cljs.core._peek["_"]);
if(or__11600__auto____$1){
return or__11600__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-peek",coll);
}
}
})().call(null,coll);
}
});

cljs.core._pop = (function _pop(coll){
if((function (){var and__11588__auto__ = coll;
if(and__11588__auto__){
return coll.cljs$core$IStack$_pop$arity$1;
} else {
return and__11588__auto__;
}
})()){
return coll.cljs$core$IStack$_pop$arity$1(coll);
} else {
var x__12244__auto__ = (((coll == null))?null:coll);
return (function (){var or__11600__auto__ = (cljs.core._pop[(function (){var G__20258 = x__12244__auto__;
return goog.typeOf(G__20258);
})()]);
if(or__11600__auto__){
return or__11600__auto__;
} else {
var or__11600__auto____$1 = (cljs.core._pop["_"]);
if(or__11600__auto____$1){
return or__11600__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-pop",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IVector = (function (){var obj20260 = {};
return obj20260;
})();

cljs.core._assoc_n = (function _assoc_n(coll,n,val){
if((function (){var and__11588__auto__ = coll;
if(and__11588__auto__){
return coll.cljs$core$IVector$_assoc_n$arity$3;
} else {
return and__11588__auto__;
}
})()){
return coll.cljs$core$IVector$_assoc_n$arity$3(coll,n,val);
} else {
var x__12244__auto__ = (((coll == null))?null:coll);
return (function (){var or__11600__auto__ = (cljs.core._assoc_n[(function (){var G__20264 = x__12244__auto__;
return goog.typeOf(G__20264);
})()]);
if(or__11600__auto__){
return or__11600__auto__;
} else {
var or__11600__auto____$1 = (cljs.core._assoc_n["_"]);
if(or__11600__auto____$1){
return or__11600__auto____$1;
} else {
throw cljs.core.missing_protocol("IVector.-assoc-n",coll);
}
}
})().call(null,coll,n,val);
}
});


cljs.core.IDeref = (function (){var obj20266 = {};
return obj20266;
})();

cljs.core._deref = (function _deref(o){
if((function (){var and__11588__auto__ = o;
if(and__11588__auto__){
return o.cljs$core$IDeref$_deref$arity$1;
} else {
return and__11588__auto__;
}
})()){
return o.cljs$core$IDeref$_deref$arity$1(o);
} else {
var x__12244__auto__ = (((o == null))?null:o);
return (function (){var or__11600__auto__ = (cljs.core._deref[(function (){var G__20270 = x__12244__auto__;
return goog.typeOf(G__20270);
})()]);
if(or__11600__auto__){
return or__11600__auto__;
} else {
var or__11600__auto____$1 = (cljs.core._deref["_"]);
if(or__11600__auto____$1){
return or__11600__auto____$1;
} else {
throw cljs.core.missing_protocol("IDeref.-deref",o);
}
}
})().call(null,o);
}
});


cljs.core.IDerefWithTimeout = (function (){var obj20272 = {};
return obj20272;
})();

cljs.core._deref_with_timeout = (function _deref_with_timeout(o,msec,timeout_val){
if((function (){var and__11588__auto__ = o;
if(and__11588__auto__){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
} else {
return and__11588__auto__;
}
})()){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o,msec,timeout_val);
} else {
var x__12244__auto__ = (((o == null))?null:o);
return (function (){var or__11600__auto__ = (cljs.core._deref_with_timeout[(function (){var G__20276 = x__12244__auto__;
return goog.typeOf(G__20276);
})()]);
if(or__11600__auto__){
return or__11600__auto__;
} else {
var or__11600__auto____$1 = (cljs.core._deref_with_timeout["_"]);
if(or__11600__auto____$1){
return or__11600__auto____$1;
} else {
throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout",o);
}
}
})().call(null,o,msec,timeout_val);
}
});


cljs.core.IMeta = (function (){var obj20278 = {};
return obj20278;
})();

cljs.core._meta = (function _meta(o){
if((function (){var and__11588__auto__ = o;
if(and__11588__auto__){
return o.cljs$core$IMeta$_meta$arity$1;
} else {
return and__11588__auto__;
}
})()){
return o.cljs$core$IMeta$_meta$arity$1(o);
} else {
var x__12244__auto__ = (((o == null))?null:o);
return (function (){var or__11600__auto__ = (cljs.core._meta[(function (){var G__20282 = x__12244__auto__;
return goog.typeOf(G__20282);
})()]);
if(or__11600__auto__){
return or__11600__auto__;
} else {
var or__11600__auto____$1 = (cljs.core._meta["_"]);
if(or__11600__auto____$1){
return or__11600__auto____$1;
} else {
throw cljs.core.missing_protocol("IMeta.-meta",o);
}
}
})().call(null,o);
}
});


cljs.core.IWithMeta = (function (){var obj20284 = {};
return obj20284;
})();

cljs.core._with_meta = (function _with_meta(o,meta){
if((function (){var and__11588__auto__ = o;
if(and__11588__auto__){
return o.cljs$core$IWithMeta$_with_meta$arity$2;
} else {
return and__11588__auto__;
}
})()){
return o.cljs$core$IWithMeta$_with_meta$arity$2(o,meta);
} else {
var x__12244__auto__ = (((o == null))?null:o);
return (function (){var or__11600__auto__ = (cljs.core._with_meta[(function (){var G__20288 = x__12244__auto__;
return goog.typeOf(G__20288);
})()]);
if(or__11600__auto__){
return or__11600__auto__;
} else {
var or__11600__auto____$1 = (cljs.core._with_meta["_"]);
if(or__11600__auto____$1){
return or__11600__auto____$1;
} else {
throw cljs.core.missing_protocol("IWithMeta.-with-meta",o);
}
}
})().call(null,o,meta);
}
});


cljs.core.IReduce = (function (){var obj20290 = {};
return obj20290;
})();

cljs.core._reduce = (function() {
var _reduce = null;
var _reduce__2 = (function (coll,f){
if((function (){var and__11588__auto__ = coll;
if(and__11588__auto__){
return coll.cljs$core$IReduce$_reduce$arity$2;
} else {
return and__11588__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(coll,f);
} else {
var x__12244__auto__ = (((coll == null))?null:coll);
return (function (){var or__11600__auto__ = (cljs.core._reduce[(function (){var G__20296 = x__12244__auto__;
return goog.typeOf(G__20296);
})()]);
if(or__11600__auto__){
return or__11600__auto__;
} else {
var or__11600__auto____$1 = (cljs.core._reduce["_"]);
if(or__11600__auto____$1){
return or__11600__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f);
}
});
var _reduce__3 = (function (coll,f,start){
if((function (){var and__11588__auto__ = coll;
if(and__11588__auto__){
return coll.cljs$core$IReduce$_reduce$arity$3;
} else {
return and__11588__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(coll,f,start);
} else {
var x__12244__auto__ = (((coll == null))?null:coll);
return (function (){var or__11600__auto__ = (cljs.core._reduce[(function (){var G__20298 = x__12244__auto__;
return goog.typeOf(G__20298);
})()]);
if(or__11600__auto__){
return or__11600__auto__;
} else {
var or__11600__auto____$1 = (cljs.core._reduce["_"]);
if(or__11600__auto____$1){
return or__11600__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f,start);
}
});
_reduce = function(coll,f,start){
switch(arguments.length){
case 2:
return _reduce__2.call(this,coll,f);
case 3:
return _reduce__3.call(this,coll,f,start);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
_reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
return _reduce;
})()
;


cljs.core.IKVReduce = (function (){var obj20300 = {};
return obj20300;
})();

cljs.core._kv_reduce = (function _kv_reduce(coll,f,init){
if((function (){var and__11588__auto__ = coll;
if(and__11588__auto__){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
} else {
return and__11588__auto__;
}
})()){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll,f,init);
} else {
var x__12244__auto__ = (((coll == null))?null:coll);
return (function (){var or__11600__auto__ = (cljs.core._kv_reduce[(function (){var G__20304 = x__12244__auto__;
return goog.typeOf(G__20304);
})()]);
if(or__11600__auto__){
return or__11600__auto__;
} else {
var or__11600__auto____$1 = (cljs.core._kv_reduce["_"]);
if(or__11600__auto____$1){
return or__11600__auto____$1;
} else {
throw cljs.core.missing_protocol("IKVReduce.-kv-reduce",coll);
}
}
})().call(null,coll,f,init);
}
});


cljs.core.IEquiv = (function (){var obj20306 = {};
return obj20306;
})();

cljs.core._equiv = (function _equiv(o,other){
if((function (){var and__11588__auto__ = o;
if(and__11588__auto__){
return o.cljs$core$IEquiv$_equiv$arity$2;
} else {
return and__11588__auto__;
}
})()){
return o.cljs$core$IEquiv$_equiv$arity$2(o,other);
} else {
var x__12244__auto__ = (((o == null))?null:o);
return (function (){var or__11600__auto__ = (cljs.core._equiv[(function (){var G__20310 = x__12244__auto__;
return goog.typeOf(G__20310);
})()]);
if(or__11600__auto__){
return or__11600__auto__;
} else {
var or__11600__auto____$1 = (cljs.core._equiv["_"]);
if(or__11600__auto____$1){
return or__11600__auto____$1;
} else {
throw cljs.core.missing_protocol("IEquiv.-equiv",o);
}
}
})().call(null,o,other);
}
});


cljs.core.IHash = (function (){var obj20312 = {};
return obj20312;
})();

cljs.core._hash = (function _hash(o){
if((function (){var and__11588__auto__ = o;
if(and__11588__auto__){
return o.cljs$core$IHash$_hash$arity$1;
} else {
return and__11588__auto__;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(o);
} else {
var x__12244__auto__ = (((o == null))?null:o);
return (function (){var or__11600__auto__ = (cljs.core._hash[(function (){var G__20316 = x__12244__auto__;
return goog.typeOf(G__20316);
})()]);
if(or__11600__auto__){
return or__11600__auto__;
} else {
var or__11600__auto____$1 = (cljs.core._hash["_"]);
if(or__11600__auto____$1){
return or__11600__auto____$1;
} else {
throw cljs.core.missing_protocol("IHash.-hash",o);
}
}
})().call(null,o);
}
});


cljs.core.ISeqable = (function (){var obj20318 = {};
return obj20318;
})();

cljs.core._seq = (function _seq(o){
if((function (){var and__11588__auto__ = o;
if(and__11588__auto__){
return o.cljs$core$ISeqable$_seq$arity$1;
} else {
return and__11588__auto__;
}
})()){
return o.cljs$core$ISeqable$_seq$arity$1(o);
} else {
var x__12244__auto__ = (((o == null))?null:o);
return (function (){var or__11600__auto__ = (cljs.core._seq[(function (){var G__20322 = x__12244__auto__;
return goog.typeOf(G__20322);
})()]);
if(or__11600__auto__){
return or__11600__auto__;
} else {
var or__11600__auto____$1 = (cljs.core._seq["_"]);
if(or__11600__auto____$1){
return or__11600__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeqable.-seq",o);
}
}
})().call(null,o);
}
});


cljs.core.ISequential = (function (){var obj20324 = {};
return obj20324;
})();


cljs.core.IList = (function (){var obj20326 = {};
return obj20326;
})();


cljs.core.IRecord = (function (){var obj20328 = {};
return obj20328;
})();


cljs.core.IReversible = (function (){var obj20330 = {};
return obj20330;
})();

cljs.core._rseq = (function _rseq(coll){
if((function (){var and__11588__auto__ = coll;
if(and__11588__auto__){
return coll.cljs$core$IReversible$_rseq$arity$1;
} else {
return and__11588__auto__;
}
})()){
return coll.cljs$core$IReversible$_rseq$arity$1(coll);
} else {
var x__12244__auto__ = (((coll == null))?null:coll);
return (function (){var or__11600__auto__ = (cljs.core._rseq[(function (){var G__20334 = x__12244__auto__;
return goog.typeOf(G__20334);
})()]);
if(or__11600__auto__){
return or__11600__auto__;
} else {
var or__11600__auto____$1 = (cljs.core._rseq["_"]);
if(or__11600__auto____$1){
return or__11600__auto____$1;
} else {
throw cljs.core.missing_protocol("IReversible.-rseq",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISorted = (function (){var obj20336 = {};
return obj20336;
})();

cljs.core._sorted_seq = (function _sorted_seq(coll,ascending_QMARK_){
if((function (){var and__11588__auto__ = coll;
if(and__11588__auto__){
return coll.cljs$core$ISorted$_sorted_seq$arity$2;
} else {
return and__11588__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll,ascending_QMARK_);
} else {
var x__12244__auto__ = (((coll == null))?null:coll);
return (function (){var or__11600__auto__ = (cljs.core._sorted_seq[(function (){var G__20340 = x__12244__auto__;
return goog.typeOf(G__20340);
})()]);
if(or__11600__auto__){
return or__11600__auto__;
} else {
var or__11600__auto____$1 = (cljs.core._sorted_seq["_"]);
if(or__11600__auto____$1){
return or__11600__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq",coll);
}
}
})().call(null,coll,ascending_QMARK_);
}
});

cljs.core._sorted_seq_from = (function _sorted_seq_from(coll,k,ascending_QMARK_){
if((function (){var and__11588__auto__ = coll;
if(and__11588__auto__){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
} else {
return and__11588__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll,k,ascending_QMARK_);
} else {
var x__12244__auto__ = (((coll == null))?null:coll);
return (function (){var or__11600__auto__ = (cljs.core._sorted_seq_from[(function (){var G__20344 = x__12244__auto__;
return goog.typeOf(G__20344);
})()]);
if(or__11600__auto__){
return or__11600__auto__;
} else {
var or__11600__auto____$1 = (cljs.core._sorted_seq_from["_"]);
if(or__11600__auto____$1){
return or__11600__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq-from",coll);
}
}
})().call(null,coll,k,ascending_QMARK_);
}
});

cljs.core._entry_key = (function _entry_key(coll,entry){
if((function (){var and__11588__auto__ = coll;
if(and__11588__auto__){
return coll.cljs$core$ISorted$_entry_key$arity$2;
} else {
return and__11588__auto__;
}
})()){
return coll.cljs$core$ISorted$_entry_key$arity$2(coll,entry);
} else {
var x__12244__auto__ = (((coll == null))?null:coll);
return (function (){var or__11600__auto__ = (cljs.core._entry_key[(function (){var G__20348 = x__12244__auto__;
return goog.typeOf(G__20348);
})()]);
if(or__11600__auto__){
return or__11600__auto__;
} else {
var or__11600__auto____$1 = (cljs.core._entry_key["_"]);
if(or__11600__auto____$1){
return or__11600__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-entry-key",coll);
}
}
})().call(null,coll,entry);
}
});

cljs.core._comparator = (function _comparator(coll){
if((function (){var and__11588__auto__ = coll;
if(and__11588__auto__){
return coll.cljs$core$ISorted$_comparator$arity$1;
} else {
return and__11588__auto__;
}
})()){
return coll.cljs$core$ISorted$_comparator$arity$1(coll);
} else {
var x__12244__auto__ = (((coll == null))?null:coll);
return (function (){var or__11600__auto__ = (cljs.core._comparator[(function (){var G__20352 = x__12244__auto__;
return goog.typeOf(G__20352);
})()]);
if(or__11600__auto__){
return or__11600__auto__;
} else {
var or__11600__auto____$1 = (cljs.core._comparator["_"]);
if(or__11600__auto____$1){
return or__11600__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-comparator",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IWriter = (function (){var obj20354 = {};
return obj20354;
})();

cljs.core._write = (function _write(writer,s){
if((function (){var and__11588__auto__ = writer;
if(and__11588__auto__){
return writer.cljs$core$IWriter$_write$arity$2;
} else {
return and__11588__auto__;
}
})()){
return writer.cljs$core$IWriter$_write$arity$2(writer,s);
} else {
var x__12244__auto__ = (((writer == null))?null:writer);
return (function (){var or__11600__auto__ = (cljs.core._write[(function (){var G__20358 = x__12244__auto__;
return goog.typeOf(G__20358);
})()]);
if(or__11600__auto__){
return or__11600__auto__;
} else {
var or__11600__auto____$1 = (cljs.core._write["_"]);
if(or__11600__auto____$1){
return or__11600__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-write",writer);
}
}
})().call(null,writer,s);
}
});

cljs.core._flush = (function _flush(writer){
if((function (){var and__11588__auto__ = writer;
if(and__11588__auto__){
return writer.cljs$core$IWriter$_flush$arity$1;
} else {
return and__11588__auto__;
}
})()){
return writer.cljs$core$IWriter$_flush$arity$1(writer);
} else {
var x__12244__auto__ = (((writer == null))?null:writer);
return (function (){var or__11600__auto__ = (cljs.core._flush[(function (){var G__20362 = x__12244__auto__;
return goog.typeOf(G__20362);
})()]);
if(or__11600__auto__){
return or__11600__auto__;
} else {
var or__11600__auto____$1 = (cljs.core._flush["_"]);
if(or__11600__auto____$1){
return or__11600__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-flush",writer);
}
}
})().call(null,writer);
}
});


cljs.core.IPrintWithWriter = (function (){var obj20364 = {};
return obj20364;
})();

cljs.core._pr_writer = (function _pr_writer(o,writer,opts){
if((function (){var and__11588__auto__ = o;
if(and__11588__auto__){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
} else {
return and__11588__auto__;
}
})()){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o,writer,opts);
} else {
var x__12244__auto__ = (((o == null))?null:o);
return (function (){var or__11600__auto__ = (cljs.core._pr_writer[(function (){var G__20368 = x__12244__auto__;
return goog.typeOf(G__20368);
})()]);
if(or__11600__auto__){
return or__11600__auto__;
} else {
var or__11600__auto____$1 = (cljs.core._pr_writer["_"]);
if(or__11600__auto____$1){
return or__11600__auto____$1;
} else {
throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer",o);
}
}
})().call(null,o,writer,opts);
}
});


cljs.core.IPending = (function (){var obj20370 = {};
return obj20370;
})();

cljs.core._realized_QMARK_ = (function _realized_QMARK_(d){
if((function (){var and__11588__auto__ = d;
if(and__11588__auto__){
return d.cljs$core$IPending$_realized_QMARK_$arity$1;
} else {
return and__11588__auto__;
}
})()){
return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
} else {
var x__12244__auto__ = (((d == null))?null:d);
return (function (){var or__11600__auto__ = (cljs.core._realized_QMARK_[(function (){var G__20374 = x__12244__auto__;
return goog.typeOf(G__20374);
})()]);
if(or__11600__auto__){
return or__11600__auto__;
} else {
var or__11600__auto____$1 = (cljs.core._realized_QMARK_["_"]);
if(or__11600__auto____$1){
return or__11600__auto____$1;
} else {
throw cljs.core.missing_protocol("IPending.-realized?",d);
}
}
})().call(null,d);
}
});


cljs.core.IWatchable = (function (){var obj20376 = {};
return obj20376;
})();

cljs.core._notify_watches = (function _notify_watches(this$,oldval,newval){
if((function (){var and__11588__auto__ = this$;
if(and__11588__auto__){
return this$.cljs$core$IWatchable$_notify_watches$arity$3;
} else {
return and__11588__auto__;
}
})()){
return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$,oldval,newval);
} else {
var x__12244__auto__ = (((this$ == null))?null:this$);
return (function (){var or__11600__auto__ = (cljs.core._notify_watches[(function (){var G__20380 = x__12244__auto__;
return goog.typeOf(G__20380);
})()]);
if(or__11600__auto__){
return or__11600__auto__;
} else {
var or__11600__auto____$1 = (cljs.core._notify_watches["_"]);
if(or__11600__auto____$1){
return or__11600__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-notify-watches",this$);
}
}
})().call(null,this$,oldval,newval);
}
});

cljs.core._add_watch = (function _add_watch(this$,key,f){
if((function (){var and__11588__auto__ = this$;
if(and__11588__auto__){
return this$.cljs$core$IWatchable$_add_watch$arity$3;
} else {
return and__11588__auto__;
}
})()){
return this$.cljs$core$IWatchable$_add_watch$arity$3(this$,key,f);
} else {
var x__12244__auto__ = (((this$ == null))?null:this$);
return (function (){var or__11600__auto__ = (cljs.core._add_watch[(function (){var G__20384 = x__12244__auto__;
return goog.typeOf(G__20384);
})()]);
if(or__11600__auto__){
return or__11600__auto__;
} else {
var or__11600__auto____$1 = (cljs.core._add_watch["_"]);
if(or__11600__auto____$1){
return or__11600__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-add-watch",this$);
}
}
})().call(null,this$,key,f);
}
});

cljs.core._remove_watch = (function _remove_watch(this$,key){
if((function (){var and__11588__auto__ = this$;
if(and__11588__auto__){
return this$.cljs$core$IWatchable$_remove_watch$arity$2;
} else {
return and__11588__auto__;
}
})()){
return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$,key);
} else {
var x__12244__auto__ = (((this$ == null))?null:this$);
return (function (){var or__11600__auto__ = (cljs.core._remove_watch[(function (){var G__20388 = x__12244__auto__;
return goog.typeOf(G__20388);
})()]);
if(or__11600__auto__){
return or__11600__auto__;
} else {
var or__11600__auto____$1 = (cljs.core._remove_watch["_"]);
if(or__11600__auto____$1){
return or__11600__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-remove-watch",this$);
}
}
})().call(null,this$,key);
}
});


cljs.core.IEditableCollection = (function (){var obj20390 = {};
return obj20390;
})();

cljs.core._as_transient = (function _as_transient(coll){
if((function (){var and__11588__auto__ = coll;
if(and__11588__auto__){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
} else {
return and__11588__auto__;
}
})()){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
} else {
var x__12244__auto__ = (((coll == null))?null:coll);
return (function (){var or__11600__auto__ = (cljs.core._as_transient[(function (){var G__20394 = x__12244__auto__;
return goog.typeOf(G__20394);
})()]);
if(or__11600__auto__){
return or__11600__auto__;
} else {
var or__11600__auto____$1 = (cljs.core._as_transient["_"]);
if(or__11600__auto____$1){
return or__11600__auto____$1;
} else {
throw cljs.core.missing_protocol("IEditableCollection.-as-transient",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ITransientCollection = (function (){var obj20396 = {};
return obj20396;
})();

cljs.core._conj_BANG_ = (function _conj_BANG_(tcoll,val){
if((function (){var and__11588__auto__ = tcoll;
if(and__11588__auto__){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
} else {
return and__11588__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll,val);
} else {
var x__12244__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__11600__auto__ = (cljs.core._conj_BANG_[(function (){var G__20400 = x__12244__auto__;
return goog.typeOf(G__20400);
})()]);
if(or__11600__auto__){
return or__11600__auto__;
} else {
var or__11600__auto____$1 = (cljs.core._conj_BANG_["_"]);
if(or__11600__auto____$1){
return or__11600__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-conj!",tcoll);
}
}
})().call(null,tcoll,val);
}
});

cljs.core._persistent_BANG_ = (function _persistent_BANG_(tcoll){
if((function (){var and__11588__auto__ = tcoll;
if(and__11588__auto__){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
} else {
return and__11588__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
} else {
var x__12244__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__11600__auto__ = (cljs.core._persistent_BANG_[(function (){var G__20404 = x__12244__auto__;
return goog.typeOf(G__20404);
})()]);
if(or__11600__auto__){
return or__11600__auto__;
} else {
var or__11600__auto____$1 = (cljs.core._persistent_BANG_["_"]);
if(or__11600__auto____$1){
return or__11600__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-persistent!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientAssociative = (function (){var obj20406 = {};
return obj20406;
})();

cljs.core._assoc_BANG_ = (function _assoc_BANG_(tcoll,key,val){
if((function (){var and__11588__auto__ = tcoll;
if(and__11588__auto__){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
} else {
return and__11588__auto__;
}
})()){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll,key,val);
} else {
var x__12244__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__11600__auto__ = (cljs.core._assoc_BANG_[(function (){var G__20410 = x__12244__auto__;
return goog.typeOf(G__20410);
})()]);
if(or__11600__auto__){
return or__11600__auto__;
} else {
var or__11600__auto____$1 = (cljs.core._assoc_BANG_["_"]);
if(or__11600__auto____$1){
return or__11600__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientAssociative.-assoc!",tcoll);
}
}
})().call(null,tcoll,key,val);
}
});


cljs.core.ITransientMap = (function (){var obj20412 = {};
return obj20412;
})();

cljs.core._dissoc_BANG_ = (function _dissoc_BANG_(tcoll,key){
if((function (){var and__11588__auto__ = tcoll;
if(and__11588__auto__){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
} else {
return and__11588__auto__;
}
})()){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll,key);
} else {
var x__12244__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__11600__auto__ = (cljs.core._dissoc_BANG_[(function (){var G__20416 = x__12244__auto__;
return goog.typeOf(G__20416);
})()]);
if(or__11600__auto__){
return or__11600__auto__;
} else {
var or__11600__auto____$1 = (cljs.core._dissoc_BANG_["_"]);
if(or__11600__auto____$1){
return or__11600__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientMap.-dissoc!",tcoll);
}
}
})().call(null,tcoll,key);
}
});


cljs.core.ITransientVector = (function (){var obj20418 = {};
return obj20418;
})();

cljs.core._assoc_n_BANG_ = (function _assoc_n_BANG_(tcoll,n,val){
if((function (){var and__11588__auto__ = tcoll;
if(and__11588__auto__){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
} else {
return and__11588__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll,n,val);
} else {
var x__12244__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__11600__auto__ = (cljs.core._assoc_n_BANG_[(function (){var G__20422 = x__12244__auto__;
return goog.typeOf(G__20422);
})()]);
if(or__11600__auto__){
return or__11600__auto__;
} else {
var or__11600__auto____$1 = (cljs.core._assoc_n_BANG_["_"]);
if(or__11600__auto____$1){
return or__11600__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-assoc-n!",tcoll);
}
}
})().call(null,tcoll,n,val);
}
});

cljs.core._pop_BANG_ = (function _pop_BANG_(tcoll){
if((function (){var and__11588__auto__ = tcoll;
if(and__11588__auto__){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
} else {
return and__11588__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
} else {
var x__12244__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__11600__auto__ = (cljs.core._pop_BANG_[(function (){var G__20426 = x__12244__auto__;
return goog.typeOf(G__20426);
})()]);
if(or__11600__auto__){
return or__11600__auto__;
} else {
var or__11600__auto____$1 = (cljs.core._pop_BANG_["_"]);
if(or__11600__auto____$1){
return or__11600__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-pop!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientSet = (function (){var obj20428 = {};
return obj20428;
})();

cljs.core._disjoin_BANG_ = (function _disjoin_BANG_(tcoll,v){
if((function (){var and__11588__auto__ = tcoll;
if(and__11588__auto__){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
} else {
return and__11588__auto__;
}
})()){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll,v);
} else {
var x__12244__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__11600__auto__ = (cljs.core._disjoin_BANG_[(function (){var G__20432 = x__12244__auto__;
return goog.typeOf(G__20432);
})()]);
if(or__11600__auto__){
return or__11600__auto__;
} else {
var or__11600__auto____$1 = (cljs.core._disjoin_BANG_["_"]);
if(or__11600__auto____$1){
return or__11600__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientSet.-disjoin!",tcoll);
}
}
})().call(null,tcoll,v);
}
});


cljs.core.IComparable = (function (){var obj20434 = {};
return obj20434;
})();

cljs.core._compare = (function _compare(x,y){
if((function (){var and__11588__auto__ = x;
if(and__11588__auto__){
return x.cljs$core$IComparable$_compare$arity$2;
} else {
return and__11588__auto__;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(x,y);
} else {
var x__12244__auto__ = (((x == null))?null:x);
return (function (){var or__11600__auto__ = (cljs.core._compare[(function (){var G__20438 = x__12244__auto__;
return goog.typeOf(G__20438);
})()]);
if(or__11600__auto__){
return or__11600__auto__;
} else {
var or__11600__auto____$1 = (cljs.core._compare["_"]);
if(or__11600__auto____$1){
return or__11600__auto____$1;
} else {
throw cljs.core.missing_protocol("IComparable.-compare",x);
}
}
})().call(null,x,y);
}
});


cljs.core.IChunk = (function (){var obj20440 = {};
return obj20440;
})();

cljs.core._drop_first = (function _drop_first(coll){
if((function (){var and__11588__auto__ = coll;
if(and__11588__auto__){
return coll.cljs$core$IChunk$_drop_first$arity$1;
} else {
return and__11588__auto__;
}
})()){
return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
} else {
var x__12244__auto__ = (((coll == null))?null:coll);
return (function (){var or__11600__auto__ = (cljs.core._drop_first[(function (){var G__20444 = x__12244__auto__;
return goog.typeOf(G__20444);
})()]);
if(or__11600__auto__){
return or__11600__auto__;
} else {
var or__11600__auto____$1 = (cljs.core._drop_first["_"]);
if(or__11600__auto____$1){
return or__11600__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunk.-drop-first",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedSeq = (function (){var obj20446 = {};
return obj20446;
})();

cljs.core._chunked_first = (function _chunked_first(coll){
if((function (){var and__11588__auto__ = coll;
if(and__11588__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
} else {
return and__11588__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
} else {
var x__12244__auto__ = (((coll == null))?null:coll);
return (function (){var or__11600__auto__ = (cljs.core._chunked_first[(function (){var G__20450 = x__12244__auto__;
return goog.typeOf(G__20450);
})()]);
if(or__11600__auto__){
return or__11600__auto__;
} else {
var or__11600__auto____$1 = (cljs.core._chunked_first["_"]);
if(or__11600__auto____$1){
return or__11600__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._chunked_rest = (function _chunked_rest(coll){
if((function (){var and__11588__auto__ = coll;
if(and__11588__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
} else {
return and__11588__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
} else {
var x__12244__auto__ = (((coll == null))?null:coll);
return (function (){var or__11600__auto__ = (cljs.core._chunked_rest[(function (){var G__20454 = x__12244__auto__;
return goog.typeOf(G__20454);
})()]);
if(or__11600__auto__){
return or__11600__auto__;
} else {
var or__11600__auto____$1 = (cljs.core._chunked_rest["_"]);
if(or__11600__auto____$1){
return or__11600__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedNext = (function (){var obj20456 = {};
return obj20456;
})();

cljs.core._chunked_next = (function _chunked_next(coll){
if((function (){var and__11588__auto__ = coll;
if(and__11588__auto__){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
} else {
return and__11588__auto__;
}
})()){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
} else {
var x__12244__auto__ = (((coll == null))?null:coll);
return (function (){var or__11600__auto__ = (cljs.core._chunked_next[(function (){var G__20460 = x__12244__auto__;
return goog.typeOf(G__20460);
})()]);
if(or__11600__auto__){
return or__11600__auto__;
} else {
var or__11600__auto____$1 = (cljs.core._chunked_next["_"]);
if(or__11600__auto____$1){
return or__11600__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedNext.-chunked-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INamed = (function (){var obj20462 = {};
return obj20462;
})();

cljs.core._name = (function _name(x){
if((function (){var and__11588__auto__ = x;
if(and__11588__auto__){
return x.cljs$core$INamed$_name$arity$1;
} else {
return and__11588__auto__;
}
})()){
return x.cljs$core$INamed$_name$arity$1(x);
} else {
var x__12244__auto__ = (((x == null))?null:x);
return (function (){var or__11600__auto__ = (cljs.core._name[(function (){var G__20466 = x__12244__auto__;
return goog.typeOf(G__20466);
})()]);
if(or__11600__auto__){
return or__11600__auto__;
} else {
var or__11600__auto____$1 = (cljs.core._name["_"]);
if(or__11600__auto____$1){
return or__11600__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-name",x);
}
}
})().call(null,x);
}
});

cljs.core._namespace = (function _namespace(x){
if((function (){var and__11588__auto__ = x;
if(and__11588__auto__){
return x.cljs$core$INamed$_namespace$arity$1;
} else {
return and__11588__auto__;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(x);
} else {
var x__12244__auto__ = (((x == null))?null:x);
return (function (){var or__11600__auto__ = (cljs.core._namespace[(function (){var G__20470 = x__12244__auto__;
return goog.typeOf(G__20470);
})()]);
if(or__11600__auto__){
return or__11600__auto__;
} else {
var or__11600__auto____$1 = (cljs.core._namespace["_"]);
if(or__11600__auto____$1){
return or__11600__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-namespace",x);
}
}
})().call(null,x);
}
});


cljs.core.IAtom = (function (){var obj20472 = {};
return obj20472;
})();


cljs.core.IReset = (function (){var obj20474 = {};
return obj20474;
})();

cljs.core._reset_BANG_ = (function _reset_BANG_(o,new_value){
if((function (){var and__11588__auto__ = o;
if(and__11588__auto__){
return o.cljs$core$IReset$_reset_BANG_$arity$2;
} else {
return and__11588__auto__;
}
})()){
return o.cljs$core$IReset$_reset_BANG_$arity$2(o,new_value);
} else {
var x__12244__auto__ = (((o == null))?null:o);
return (function (){var or__11600__auto__ = (cljs.core._reset_BANG_[(function (){var G__20478 = x__12244__auto__;
return goog.typeOf(G__20478);
})()]);
if(or__11600__auto__){
return or__11600__auto__;
} else {
var or__11600__auto____$1 = (cljs.core._reset_BANG_["_"]);
if(or__11600__auto____$1){
return or__11600__auto____$1;
} else {
throw cljs.core.missing_protocol("IReset.-reset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.ISwap = (function (){var obj20480 = {};
return obj20480;
})();

cljs.core._swap_BANG_ = (function() {
var _swap_BANG_ = null;
var _swap_BANG___2 = (function (o,f){
if((function (){var and__11588__auto__ = o;
if(and__11588__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$2;
} else {
return and__11588__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$2(o,f);
} else {
var x__12244__auto__ = (((o == null))?null:o);
return (function (){var or__11600__auto__ = (cljs.core._swap_BANG_[(function (){var G__20490 = x__12244__auto__;
return goog.typeOf(G__20490);
})()]);
if(or__11600__auto__){
return or__11600__auto__;
} else {
var or__11600__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__11600__auto____$1){
return or__11600__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f);
}
});
var _swap_BANG___3 = (function (o,f,a){
if((function (){var and__11588__auto__ = o;
if(and__11588__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$3;
} else {
return and__11588__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$3(o,f,a);
} else {
var x__12244__auto__ = (((o == null))?null:o);
return (function (){var or__11600__auto__ = (cljs.core._swap_BANG_[(function (){var G__20492 = x__12244__auto__;
return goog.typeOf(G__20492);
})()]);
if(or__11600__auto__){
return or__11600__auto__;
} else {
var or__11600__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__11600__auto____$1){
return or__11600__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a);
}
});
var _swap_BANG___4 = (function (o,f,a,b){
if((function (){var and__11588__auto__ = o;
if(and__11588__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$4;
} else {
return and__11588__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$4(o,f,a,b);
} else {
var x__12244__auto__ = (((o == null))?null:o);
return (function (){var or__11600__auto__ = (cljs.core._swap_BANG_[(function (){var G__20494 = x__12244__auto__;
return goog.typeOf(G__20494);
})()]);
if(or__11600__auto__){
return or__11600__auto__;
} else {
var or__11600__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__11600__auto____$1){
return or__11600__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b);
}
});
var _swap_BANG___5 = (function (o,f,a,b,xs){
if((function (){var and__11588__auto__ = o;
if(and__11588__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$5;
} else {
return and__11588__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$5(o,f,a,b,xs);
} else {
var x__12244__auto__ = (((o == null))?null:o);
return (function (){var or__11600__auto__ = (cljs.core._swap_BANG_[(function (){var G__20496 = x__12244__auto__;
return goog.typeOf(G__20496);
})()]);
if(or__11600__auto__){
return or__11600__auto__;
} else {
var or__11600__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__11600__auto____$1){
return or__11600__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b,xs);
}
});
_swap_BANG_ = function(o,f,a,b,xs){
switch(arguments.length){
case 2:
return _swap_BANG___2.call(this,o,f);
case 3:
return _swap_BANG___3.call(this,o,f,a);
case 4:
return _swap_BANG___4.call(this,o,f,a,b);
case 5:
return _swap_BANG___5.call(this,o,f,a,b,xs);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_swap_BANG_.cljs$core$IFn$_invoke$arity$2 = _swap_BANG___2;
_swap_BANG_.cljs$core$IFn$_invoke$arity$3 = _swap_BANG___3;
_swap_BANG_.cljs$core$IFn$_invoke$arity$4 = _swap_BANG___4;
_swap_BANG_.cljs$core$IFn$_invoke$arity$5 = _swap_BANG___5;
return _swap_BANG_;
})()
;


cljs.core.IVolatile = (function (){var obj20498 = {};
return obj20498;
})();

cljs.core._vreset_BANG_ = (function _vreset_BANG_(o,new_value){
if((function (){var and__11588__auto__ = o;
if(and__11588__auto__){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2;
} else {
return and__11588__auto__;
}
})()){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o,new_value);
} else {
var x__12244__auto__ = (((o == null))?null:o);
return (function (){var or__11600__auto__ = (cljs.core._vreset_BANG_[(function (){var G__20502 = x__12244__auto__;
return goog.typeOf(G__20502);
})()]);
if(or__11600__auto__){
return or__11600__auto__;
} else {
var or__11600__auto____$1 = (cljs.core._vreset_BANG_["_"]);
if(or__11600__auto____$1){
return or__11600__auto____$1;
} else {
throw cljs.core.missing_protocol("IVolatile.-vreset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.IIterable = (function (){var obj20504 = {};
return obj20504;
})();

cljs.core._iterator = (function _iterator(coll){
if((function (){var and__11588__auto__ = coll;
if(and__11588__auto__){
return coll.cljs$core$IIterable$_iterator$arity$1;
} else {
return and__11588__auto__;
}
})()){
return coll.cljs$core$IIterable$_iterator$arity$1(coll);
} else {
var x__12244__auto__ = (((coll == null))?null:coll);
return (function (){var or__11600__auto__ = (cljs.core._iterator[(function (){var G__20508 = x__12244__auto__;
return goog.typeOf(G__20508);
})()]);
if(or__11600__auto__){
return or__11600__auto__;
} else {
var or__11600__auto____$1 = (cljs.core._iterator["_"]);
if(or__11600__auto____$1){
return or__11600__auto____$1;
} else {
throw cljs.core.missing_protocol("IIterable.-iterator",coll);
}
}
})().call(null,coll);
}
});


/**
* @constructor
*/
cljs.core.StringBufferWriter = (function (sb){
this.sb = sb;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 1073741824;
})
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = (function (_,s){
var self__ = this;
var ___$1 = this;
return self__.sb.append(s);
});

cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return null;
});

cljs.core.StringBufferWriter.cljs$lang$type = true;

cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";

cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = (function (this__12187__auto__,writer__12188__auto__,opt__12189__auto__){
return cljs.core._write(writer__12188__auto__,"cljs.core/StringBufferWriter");
});

cljs.core.__GT_StringBufferWriter = (function __GT_StringBufferWriter(sb){
return (new cljs.core.StringBufferWriter(sb));
});

/**
* Support so that collections can implement toString without
* loading all the printing machinery.
*/
cljs.core.pr_str_STAR_ = (function pr_str_STAR_(obj){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,cljs.core.pr_opts());

writer.cljs$core$IWriter$_flush$arity$1(null);

return [cljs.core.str(sb)].join('');
});
cljs.core.int_rotate_left = (function int_rotate_left(x,n){
return ((x << n) | (x >>> (- n)));
});
if((typeof Math.imul !== 'undefined') && (!(((function (){var G__20511 = (4294967295);
var G__20512 = (5);
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__20511,G__20512) : Math.imul.call(null,G__20511,G__20512));
})() === (0))))){
cljs.core.imul = (function imul(a,b){
var G__20515 = a;
var G__20516 = b;
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__20515,G__20516) : Math.imul.call(null,G__20515,G__20516));
});
} else {
cljs.core.imul = (function imul(a,b){
var ah = ((a >>> (16)) & (65535));
var al = (a & (65535));
var bh = ((b >>> (16)) & (65535));
var bl = (b & (65535));
return (((al * bl) + ((((ah * bl) + (al * bh)) << (16)) >>> (0))) | (0));
});
}
cljs.core.m3_seed = (0);
cljs.core.m3_C1 = (3432918353);
cljs.core.m3_C2 = (461845907);
cljs.core.m3_mix_K1 = (function m3_mix_K1(k1){
return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(k1,cljs.core.m3_C1),(15)),cljs.core.m3_C2);
});
cljs.core.m3_mix_H1 = (function m3_mix_H1(h1,k1){
return (cljs.core.imul(cljs.core.int_rotate_left((h1 ^ k1),(13)),(5)) + (3864292196));
});
cljs.core.m3_fmix = (function m3_fmix(h1,len){
var h1__$1 = h1;
var h1__$2 = (h1__$1 ^ len);
var h1__$3 = (h1__$2 ^ (h1__$2 >>> (16)));
var h1__$4 = cljs.core.imul(h1__$3,(2246822507));
var h1__$5 = (h1__$4 ^ (h1__$4 >>> (13)));
var h1__$6 = cljs.core.imul(h1__$5,(3266489909));
var h1__$7 = (h1__$6 ^ (h1__$6 >>> (16)));
return h1__$7;
});
cljs.core.m3_hash_int = (function m3_hash_int(in$){
if((in$ === (0))){
return in$;
} else {
var k1 = cljs.core.m3_mix_K1(in$);
var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed,k1);
return cljs.core.m3_fmix(h1,(4));
}
});
cljs.core.m3_hash_unencoded_chars = (function m3_hash_unencoded_chars(in$){
var h1 = (function (){var i = (1);
var h1 = cljs.core.m3_seed;
while(true){
if((i < in$.length)){
var G__20517 = (i + (2));
var G__20518 = cljs.core.m3_mix_H1(h1,cljs.core.m3_mix_K1((in$.charCodeAt((i - (1))) | (in$.charCodeAt(i) << (16)))));
i = G__20517;
h1 = G__20518;
continue;
} else {
return h1;
}
break;
}
})();
var h1__$1 = ((((in$.length & (1)) === (1)))?(h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt((in$.length - (1))))):h1);
return cljs.core.m3_fmix(h1__$1,cljs.core.imul((2),in$.length));
});



cljs.core.string_hash_cache = (function (){var obj20520 = {};
return obj20520;
})();
cljs.core.string_hash_cache_count = (0);
cljs.core.hash_string_STAR_ = (function hash_string_STAR_(s){
if(!((s == null))){
var len = s.length;
if((len > (0))){
var i = (0);
var hash = (0);
while(true){
if((i < len)){
var G__20521 = (i + (1));
var G__20522 = (cljs.core.imul((31),hash) + s.charCodeAt(i));
i = G__20521;
hash = G__20522;
continue;
} else {
return hash;
}
break;
}
} else {
return (0);
}
} else {
return (0);
}
});
cljs.core.add_to_string_hash_cache = (function add_to_string_hash_cache(k){
var h = cljs.core.hash_string_STAR_(k);
(cljs.core.string_hash_cache[k] = h);

cljs.core.string_hash_cache_count = (cljs.core.string_hash_cache_count + (1));

return h;
});
cljs.core.hash_string = (function hash_string(k){
if((cljs.core.string_hash_cache_count > (255))){
cljs.core.string_hash_cache = (function (){var obj20526 = {};
return obj20526;
})();

cljs.core.string_hash_cache_count = (0);
} else {
}

var h = (cljs.core.string_hash_cache[k]);
if(typeof h === 'number'){
return h;
} else {
return cljs.core.add_to_string_hash_cache(k);
}
});
cljs.core.hash = (function hash(o){
if((function (){var G__20529 = o;
if(G__20529){
var bit__12274__auto__ = (G__20529.cljs$lang$protocol_mask$partition0$ & (4194304));
if((bit__12274__auto__) || (G__20529.cljs$core$IHash$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(null);
} else {
if(typeof o === 'number'){
return ((function (){var G__20530 = o;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__20530) : Math.floor.call(null,G__20530));
})() % (2147483647));
} else {
if(o === true){
return (1);
} else {
if(o === false){
return (0);
} else {
if(typeof o === 'string'){
return cljs.core.m3_hash_int(cljs.core.hash_string(o));
} else {
if((o instanceof Date)){
return o.valueOf();
} else {
if((o == null)){
return (0);
} else {
return cljs.core._hash(o);

}
}
}
}
}
}
}
});
cljs.core.hash_combine = (function hash_combine(seed,hash){
return (seed ^ (((hash + (2654435769)) + (seed << (6))) + (seed >> (2))));
});
cljs.core.instance_QMARK_ = (function instance_QMARK_(t,o){
return (o instanceof t);
});
cljs.core.symbol_QMARK_ = (function symbol_QMARK_(x){
return (x instanceof cljs.core.Symbol);
});
cljs.core.hash_symbol = (function hash_symbol(sym){
return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name),cljs.core.hash_string(sym.ns));
});
cljs.core.compare_symbols = (function compare_symbols(a,b){
if((a.str === b.str)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__11588__auto__ = cljs.core.not(a.ns);
if(and__11588__auto__){
return b.ns;
} else {
return and__11588__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__20537 = a.ns;
var G__20538 = b.ns;
return goog.array.defaultCompare(G__20537,G__20538);
})();
if(((0) === nsc)){
var G__20539 = a.name;
var G__20540 = b.name;
return goog.array.defaultCompare(G__20539,G__20540);
} else {
return nsc;
}
}
} else {
var G__20541 = a.name;
var G__20542 = b.name;
return goog.array.defaultCompare(G__20541,G__20542);

}
}
}
});

/**
* @constructor
*/
cljs.core.Symbol = (function (ns,name,str,_hash,_meta){
this.ns = ns;
this.name = name;
this.str = str;
this._hash = _hash;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition0$ = 2154168321;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,self__.str);
});

cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = (function (sym){
var self__ = this;
var sym__$1 = this;
var h__12021__auto__ = self__._hash;
if(!((h__12021__auto__ == null))){
return h__12021__auto__;
} else {
var h__12021__auto____$1 = cljs.core.hash_symbol(sym__$1);
self__._hash = h__12021__auto____$1;

return h__12021__auto____$1;
}
});

cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Symbol(self__.ns,self__.name,self__.str,self__._hash,new_meta));
});

cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Symbol.prototype.call = (function() {
var G__20544 = null;
var G__20544__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});
var G__20544__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});
G__20544 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__20544__2.call(this,self__,coll);
case 3:
return G__20544__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__20544.cljs$core$IFn$_invoke$arity$2 = G__20544__2;
G__20544.cljs$core$IFn$_invoke$arity$3 = G__20544__3;
return G__20544;
})()
;

cljs.core.Symbol.prototype.apply = (function (self__,args20543){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args20543)));
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});

cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Symbol)){
return (self__.str === other.str);
} else {
return false;
}
});

cljs.core.Symbol.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.str;
});

cljs.core.Symbol.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Symbol.cljs$lang$type = true;

cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";

cljs.core.Symbol.cljs$lang$ctorPrWriter = (function (this__12187__auto__,writer__12188__auto__,opt__12189__auto__){
return cljs.core._write(writer__12188__auto__,"cljs.core/Symbol");
});

cljs.core.__GT_Symbol = (function __GT_Symbol(ns,name,str,_hash,_meta){
return (new cljs.core.Symbol(ns,name,str,_hash,_meta));
});

cljs.core.symbol = (function() {
var symbol = null;
var symbol__1 = (function (name){
if((name instanceof cljs.core.Symbol)){
return name;
} else {
return symbol.cljs$core$IFn$_invoke$arity$2(null,name);
}
});
var symbol__2 = (function (ns,name){
var sym_str = ((!((ns == null)))?[cljs.core.str(ns),cljs.core.str("/"),cljs.core.str(name)].join(''):name);
return (new cljs.core.Symbol(ns,name,sym_str,null,null));
});
symbol = function(ns,name){
switch(arguments.length){
case 1:
return symbol__1.call(this,ns);
case 2:
return symbol__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
return symbol;
})()
;

/**
* @constructor
*/
cljs.core.Var = (function (val,sym,_meta){
this.val = val;
this.sym = sym;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 163841;
})
cljs.core.Var.prototype.call = (function() {
var G__20592 = null;
var G__20592__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});
var G__20592__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});
var G__20592__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});
var G__20592__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});
var G__20592__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});
var G__20592__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});
var G__20592__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});
var G__20592__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});
var G__20592__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});
var G__20592__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});
var G__20592__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});
var G__20592__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});
var G__20592__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});
var G__20592__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});
var G__20592__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});
var G__20592__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});
var G__20592__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});
var G__20592__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});
var G__20592__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});
var G__20592__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});
var G__20592__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});
var G__20592__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__20548 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__20549 = a;
var G__20550 = b;
var G__20551 = c;
var G__20552 = d;
var G__20553 = e;
var G__20554 = f;
var G__20555 = g;
var G__20556 = h;
var G__20557 = i;
var G__20558 = j;
var G__20559 = k;
var G__20560 = l;
var G__20561 = m;
var G__20562 = n;
var G__20563 = o;
var G__20564 = p;
var G__20565 = q;
var G__20566 = r;
var G__20567 = s;
var G__20568 = t;
var G__20569 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__20548,G__20549,G__20550,G__20551,G__20552,G__20553,G__20554,G__20555,G__20556,G__20557,G__20558,G__20559,G__20560,G__20561,G__20562,G__20563,G__20564,G__20565,G__20566,G__20567,G__20568,G__20569) : cljs.core.apply.call(null,G__20548,G__20549,G__20550,G__20551,G__20552,G__20553,G__20554,G__20555,G__20556,G__20557,G__20558,G__20559,G__20560,G__20561,G__20562,G__20563,G__20564,G__20565,G__20566,G__20567,G__20568,G__20569));
});
G__20592 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__20592__1.call(this,self__);
case 2:
return G__20592__2.call(this,self__,a);
case 3:
return G__20592__3.call(this,self__,a,b);
case 4:
return G__20592__4.call(this,self__,a,b,c);
case 5:
return G__20592__5.call(this,self__,a,b,c,d);
case 6:
return G__20592__6.call(this,self__,a,b,c,d,e);
case 7:
return G__20592__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__20592__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__20592__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__20592__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__20592__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__20592__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__20592__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__20592__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__20592__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__20592__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__20592__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__20592__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__20592__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__20592__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__20592__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__20592__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__20592.cljs$core$IFn$_invoke$arity$1 = G__20592__1;
G__20592.cljs$core$IFn$_invoke$arity$2 = G__20592__2;
G__20592.cljs$core$IFn$_invoke$arity$3 = G__20592__3;
G__20592.cljs$core$IFn$_invoke$arity$4 = G__20592__4;
G__20592.cljs$core$IFn$_invoke$arity$5 = G__20592__5;
G__20592.cljs$core$IFn$_invoke$arity$6 = G__20592__6;
G__20592.cljs$core$IFn$_invoke$arity$7 = G__20592__7;
G__20592.cljs$core$IFn$_invoke$arity$8 = G__20592__8;
G__20592.cljs$core$IFn$_invoke$arity$9 = G__20592__9;
G__20592.cljs$core$IFn$_invoke$arity$10 = G__20592__10;
G__20592.cljs$core$IFn$_invoke$arity$11 = G__20592__11;
G__20592.cljs$core$IFn$_invoke$arity$12 = G__20592__12;
G__20592.cljs$core$IFn$_invoke$arity$13 = G__20592__13;
G__20592.cljs$core$IFn$_invoke$arity$14 = G__20592__14;
G__20592.cljs$core$IFn$_invoke$arity$15 = G__20592__15;
G__20592.cljs$core$IFn$_invoke$arity$16 = G__20592__16;
G__20592.cljs$core$IFn$_invoke$arity$17 = G__20592__17;
G__20592.cljs$core$IFn$_invoke$arity$18 = G__20592__18;
G__20592.cljs$core$IFn$_invoke$arity$19 = G__20592__19;
G__20592.cljs$core$IFn$_invoke$arity$20 = G__20592__20;
G__20592.cljs$core$IFn$_invoke$arity$21 = G__20592__21;
G__20592.cljs$core$IFn$_invoke$arity$22 = G__20592__22;
return G__20592;
})()
;

cljs.core.Var.prototype.apply = (function (self__,args20547){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args20547)));
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__20570 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__20571 = a;
var G__20572 = b;
var G__20573 = c;
var G__20574 = d;
var G__20575 = e;
var G__20576 = f;
var G__20577 = g;
var G__20578 = h;
var G__20579 = i;
var G__20580 = j;
var G__20581 = k;
var G__20582 = l;
var G__20583 = m;
var G__20584 = n;
var G__20585 = o;
var G__20586 = p;
var G__20587 = q;
var G__20588 = r;
var G__20589 = s;
var G__20590 = t;
var G__20591 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__20570,G__20571,G__20572,G__20573,G__20574,G__20575,G__20576,G__20577,G__20578,G__20579,G__20580,G__20581,G__20582,G__20583,G__20584,G__20585,G__20586,G__20587,G__20588,G__20589,G__20590,G__20591) : cljs.core.apply.call(null,G__20570,G__20571,G__20572,G__20573,G__20574,G__20575,G__20576,G__20577,G__20578,G__20579,G__20580,G__20581,G__20582,G__20583,G__20584,G__20585,G__20586,G__20587,G__20588,G__20589,G__20590,G__20591));
});

cljs.core.Var.prototype.cljs$core$Fn$ = true;

cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
});

cljs.core.Var.cljs$lang$type = true;

cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";

cljs.core.Var.cljs$lang$ctorPrWriter = (function (this__12187__auto__,writer__12188__auto__,opt__12189__auto__){
return cljs.core._write(writer__12188__auto__,"cljs.core/Var");
});

cljs.core.__GT_Var = (function __GT_Var(val,sym,_meta){
return (new cljs.core.Var(val,sym,_meta));
});



cljs.core.iterable_QMARK_ = (function iterable_QMARK_(x){
var G__20594 = x;
if(G__20594){
var bit__12281__auto__ = null;
if(cljs.core.truth_((function (){var or__11600__auto__ = bit__12281__auto__;
if(cljs.core.truth_(or__11600__auto__)){
return or__11600__auto__;
} else {
return G__20594.cljs$core$IIterable$;
}
})())){
return true;
} else {
if((!G__20594.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__20594);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__20594);
}
});
cljs.core.clone = (function clone(value){
return cljs.core._clone(value);
});
cljs.core.cloneable_QMARK_ = (function cloneable_QMARK_(value){
var G__20596 = value;
if(G__20596){
var bit__12281__auto__ = (G__20596.cljs$lang$protocol_mask$partition1$ & (8192));
if((bit__12281__auto__) || (G__20596.cljs$core$ICloneable$)){
return true;
} else {
if((!G__20596.cljs$lang$protocol_mask$partition1$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__20596);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__20596);
}
});
/**
* Returns a seq on the collection. If the collection is
* empty, returns nil.  (seq nil) returns nil. seq also works on
* Strings.
*/
cljs.core.seq = (function seq(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__20598 = coll;
if(G__20598){
var bit__12274__auto__ = (G__20598.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__12274__auto__) || (G__20598.cljs$core$ISeqable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeqable$_seq$arity$1(null);
} else {
if(coll instanceof Array){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(typeof coll === 'string'){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,coll)){
return cljs.core._seq(coll);
} else {
throw (new Error([cljs.core.str(coll),cljs.core.str(" is not ISeqable")].join('')));

}
}
}
}
}
});
/**
* Returns the first item in the collection. Calls seq on its
* argument. If coll is nil, returns nil.
*/
cljs.core.first = (function first(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__20600 = coll;
if(G__20600){
var bit__12274__auto__ = (G__20600.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__12274__auto__) || (G__20600.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if((s == null)){
return null;
} else {
return cljs.core._first(s);
}
}
}
});
/**
* Returns a possibly empty seq of the items after the first. Calls seq on its
* argument.
*/
cljs.core.rest = (function rest(coll){
if(!((coll == null))){
if((function (){var G__20602 = coll;
if(G__20602){
var bit__12274__auto__ = (G__20602.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__12274__auto__) || (G__20602.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if(s){
return cljs.core._rest(s);
} else {
return cljs.core.List.EMPTY;
}
}
} else {
return cljs.core.List.EMPTY;
}
});
/**
* Returns a seq of the items after the first. Calls seq on its
* argument.  If there are no more items, returns nil
*/
cljs.core.next = (function next(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__20604 = coll;
if(G__20604){
var bit__12274__auto__ = (G__20604.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__12274__auto__) || (G__20604.cljs$core$INext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$INext$_next$arity$1(null);
} else {
return cljs.core.seq(cljs.core.rest(coll));
}
}
});
/**
* Equality. Returns true if x equals y, false if not. Compares
* numbers and collections in a type-independent manner.  Clojure's immutable data
* structures define -equiv (and thus =) as a value, not an identity,
* comparison.
* @param {...*} var_args
*/
cljs.core._EQ_ = (function() {
var _EQ_ = null;
var _EQ___1 = (function (x){
return true;
});
var _EQ___2 = (function (x,y){
if((x == null)){
return (y == null);
} else {
return ((x === y)) || (cljs.core._equiv(x,y));
}
});
var _EQ___3 = (function() { 
var G__20609__delegate = function (x,y,more){
while(true){
if(_EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__20610 = y;
var G__20611 = cljs.core.first(more);
var G__20612 = cljs.core.next(more);
x = G__20610;
y = G__20611;
more = G__20612;
continue;
} else {
return _EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__20609 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__20613__i = 0, G__20613__a = new Array(arguments.length -  2);
while (G__20613__i < G__20613__a.length) {G__20613__a[G__20613__i] = arguments[G__20613__i + 2]; ++G__20613__i;}
  more = new cljs.core.IndexedSeq(G__20613__a,0);
} 
return G__20609__delegate.call(this,x,y,more);};
G__20609.cljs$lang$maxFixedArity = 2;
G__20609.cljs$lang$applyTo = (function (arglist__20614){
var x = cljs.core.first(arglist__20614);
arglist__20614 = cljs.core.next(arglist__20614);
var y = cljs.core.first(arglist__20614);
var more = cljs.core.rest(arglist__20614);
return G__20609__delegate(x,y,more);
});
G__20609.cljs$core$IFn$_invoke$arity$variadic = G__20609__delegate;
return G__20609;
})()
;
_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ___1.call(this,x);
case 2:
return _EQ___2.call(this,x,y);
default:
var G__20615 = null;
if (arguments.length > 2) {
var G__20616__i = 0, G__20616__a = new Array(arguments.length -  2);
while (G__20616__i < G__20616__a.length) {G__20616__a[G__20616__i] = arguments[G__20616__i + 2]; ++G__20616__i;}
G__20615 = new cljs.core.IndexedSeq(G__20616__a,0);
}
return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__20615);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ_.cljs$lang$maxFixedArity = 2;
_EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
_EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
_EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
_EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ_;
})()
;

/**
* @constructor
*/
cljs.core.ES6Iterator = (function (s){
this.s = s;
})
cljs.core.ES6Iterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": x};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6Iterator.cljs$lang$type = true;

cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";

cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = (function (this__12187__auto__,writer__12188__auto__,opt__12189__auto__){
return cljs.core._write(writer__12188__auto__,"cljs.core/ES6Iterator");
});

cljs.core.__GT_ES6Iterator = (function __GT_ES6Iterator(s){
return (new cljs.core.ES6Iterator(s));
});

cljs.core.es6_iterator = (function es6_iterator(coll){
return (new cljs.core.ES6Iterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6IteratorSeq = (function (value,iter,_rest){
this.value = value;
this.iter = iter;
this._rest = _rest;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 8388672;
})
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.value;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if((self__._rest == null)){
self__._rest = (function (){var G__20617 = self__.iter;
return (cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(G__20617) : cljs.core.es6_iterator_seq.call(null,G__20617));
})();
} else {
}

return self__._rest;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ES6IteratorSeq.cljs$lang$type = true;

cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";

cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = (function (this__12187__auto__,writer__12188__auto__,opt__12189__auto__){
return cljs.core._write(writer__12188__auto__,"cljs.core/ES6IteratorSeq");
});

cljs.core.__GT_ES6IteratorSeq = (function __GT_ES6IteratorSeq(value,iter,_rest){
return (new cljs.core.ES6IteratorSeq(value,iter,_rest));
});

cljs.core.es6_iterator_seq = (function es6_iterator_seq(iter){
var v = iter.next();
if(cljs.core.truth_(v.done)){
return cljs.core.List.EMPTY;
} else {
return (new cljs.core.ES6IteratorSeq(v.value,iter,null));
}
});
/**
* Mix final collection hash for ordered or unordered collections.
* hash-basis is the combined collection hash, count is the number
* of elements included in the basis. Note this is the hash code
* consistent with =, different from .hashCode.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.mix_collection_hash = (function mix_collection_hash(hash_basis,count){
var h1 = cljs.core.m3_seed;
var k1 = cljs.core.m3_mix_K1(hash_basis);
var h1__$1 = cljs.core.m3_mix_H1(h1,k1);
return cljs.core.m3_fmix(h1__$1,count);
});
/**
* Returns the hash code, consistent with =, for an external ordered
* collection implementing Iterable.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_ordered_coll = (function hash_ordered_coll(coll){
var n = (0);
var hash_code = (1);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__20618 = (n + (1));
var G__20619 = ((cljs.core.imul((31),hash_code) + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__20620 = cljs.core.next(coll__$1);
n = G__20618;
hash_code = G__20619;
coll__$1 = G__20620;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_ordered_hash = cljs.core.mix_collection_hash((1),(0));
/**
* Returns the hash code, consistent with =, for an external unordered
* collection implementing Iterable. For maps, the iterator should
* return map entries whose hash is computed as
* (hash-ordered-coll [k v]).
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_unordered_coll = (function hash_unordered_coll(coll){
var n = (0);
var hash_code = (0);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__20621 = (n + (1));
var G__20622 = ((hash_code + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__20623 = cljs.core.next(coll__$1);
n = G__20621;
hash_code = G__20622;
coll__$1 = G__20623;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_unordered_hash = cljs.core.mix_collection_hash((0),(0));


(cljs.core.ICounted["null"] = true);

(cljs.core._count["null"] = (function (_){
return (0);
}));
Date.prototype.cljs$core$IEquiv$ = true;

Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var o__$1 = this;
return ((other instanceof Date)) && ((o__$1.toString() === other.toString()));
});
(cljs.core.IEquiv["number"] = true);

(cljs.core._equiv["number"] = (function (x,o){
return (x === o);
}));
(cljs.core.IMeta["function"] = true);

(cljs.core._meta["function"] = (function (_){
return null;
}));

(cljs.core.Fn["function"] = true);
(cljs.core.IHash["_"] = true);

(cljs.core._hash["_"] = (function (o){
var G__20624 = o;
return goog.getUid(G__20624);
}));
/**
* Returns a number one greater than num.
*/
cljs.core.inc = (function inc(x){
return (x + (1));
});

/**
* @constructor
*/
cljs.core.Reduced = (function (val){
this.val = val;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = (function (o){
var self__ = this;
var o__$1 = this;
return self__.val;
});

cljs.core.Reduced.cljs$lang$type = true;

cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";

cljs.core.Reduced.cljs$lang$ctorPrWriter = (function (this__12187__auto__,writer__12188__auto__,opt__12189__auto__){
return cljs.core._write(writer__12188__auto__,"cljs.core/Reduced");
});

cljs.core.__GT_Reduced = (function __GT_Reduced(val){
return (new cljs.core.Reduced(val));
});

/**
* Wraps x in a way such that a reduce will terminate with the value x
*/
cljs.core.reduced = (function reduced(x){
return (new cljs.core.Reduced(x));
});
/**
* Returns true if x is the result of a call to reduced
*/
cljs.core.reduced_QMARK_ = (function reduced_QMARK_(r){
return (r instanceof cljs.core.Reduced);
});
/**
* If x is already reduced?, returns it, else returns (reduced x)
*/
cljs.core.ensure_reduced = (function ensure_reduced(x){
if(cljs.core.reduced_QMARK_(x)){
return x;
} else {
return cljs.core.reduced(x);
}
});
/**
* If x is reduced?, returns (deref x), else returns x
*/
cljs.core.unreduced = (function unreduced(x){
if(cljs.core.reduced_QMARK_(x)){
var G__20626 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__20626) : cljs.core.deref.call(null,G__20626));
} else {
return x;
}
});
cljs.core.deref = (function deref(o){
return cljs.core._deref(o);
});
/**
* Accepts any collection which satisfies the ICount and IIndexed protocols and
* reduces them without incurring seq initialization
*/
cljs.core.ci_reduce = (function() {
var ci_reduce = null;
var ci_reduce__2 = (function (cicoll,f){
var cnt = cljs.core._count(cicoll);
if((cnt === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,(0));
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__20633 = val;
var G__20634 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20633,G__20634) : f.call(null,G__20633,G__20634));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__20639 = nval;
var G__20640 = (n + (1));
val = G__20639;
n = G__20640;
continue;
}
} else {
return val;
}
break;
}
}
});
var ci_reduce__3 = (function (cicoll,f,val){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__20635 = val__$1;
var G__20636 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20635,G__20636) : f.call(null,G__20635,G__20636));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__20641 = nval;
var G__20642 = (n + (1));
val__$1 = G__20641;
n = G__20642;
continue;
}
} else {
return val__$1;
}
break;
}
});
var ci_reduce__4 = (function (cicoll,f,val,idx){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__20637 = val__$1;
var G__20638 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20637,G__20638) : f.call(null,G__20637,G__20638));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__20643 = nval;
var G__20644 = (n + (1));
val__$1 = G__20643;
n = G__20644;
continue;
}
} else {
return val__$1;
}
break;
}
});
ci_reduce = function(cicoll,f,val,idx){
switch(arguments.length){
case 2:
return ci_reduce__2.call(this,cicoll,f);
case 3:
return ci_reduce__3.call(this,cicoll,f,val);
case 4:
return ci_reduce__4.call(this,cicoll,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
return ci_reduce;
})()
;
cljs.core.array_reduce = (function() {
var array_reduce = null;
var array_reduce__2 = (function (arr,f){
var cnt = arr.length;
if((arr.length === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = (arr[(0)]);
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__20651 = val;
var G__20652 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20651,G__20652) : f.call(null,G__20651,G__20652));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__20657 = nval;
var G__20658 = (n + (1));
val = G__20657;
n = G__20658;
continue;
}
} else {
return val;
}
break;
}
}
});
var array_reduce__3 = (function (arr,f,val){
var cnt = arr.length;
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__20653 = val__$1;
var G__20654 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20653,G__20654) : f.call(null,G__20653,G__20654));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__20659 = nval;
var G__20660 = (n + (1));
val__$1 = G__20659;
n = G__20660;
continue;
}
} else {
return val__$1;
}
break;
}
});
var array_reduce__4 = (function (arr,f,val,idx){
var cnt = arr.length;
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__20655 = val__$1;
var G__20656 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20655,G__20656) : f.call(null,G__20655,G__20656));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__20661 = nval;
var G__20662 = (n + (1));
val__$1 = G__20661;
n = G__20662;
continue;
}
} else {
return val__$1;
}
break;
}
});
array_reduce = function(arr,f,val,idx){
switch(arguments.length){
case 2:
return array_reduce__2.call(this,arr,f);
case 3:
return array_reduce__3.call(this,arr,f,val);
case 4:
return array_reduce__4.call(this,arr,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
return array_reduce;
})()
;



/**
* Returns true if coll implements count in constant time
*/
cljs.core.counted_QMARK_ = (function counted_QMARK_(x){
var G__20664 = x;
if(G__20664){
var bit__12281__auto__ = (G__20664.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__12281__auto__) || (G__20664.cljs$core$ICounted$)){
return true;
} else {
if((!G__20664.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__20664);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__20664);
}
});
/**
* Returns true if coll implements nth in constant time
*/
cljs.core.indexed_QMARK_ = (function indexed_QMARK_(x){
var G__20666 = x;
if(G__20666){
var bit__12281__auto__ = (G__20666.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__12281__auto__) || (G__20666.cljs$core$IIndexed$)){
return true;
} else {
if((!G__20666.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__20666);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__20666);
}
});

/**
* @constructor
*/
cljs.core.IndexedSeqIterator = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.IndexedSeqIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.IndexedSeqIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.IndexedSeqIterator.cljs$lang$type = true;

cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";

cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = (function (this__12187__auto__,writer__12188__auto__,opt__12189__auto__){
return cljs.core._write(writer__12188__auto__,"cljs.core/IndexedSeqIterator");
});

cljs.core.__GT_IndexedSeqIterator = (function __GT_IndexedSeqIterator(arr,i){
return (new cljs.core.IndexedSeqIterator(arr,i));
});


/**
* @constructor
*/
cljs.core.IndexedSeq = (function (arr,i){
this.arr = arr;
this.i = i;
this.cljs$lang$protocol_mask$partition0$ = 166199550;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.IndexedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.IndexedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return not_found;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.IndexedSeqIterator(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.IndexedSeq(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr.length - self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var c = cljs.core._count(coll__$1);
if((c > (0))){
return (new cljs.core.RSeq(coll__$1,(c - (1)),null));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__20667 = coll__$1;
var G__20668 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__20667,G__20668) : cljs.core.equiv_sequential.call(null,G__20667,G__20668));
});

cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.i]),(self__.i + (1)));
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr[self__.i]);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__20669 = o;
var G__20670 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__20669,G__20670) : cljs.core.cons.call(null,G__20669,G__20670));
});

cljs.core.IndexedSeq.cljs$lang$type = true;

cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";

cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = (function (this__12187__auto__,writer__12188__auto__,opt__12189__auto__){
return cljs.core._write(writer__12188__auto__,"cljs.core/IndexedSeq");
});

cljs.core.__GT_IndexedSeq = (function __GT_IndexedSeq(arr,i){
return (new cljs.core.IndexedSeq(arr,i));
});

(cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__12578__auto__ = this;
return cljs.core.es6_iterator(this__12578__auto__);
}));
cljs.core.prim_seq = (function() {
var prim_seq = null;
var prim_seq__1 = (function (prim){
return prim_seq.cljs$core$IFn$_invoke$arity$2(prim,(0));
});
var prim_seq__2 = (function (prim,i){
if((i < prim.length)){
return (new cljs.core.IndexedSeq(prim,i));
} else {
return null;
}
});
prim_seq = function(prim,i){
switch(arguments.length){
case 1:
return prim_seq__1.call(this,prim);
case 2:
return prim_seq__2.call(this,prim,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
return prim_seq;
})()
;
cljs.core.array_seq = (function() {
var array_seq = null;
var array_seq__1 = (function (array){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,(0));
});
var array_seq__2 = (function (array,i){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,i);
});
array_seq = function(array,i){
switch(arguments.length){
case 1:
return array_seq__1.call(this,array);
case 2:
return array_seq__2.call(this,array,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
return array_seq;
})()
;


/**
* @constructor
*/
cljs.core.RSeq = (function (ci,i,meta){
this.ci = ci;
this.i = i;
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.RSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.RSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,self__.meta));
});

cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return null;
}
});

cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.i + (1));
});

cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__20673 = coll__$1;
var G__20674 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__20673,G__20674) : cljs.core.equiv_sequential.call(null,G__20673,G__20674));
});

cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__20675 = cljs.core.List.EMPTY;
var G__20676 = self__.meta;
return (cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__20675,G__20676) : cljs.core.with_meta.call(null,G__20675,G__20676));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (col,f){
var self__ = this;
var col__$1 = this;
var G__20677 = f;
var G__20678 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(G__20677,G__20678) : cljs.core.seq_reduce.call(null,G__20677,G__20678));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (col,f,start){
var self__ = this;
var col__$1 = this;
var G__20679 = f;
var G__20680 = start;
var G__20681 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(G__20679,G__20680,G__20681) : cljs.core.seq_reduce.call(null,G__20679,G__20680,G__20681));
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci,self__.i);
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,new_meta));
});

cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__20682 = o;
var G__20683 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__20682,G__20683) : cljs.core.cons.call(null,G__20682,G__20683));
});

cljs.core.RSeq.cljs$lang$type = true;

cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";

cljs.core.RSeq.cljs$lang$ctorPrWriter = (function (this__12187__auto__,writer__12188__auto__,opt__12189__auto__){
return cljs.core._write(writer__12188__auto__,"cljs.core/RSeq");
});

cljs.core.__GT_RSeq = (function __GT_RSeq(ci,i,meta){
return (new cljs.core.RSeq(ci,i,meta));
});

(cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__12578__auto__ = this;
return cljs.core.es6_iterator(this__12578__auto__);
}));
/**
* Same as (first (next x))
*/
cljs.core.second = (function second(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (first (first x))
*/
cljs.core.ffirst = (function ffirst(coll){
return cljs.core.first(cljs.core.first(coll));
});
/**
* Same as (next (first x))
*/
cljs.core.nfirst = (function nfirst(coll){
return cljs.core.next(cljs.core.first(coll));
});
/**
* Same as (first (next x))
*/
cljs.core.fnext = (function fnext(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (next (next x))
*/
cljs.core.nnext = (function nnext(coll){
return cljs.core.next(cljs.core.next(coll));
});
/**
* Return the last item in coll, in linear time
*/
cljs.core.last = (function last(s){
while(true){
var sn = cljs.core.next(s);
if(!((sn == null))){
var G__20684 = sn;
s = G__20684;
continue;
} else {
return cljs.core.first(s);
}
break;
}
});
(cljs.core.IEquiv["_"] = true);

(cljs.core._equiv["_"] = (function (x,o){
return (x === o);
}));
/**
* conj[oin]. Returns a new collection with the xs
* 'added'. (conj nil item) returns (item).  The 'addition' may
* happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj = (function() {
var conj = null;
var conj__0 = (function (){
return cljs.core.PersistentVector.EMPTY;
});
var conj__1 = (function (coll){
return coll;
});
var conj__2 = (function (coll,x){
if(!((coll == null))){
return cljs.core._conj(coll,x);
} else {
return cljs.core._conj(cljs.core.List.EMPTY,x);
}
});
var conj__3 = (function() { 
var G__20689__delegate = function (coll,x,xs){
while(true){
if(cljs.core.truth_(xs)){
var G__20690 = conj.cljs$core$IFn$_invoke$arity$2(coll,x);
var G__20691 = cljs.core.first(xs);
var G__20692 = cljs.core.next(xs);
coll = G__20690;
x = G__20691;
xs = G__20692;
continue;
} else {
return conj.cljs$core$IFn$_invoke$arity$2(coll,x);
}
break;
}
};
var G__20689 = function (coll,x,var_args){
var xs = null;
if (arguments.length > 2) {
var G__20693__i = 0, G__20693__a = new Array(arguments.length -  2);
while (G__20693__i < G__20693__a.length) {G__20693__a[G__20693__i] = arguments[G__20693__i + 2]; ++G__20693__i;}
  xs = new cljs.core.IndexedSeq(G__20693__a,0);
} 
return G__20689__delegate.call(this,coll,x,xs);};
G__20689.cljs$lang$maxFixedArity = 2;
G__20689.cljs$lang$applyTo = (function (arglist__20694){
var coll = cljs.core.first(arglist__20694);
arglist__20694 = cljs.core.next(arglist__20694);
var x = cljs.core.first(arglist__20694);
var xs = cljs.core.rest(arglist__20694);
return G__20689__delegate(coll,x,xs);
});
G__20689.cljs$core$IFn$_invoke$arity$variadic = G__20689__delegate;
return G__20689;
})()
;
conj = function(coll,x,var_args){
var xs = var_args;
switch(arguments.length){
case 0:
return conj__0.call(this);
case 1:
return conj__1.call(this,coll);
case 2:
return conj__2.call(this,coll,x);
default:
var G__20695 = null;
if (arguments.length > 2) {
var G__20696__i = 0, G__20696__a = new Array(arguments.length -  2);
while (G__20696__i < G__20696__a.length) {G__20696__a[G__20696__i] = arguments[G__20696__i + 2]; ++G__20696__i;}
G__20695 = new cljs.core.IndexedSeq(G__20696__a,0);
}
return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll,x, G__20695);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj.cljs$lang$maxFixedArity = 2;
conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
conj.cljs$core$IFn$_invoke$arity$0 = conj__0;
conj.cljs$core$IFn$_invoke$arity$1 = conj__1;
conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
return conj;
})()
;
/**
* Returns an empty collection of the same category as coll, or nil
*/
cljs.core.empty = (function empty(coll){
if((coll == null)){
return null;
} else {
return cljs.core._empty(coll);
}
});
cljs.core.accumulating_seq_count = (function accumulating_seq_count(coll){
var s = cljs.core.seq(coll);
var acc = (0);
while(true){
if(cljs.core.counted_QMARK_(s)){
return (acc + cljs.core._count(s));
} else {
var G__20697 = cljs.core.next(s);
var G__20698 = (acc + (1));
s = G__20697;
acc = G__20698;
continue;
}
break;
}
});
/**
* Returns the number of items in the collection. (count nil) returns
* 0.  Also works on strings, arrays, and Maps
*/
cljs.core.count = (function count(coll){
if(!((coll == null))){
if((function (){var G__20700 = coll;
if(G__20700){
var bit__12274__auto__ = (G__20700.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__12274__auto__) || (G__20700.cljs$core$ICounted$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(null);
} else {
if(coll instanceof Array){
return coll.length;
} else {
if(typeof coll === 'string'){
return coll.length;
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,coll)){
return cljs.core._count(coll);
} else {
return cljs.core.accumulating_seq_count(coll);

}
}
}
}
} else {
return (0);
}
});
cljs.core.linear_traversal_nth = (function() {
var linear_traversal_nth = null;
var linear_traversal_nth__2 = (function (coll,n){
while(true){
if((coll == null)){
throw (new Error("Index out of bounds"));
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
throw (new Error("Index out of bounds"));
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if(cljs.core.seq(coll)){
var G__20701 = cljs.core.next(coll);
var G__20702 = (n - (1));
coll = G__20701;
n = G__20702;
continue;
} else {
throw (new Error("Index out of bounds"));

}
}
}
}
break;
}
});
var linear_traversal_nth__3 = (function (coll,n,not_found){
while(true){
if((coll == null)){
return not_found;
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
return not_found;
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
if(cljs.core.seq(coll)){
var G__20703 = cljs.core.next(coll);
var G__20704 = (n - (1));
var G__20705 = not_found;
coll = G__20703;
n = G__20704;
not_found = G__20705;
continue;
} else {
return not_found;

}
}
}
}
break;
}
});
linear_traversal_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return linear_traversal_nth__2.call(this,coll,n);
case 3:
return linear_traversal_nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
return linear_traversal_nth;
})()
;
/**
* Returns the value at the index. get returns nil if index out of
* bounds, nth throws an exception unless not-found is supplied.  nth
* also works for strings, arrays, regex Matchers and Lists, and,
* in O(n) time, for sequences.
*/
cljs.core.nth = (function() {
var nth = null;
var nth__2 = (function (coll,n){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number"));
} else {
if((coll == null)){
return coll;
} else {
if((function (){var G__20710 = coll;
if(G__20710){
var bit__12274__auto__ = (G__20710.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__12274__auto__) || (G__20710.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(null,n);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__20711 = coll;
if(G__20711){
var bit__12281__auto__ = (G__20711.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__12281__auto__) || (G__20711.cljs$core$ISeq$)){
return true;
} else {
if((!G__20711.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__20711);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__20711);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
var nth__3 = (function (coll,n,not_found){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number."));
} else {
if((coll == null)){
return not_found;
} else {
if((function (){var G__20712 = coll;
if(G__20712){
var bit__12274__auto__ = (G__20712.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__12274__auto__) || (G__20712.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(null,n,not_found);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__20713 = coll;
if(G__20713){
var bit__12281__auto__ = (G__20713.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__12281__auto__) || (G__20713.cljs$core$ISeq$)){
return true;
} else {
if((!G__20713.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__20713);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__20713);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return nth__2.call(this,coll,n);
case 3:
return nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
return nth;
})()
;
/**
* Returns the nth rest of coll, coll when n is 0.
*/
cljs.core.nthrest = (function nthrest(coll,n){
var n__$1 = n;
var xs = coll;
while(true){
if(((n__$1 > (0))) && (cljs.core.seq(xs))){
var G__20714 = (n__$1 - (1));
var G__20715 = cljs.core.rest(xs);
n__$1 = G__20714;
xs = G__20715;
continue;
} else {
return xs;
}
break;
}
});
/**
* Returns the value mapped to key, not-found or nil if key not present.
*/
cljs.core.get = (function() {
var get = null;
var get__2 = (function (o,k){
if((o == null)){
return null;
} else {
if((function (){var G__20718 = o;
if(G__20718){
var bit__12274__auto__ = (G__20718.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__12274__auto__) || (G__20718.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(null,k);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o,k);
} else {
return null;

}
}
}
}
}
});
var get__3 = (function (o,k,not_found){
if(!((o == null))){
if((function (){var G__20719 = o;
if(G__20719){
var bit__12274__auto__ = (G__20719.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__12274__auto__) || (G__20719.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o,k,not_found);
} else {
return not_found;

}
}
}
}
} else {
return not_found;
}
});
get = function(o,k,not_found){
switch(arguments.length){
case 2:
return get__2.call(this,o,k);
case 3:
return get__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get.cljs$core$IFn$_invoke$arity$2 = get__2;
get.cljs$core$IFn$_invoke$arity$3 = get__3;
return get;
})()
;
/**
* assoc[iate]. When applied to a map, returns a new map of the
* same (hashed/sorted) type, that contains the mapping of key(s) to
* val(s). When applied to a vector, returns a new vector that
* contains val at index.
* @param {...*} var_args
*/
cljs.core.assoc = (function() {
var assoc = null;
var assoc__3 = (function (coll,k,v){
if(!((coll == null))){
return cljs.core._assoc(coll,k,v);
} else {
return cljs.core.PersistentHashMap.fromArrays([k],[v]);
}
});
var assoc__4 = (function() { 
var G__20723__delegate = function (coll,k,v,kvs){
while(true){
var ret = assoc.cljs$core$IFn$_invoke$arity$3(coll,k,v);
if(cljs.core.truth_(kvs)){
var G__20724 = ret;
var G__20725 = cljs.core.first(kvs);
var G__20726 = cljs.core.second(kvs);
var G__20727 = cljs.core.nnext(kvs);
coll = G__20724;
k = G__20725;
v = G__20726;
kvs = G__20727;
continue;
} else {
return ret;
}
break;
}
};
var G__20723 = function (coll,k,v,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__20728__i = 0, G__20728__a = new Array(arguments.length -  3);
while (G__20728__i < G__20728__a.length) {G__20728__a[G__20728__i] = arguments[G__20728__i + 3]; ++G__20728__i;}
  kvs = new cljs.core.IndexedSeq(G__20728__a,0);
} 
return G__20723__delegate.call(this,coll,k,v,kvs);};
G__20723.cljs$lang$maxFixedArity = 3;
G__20723.cljs$lang$applyTo = (function (arglist__20729){
var coll = cljs.core.first(arglist__20729);
arglist__20729 = cljs.core.next(arglist__20729);
var k = cljs.core.first(arglist__20729);
arglist__20729 = cljs.core.next(arglist__20729);
var v = cljs.core.first(arglist__20729);
var kvs = cljs.core.rest(arglist__20729);
return G__20723__delegate(coll,k,v,kvs);
});
G__20723.cljs$core$IFn$_invoke$arity$variadic = G__20723__delegate;
return G__20723;
})()
;
assoc = function(coll,k,v,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc__3.call(this,coll,k,v);
default:
var G__20730 = null;
if (arguments.length > 3) {
var G__20731__i = 0, G__20731__a = new Array(arguments.length -  3);
while (G__20731__i < G__20731__a.length) {G__20731__a[G__20731__i] = arguments[G__20731__i + 3]; ++G__20731__i;}
G__20730 = new cljs.core.IndexedSeq(G__20731__a,0);
}
return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll,k,v, G__20730);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc.cljs$lang$maxFixedArity = 3;
assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
return assoc;
})()
;
/**
* dissoc[iate]. Returns a new map of the same (hashed/sorted) type,
* that does not contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc = (function() {
var dissoc = null;
var dissoc__1 = (function (coll){
return coll;
});
var dissoc__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._dissoc(coll,k);
}
});
var dissoc__3 = (function() { 
var G__20734__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = dissoc.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__20735 = ret;
var G__20736 = cljs.core.first(ks);
var G__20737 = cljs.core.next(ks);
coll = G__20735;
k = G__20736;
ks = G__20737;
continue;
} else {
return ret;
}
}
break;
}
};
var G__20734 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__20738__i = 0, G__20738__a = new Array(arguments.length -  2);
while (G__20738__i < G__20738__a.length) {G__20738__a[G__20738__i] = arguments[G__20738__i + 2]; ++G__20738__i;}
  ks = new cljs.core.IndexedSeq(G__20738__a,0);
} 
return G__20734__delegate.call(this,coll,k,ks);};
G__20734.cljs$lang$maxFixedArity = 2;
G__20734.cljs$lang$applyTo = (function (arglist__20739){
var coll = cljs.core.first(arglist__20739);
arglist__20739 = cljs.core.next(arglist__20739);
var k = cljs.core.first(arglist__20739);
var ks = cljs.core.rest(arglist__20739);
return G__20734__delegate(coll,k,ks);
});
G__20734.cljs$core$IFn$_invoke$arity$variadic = G__20734__delegate;
return G__20734;
})()
;
dissoc = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return dissoc__1.call(this,coll);
case 2:
return dissoc__2.call(this,coll,k);
default:
var G__20740 = null;
if (arguments.length > 2) {
var G__20741__i = 0, G__20741__a = new Array(arguments.length -  2);
while (G__20741__i < G__20741__a.length) {G__20741__a[G__20741__i] = arguments[G__20741__i + 2]; ++G__20741__i;}
G__20740 = new cljs.core.IndexedSeq(G__20741__a,0);
}
return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__20740);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc.cljs$lang$maxFixedArity = 2;
dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc;
})()
;
cljs.core.fn_QMARK_ = (function fn_QMARK_(f){
var or__11600__auto__ = (function (){var G__20746 = f;
return goog.isFunction(G__20746);
})();
if(cljs.core.truth_(or__11600__auto__)){
return or__11600__auto__;
} else {
var G__20747 = f;
if(G__20747){
var bit__12281__auto__ = null;
if(cljs.core.truth_((function (){var or__11600__auto____$1 = bit__12281__auto__;
if(cljs.core.truth_(or__11600__auto____$1)){
return or__11600__auto____$1;
} else {
return G__20747.cljs$core$Fn$;
}
})())){
return true;
} else {
if((!G__20747.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__20747);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__20747);
}
}
});

/**
* @constructor
*/
cljs.core.MetaFn = (function (afn,meta){
this.afn = afn;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393217;
})
cljs.core.MetaFn.prototype.call = (function() {
var G__21213 = null;
var G__21213__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});
var G__21213__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__20749 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__20749) : self__.afn.call(null,G__20749));
});
var G__21213__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__20750 = a;
var G__20751 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__20750,G__20751) : self__.afn.call(null,G__20750,G__20751));
});
var G__21213__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__20752 = a;
var G__20753 = b;
var G__20754 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__20752,G__20753,G__20754) : self__.afn.call(null,G__20752,G__20753,G__20754));
});
var G__21213__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__20755 = a;
var G__20756 = b;
var G__20757 = c;
var G__20758 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__20755,G__20756,G__20757,G__20758) : self__.afn.call(null,G__20755,G__20756,G__20757,G__20758));
});
var G__21213__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__20759 = a;
var G__20760 = b;
var G__20761 = c;
var G__20762 = d;
var G__20763 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__20759,G__20760,G__20761,G__20762,G__20763) : self__.afn.call(null,G__20759,G__20760,G__20761,G__20762,G__20763));
});
var G__21213__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__20764 = a;
var G__20765 = b;
var G__20766 = c;
var G__20767 = d;
var G__20768 = e;
var G__20769 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__20764,G__20765,G__20766,G__20767,G__20768,G__20769) : self__.afn.call(null,G__20764,G__20765,G__20766,G__20767,G__20768,G__20769));
});
var G__21213__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__20770 = a;
var G__20771 = b;
var G__20772 = c;
var G__20773 = d;
var G__20774 = e;
var G__20775 = f;
var G__20776 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__20770,G__20771,G__20772,G__20773,G__20774,G__20775,G__20776) : self__.afn.call(null,G__20770,G__20771,G__20772,G__20773,G__20774,G__20775,G__20776));
});
var G__21213__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__20777 = a;
var G__20778 = b;
var G__20779 = c;
var G__20780 = d;
var G__20781 = e;
var G__20782 = f;
var G__20783 = g;
var G__20784 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__20777,G__20778,G__20779,G__20780,G__20781,G__20782,G__20783,G__20784) : self__.afn.call(null,G__20777,G__20778,G__20779,G__20780,G__20781,G__20782,G__20783,G__20784));
});
var G__21213__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__20785 = a;
var G__20786 = b;
var G__20787 = c;
var G__20788 = d;
var G__20789 = e;
var G__20790 = f;
var G__20791 = g;
var G__20792 = h;
var G__20793 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__20785,G__20786,G__20787,G__20788,G__20789,G__20790,G__20791,G__20792,G__20793) : self__.afn.call(null,G__20785,G__20786,G__20787,G__20788,G__20789,G__20790,G__20791,G__20792,G__20793));
});
var G__21213__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__20794 = a;
var G__20795 = b;
var G__20796 = c;
var G__20797 = d;
var G__20798 = e;
var G__20799 = f;
var G__20800 = g;
var G__20801 = h;
var G__20802 = i;
var G__20803 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__20794,G__20795,G__20796,G__20797,G__20798,G__20799,G__20800,G__20801,G__20802,G__20803) : self__.afn.call(null,G__20794,G__20795,G__20796,G__20797,G__20798,G__20799,G__20800,G__20801,G__20802,G__20803));
});
var G__21213__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__20804 = a;
var G__20805 = b;
var G__20806 = c;
var G__20807 = d;
var G__20808 = e;
var G__20809 = f;
var G__20810 = g;
var G__20811 = h;
var G__20812 = i;
var G__20813 = j;
var G__20814 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__20804,G__20805,G__20806,G__20807,G__20808,G__20809,G__20810,G__20811,G__20812,G__20813,G__20814) : self__.afn.call(null,G__20804,G__20805,G__20806,G__20807,G__20808,G__20809,G__20810,G__20811,G__20812,G__20813,G__20814));
});
var G__21213__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__20815 = a;
var G__20816 = b;
var G__20817 = c;
var G__20818 = d;
var G__20819 = e;
var G__20820 = f;
var G__20821 = g;
var G__20822 = h;
var G__20823 = i;
var G__20824 = j;
var G__20825 = k;
var G__20826 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__20815,G__20816,G__20817,G__20818,G__20819,G__20820,G__20821,G__20822,G__20823,G__20824,G__20825,G__20826) : self__.afn.call(null,G__20815,G__20816,G__20817,G__20818,G__20819,G__20820,G__20821,G__20822,G__20823,G__20824,G__20825,G__20826));
});
var G__21213__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__20827 = a;
var G__20828 = b;
var G__20829 = c;
var G__20830 = d;
var G__20831 = e;
var G__20832 = f;
var G__20833 = g;
var G__20834 = h;
var G__20835 = i;
var G__20836 = j;
var G__20837 = k;
var G__20838 = l;
var G__20839 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__20827,G__20828,G__20829,G__20830,G__20831,G__20832,G__20833,G__20834,G__20835,G__20836,G__20837,G__20838,G__20839) : self__.afn.call(null,G__20827,G__20828,G__20829,G__20830,G__20831,G__20832,G__20833,G__20834,G__20835,G__20836,G__20837,G__20838,G__20839));
});
var G__21213__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__20840 = a;
var G__20841 = b;
var G__20842 = c;
var G__20843 = d;
var G__20844 = e;
var G__20845 = f;
var G__20846 = g;
var G__20847 = h;
var G__20848 = i;
var G__20849 = j;
var G__20850 = k;
var G__20851 = l;
var G__20852 = m;
var G__20853 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__20840,G__20841,G__20842,G__20843,G__20844,G__20845,G__20846,G__20847,G__20848,G__20849,G__20850,G__20851,G__20852,G__20853) : self__.afn.call(null,G__20840,G__20841,G__20842,G__20843,G__20844,G__20845,G__20846,G__20847,G__20848,G__20849,G__20850,G__20851,G__20852,G__20853));
});
var G__21213__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__20854 = a;
var G__20855 = b;
var G__20856 = c;
var G__20857 = d;
var G__20858 = e;
var G__20859 = f;
var G__20860 = g;
var G__20861 = h;
var G__20862 = i;
var G__20863 = j;
var G__20864 = k;
var G__20865 = l;
var G__20866 = m;
var G__20867 = n;
var G__20868 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__20854,G__20855,G__20856,G__20857,G__20858,G__20859,G__20860,G__20861,G__20862,G__20863,G__20864,G__20865,G__20866,G__20867,G__20868) : self__.afn.call(null,G__20854,G__20855,G__20856,G__20857,G__20858,G__20859,G__20860,G__20861,G__20862,G__20863,G__20864,G__20865,G__20866,G__20867,G__20868));
});
var G__21213__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__20869 = a;
var G__20870 = b;
var G__20871 = c;
var G__20872 = d;
var G__20873 = e;
var G__20874 = f;
var G__20875 = g;
var G__20876 = h;
var G__20877 = i;
var G__20878 = j;
var G__20879 = k;
var G__20880 = l;
var G__20881 = m;
var G__20882 = n;
var G__20883 = o;
var G__20884 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__20869,G__20870,G__20871,G__20872,G__20873,G__20874,G__20875,G__20876,G__20877,G__20878,G__20879,G__20880,G__20881,G__20882,G__20883,G__20884) : self__.afn.call(null,G__20869,G__20870,G__20871,G__20872,G__20873,G__20874,G__20875,G__20876,G__20877,G__20878,G__20879,G__20880,G__20881,G__20882,G__20883,G__20884));
});
var G__21213__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__20885 = a;
var G__20886 = b;
var G__20887 = c;
var G__20888 = d;
var G__20889 = e;
var G__20890 = f;
var G__20891 = g;
var G__20892 = h;
var G__20893 = i;
var G__20894 = j;
var G__20895 = k;
var G__20896 = l;
var G__20897 = m;
var G__20898 = n;
var G__20899 = o;
var G__20900 = p;
var G__20901 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__20885,G__20886,G__20887,G__20888,G__20889,G__20890,G__20891,G__20892,G__20893,G__20894,G__20895,G__20896,G__20897,G__20898,G__20899,G__20900,G__20901) : self__.afn.call(null,G__20885,G__20886,G__20887,G__20888,G__20889,G__20890,G__20891,G__20892,G__20893,G__20894,G__20895,G__20896,G__20897,G__20898,G__20899,G__20900,G__20901));
});
var G__21213__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__20902 = a;
var G__20903 = b;
var G__20904 = c;
var G__20905 = d;
var G__20906 = e;
var G__20907 = f;
var G__20908 = g;
var G__20909 = h;
var G__20910 = i;
var G__20911 = j;
var G__20912 = k;
var G__20913 = l;
var G__20914 = m;
var G__20915 = n;
var G__20916 = o;
var G__20917 = p;
var G__20918 = q;
var G__20919 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__20902,G__20903,G__20904,G__20905,G__20906,G__20907,G__20908,G__20909,G__20910,G__20911,G__20912,G__20913,G__20914,G__20915,G__20916,G__20917,G__20918,G__20919) : self__.afn.call(null,G__20902,G__20903,G__20904,G__20905,G__20906,G__20907,G__20908,G__20909,G__20910,G__20911,G__20912,G__20913,G__20914,G__20915,G__20916,G__20917,G__20918,G__20919));
});
var G__21213__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__20920 = a;
var G__20921 = b;
var G__20922 = c;
var G__20923 = d;
var G__20924 = e;
var G__20925 = f;
var G__20926 = g;
var G__20927 = h;
var G__20928 = i;
var G__20929 = j;
var G__20930 = k;
var G__20931 = l;
var G__20932 = m;
var G__20933 = n;
var G__20934 = o;
var G__20935 = p;
var G__20936 = q;
var G__20937 = r;
var G__20938 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__20920,G__20921,G__20922,G__20923,G__20924,G__20925,G__20926,G__20927,G__20928,G__20929,G__20930,G__20931,G__20932,G__20933,G__20934,G__20935,G__20936,G__20937,G__20938) : self__.afn.call(null,G__20920,G__20921,G__20922,G__20923,G__20924,G__20925,G__20926,G__20927,G__20928,G__20929,G__20930,G__20931,G__20932,G__20933,G__20934,G__20935,G__20936,G__20937,G__20938));
});
var G__21213__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__20939 = a;
var G__20940 = b;
var G__20941 = c;
var G__20942 = d;
var G__20943 = e;
var G__20944 = f;
var G__20945 = g;
var G__20946 = h;
var G__20947 = i;
var G__20948 = j;
var G__20949 = k;
var G__20950 = l;
var G__20951 = m;
var G__20952 = n;
var G__20953 = o;
var G__20954 = p;
var G__20955 = q;
var G__20956 = r;
var G__20957 = s;
var G__20958 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__20939,G__20940,G__20941,G__20942,G__20943,G__20944,G__20945,G__20946,G__20947,G__20948,G__20949,G__20950,G__20951,G__20952,G__20953,G__20954,G__20955,G__20956,G__20957,G__20958) : self__.afn.call(null,G__20939,G__20940,G__20941,G__20942,G__20943,G__20944,G__20945,G__20946,G__20947,G__20948,G__20949,G__20950,G__20951,G__20952,G__20953,G__20954,G__20955,G__20956,G__20957,G__20958));
});
var G__21213__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__20959 = self__.afn;
var G__20960 = a;
var G__20961 = b;
var G__20962 = c;
var G__20963 = d;
var G__20964 = e;
var G__20965 = f;
var G__20966 = g;
var G__20967 = h;
var G__20968 = i;
var G__20969 = j;
var G__20970 = k;
var G__20971 = l;
var G__20972 = m;
var G__20973 = n;
var G__20974 = o;
var G__20975 = p;
var G__20976 = q;
var G__20977 = r;
var G__20978 = s;
var G__20979 = t;
var G__20980 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__20959,G__20960,G__20961,G__20962,G__20963,G__20964,G__20965,G__20966,G__20967,G__20968,G__20969,G__20970,G__20971,G__20972,G__20973,G__20974,G__20975,G__20976,G__20977,G__20978,G__20979,G__20980) : cljs.core.apply.call(null,G__20959,G__20960,G__20961,G__20962,G__20963,G__20964,G__20965,G__20966,G__20967,G__20968,G__20969,G__20970,G__20971,G__20972,G__20973,G__20974,G__20975,G__20976,G__20977,G__20978,G__20979,G__20980));
});
G__21213 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__21213__1.call(this,self__);
case 2:
return G__21213__2.call(this,self__,a);
case 3:
return G__21213__3.call(this,self__,a,b);
case 4:
return G__21213__4.call(this,self__,a,b,c);
case 5:
return G__21213__5.call(this,self__,a,b,c,d);
case 6:
return G__21213__6.call(this,self__,a,b,c,d,e);
case 7:
return G__21213__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__21213__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__21213__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__21213__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__21213__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__21213__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__21213__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__21213__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__21213__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__21213__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__21213__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__21213__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__21213__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__21213__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__21213__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__21213__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21213.cljs$core$IFn$_invoke$arity$1 = G__21213__1;
G__21213.cljs$core$IFn$_invoke$arity$2 = G__21213__2;
G__21213.cljs$core$IFn$_invoke$arity$3 = G__21213__3;
G__21213.cljs$core$IFn$_invoke$arity$4 = G__21213__4;
G__21213.cljs$core$IFn$_invoke$arity$5 = G__21213__5;
G__21213.cljs$core$IFn$_invoke$arity$6 = G__21213__6;
G__21213.cljs$core$IFn$_invoke$arity$7 = G__21213__7;
G__21213.cljs$core$IFn$_invoke$arity$8 = G__21213__8;
G__21213.cljs$core$IFn$_invoke$arity$9 = G__21213__9;
G__21213.cljs$core$IFn$_invoke$arity$10 = G__21213__10;
G__21213.cljs$core$IFn$_invoke$arity$11 = G__21213__11;
G__21213.cljs$core$IFn$_invoke$arity$12 = G__21213__12;
G__21213.cljs$core$IFn$_invoke$arity$13 = G__21213__13;
G__21213.cljs$core$IFn$_invoke$arity$14 = G__21213__14;
G__21213.cljs$core$IFn$_invoke$arity$15 = G__21213__15;
G__21213.cljs$core$IFn$_invoke$arity$16 = G__21213__16;
G__21213.cljs$core$IFn$_invoke$arity$17 = G__21213__17;
G__21213.cljs$core$IFn$_invoke$arity$18 = G__21213__18;
G__21213.cljs$core$IFn$_invoke$arity$19 = G__21213__19;
G__21213.cljs$core$IFn$_invoke$arity$20 = G__21213__20;
G__21213.cljs$core$IFn$_invoke$arity$21 = G__21213__21;
G__21213.cljs$core$IFn$_invoke$arity$22 = G__21213__22;
return G__21213;
})()
;

cljs.core.MetaFn.prototype.apply = (function (self__,args20748){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args20748)));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
var G__20981 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__20981) : self__.afn.call(null,G__20981));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
var G__20982 = a;
var G__20983 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__20982,G__20983) : self__.afn.call(null,G__20982,G__20983));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
var G__20984 = a;
var G__20985 = b;
var G__20986 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__20984,G__20985,G__20986) : self__.afn.call(null,G__20984,G__20985,G__20986));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
var G__20987 = a;
var G__20988 = b;
var G__20989 = c;
var G__20990 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__20987,G__20988,G__20989,G__20990) : self__.afn.call(null,G__20987,G__20988,G__20989,G__20990));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
var G__20991 = a;
var G__20992 = b;
var G__20993 = c;
var G__20994 = d;
var G__20995 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__20991,G__20992,G__20993,G__20994,G__20995) : self__.afn.call(null,G__20991,G__20992,G__20993,G__20994,G__20995));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
var G__20996 = a;
var G__20997 = b;
var G__20998 = c;
var G__20999 = d;
var G__21000 = e;
var G__21001 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__20996,G__20997,G__20998,G__20999,G__21000,G__21001) : self__.afn.call(null,G__20996,G__20997,G__20998,G__20999,G__21000,G__21001));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
var G__21002 = a;
var G__21003 = b;
var G__21004 = c;
var G__21005 = d;
var G__21006 = e;
var G__21007 = f;
var G__21008 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__21002,G__21003,G__21004,G__21005,G__21006,G__21007,G__21008) : self__.afn.call(null,G__21002,G__21003,G__21004,G__21005,G__21006,G__21007,G__21008));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
var G__21009 = a;
var G__21010 = b;
var G__21011 = c;
var G__21012 = d;
var G__21013 = e;
var G__21014 = f;
var G__21015 = g;
var G__21016 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__21009,G__21010,G__21011,G__21012,G__21013,G__21014,G__21015,G__21016) : self__.afn.call(null,G__21009,G__21010,G__21011,G__21012,G__21013,G__21014,G__21015,G__21016));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
var G__21017 = a;
var G__21018 = b;
var G__21019 = c;
var G__21020 = d;
var G__21021 = e;
var G__21022 = f;
var G__21023 = g;
var G__21024 = h;
var G__21025 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__21017,G__21018,G__21019,G__21020,G__21021,G__21022,G__21023,G__21024,G__21025) : self__.afn.call(null,G__21017,G__21018,G__21019,G__21020,G__21021,G__21022,G__21023,G__21024,G__21025));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
var G__21026 = a;
var G__21027 = b;
var G__21028 = c;
var G__21029 = d;
var G__21030 = e;
var G__21031 = f;
var G__21032 = g;
var G__21033 = h;
var G__21034 = i;
var G__21035 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__21026,G__21027,G__21028,G__21029,G__21030,G__21031,G__21032,G__21033,G__21034,G__21035) : self__.afn.call(null,G__21026,G__21027,G__21028,G__21029,G__21030,G__21031,G__21032,G__21033,G__21034,G__21035));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
var G__21036 = a;
var G__21037 = b;
var G__21038 = c;
var G__21039 = d;
var G__21040 = e;
var G__21041 = f;
var G__21042 = g;
var G__21043 = h;
var G__21044 = i;
var G__21045 = j;
var G__21046 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__21036,G__21037,G__21038,G__21039,G__21040,G__21041,G__21042,G__21043,G__21044,G__21045,G__21046) : self__.afn.call(null,G__21036,G__21037,G__21038,G__21039,G__21040,G__21041,G__21042,G__21043,G__21044,G__21045,G__21046));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
var G__21047 = a;
var G__21048 = b;
var G__21049 = c;
var G__21050 = d;
var G__21051 = e;
var G__21052 = f;
var G__21053 = g;
var G__21054 = h;
var G__21055 = i;
var G__21056 = j;
var G__21057 = k;
var G__21058 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__21047,G__21048,G__21049,G__21050,G__21051,G__21052,G__21053,G__21054,G__21055,G__21056,G__21057,G__21058) : self__.afn.call(null,G__21047,G__21048,G__21049,G__21050,G__21051,G__21052,G__21053,G__21054,G__21055,G__21056,G__21057,G__21058));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
var G__21059 = a;
var G__21060 = b;
var G__21061 = c;
var G__21062 = d;
var G__21063 = e;
var G__21064 = f;
var G__21065 = g;
var G__21066 = h;
var G__21067 = i;
var G__21068 = j;
var G__21069 = k;
var G__21070 = l;
var G__21071 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__21059,G__21060,G__21061,G__21062,G__21063,G__21064,G__21065,G__21066,G__21067,G__21068,G__21069,G__21070,G__21071) : self__.afn.call(null,G__21059,G__21060,G__21061,G__21062,G__21063,G__21064,G__21065,G__21066,G__21067,G__21068,G__21069,G__21070,G__21071));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
var G__21072 = a;
var G__21073 = b;
var G__21074 = c;
var G__21075 = d;
var G__21076 = e;
var G__21077 = f;
var G__21078 = g;
var G__21079 = h;
var G__21080 = i;
var G__21081 = j;
var G__21082 = k;
var G__21083 = l;
var G__21084 = m;
var G__21085 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__21072,G__21073,G__21074,G__21075,G__21076,G__21077,G__21078,G__21079,G__21080,G__21081,G__21082,G__21083,G__21084,G__21085) : self__.afn.call(null,G__21072,G__21073,G__21074,G__21075,G__21076,G__21077,G__21078,G__21079,G__21080,G__21081,G__21082,G__21083,G__21084,G__21085));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
var G__21086 = a;
var G__21087 = b;
var G__21088 = c;
var G__21089 = d;
var G__21090 = e;
var G__21091 = f;
var G__21092 = g;
var G__21093 = h;
var G__21094 = i;
var G__21095 = j;
var G__21096 = k;
var G__21097 = l;
var G__21098 = m;
var G__21099 = n;
var G__21100 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__21086,G__21087,G__21088,G__21089,G__21090,G__21091,G__21092,G__21093,G__21094,G__21095,G__21096,G__21097,G__21098,G__21099,G__21100) : self__.afn.call(null,G__21086,G__21087,G__21088,G__21089,G__21090,G__21091,G__21092,G__21093,G__21094,G__21095,G__21096,G__21097,G__21098,G__21099,G__21100));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
var G__21101 = a;
var G__21102 = b;
var G__21103 = c;
var G__21104 = d;
var G__21105 = e;
var G__21106 = f;
var G__21107 = g;
var G__21108 = h;
var G__21109 = i;
var G__21110 = j;
var G__21111 = k;
var G__21112 = l;
var G__21113 = m;
var G__21114 = n;
var G__21115 = o;
var G__21116 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__21101,G__21102,G__21103,G__21104,G__21105,G__21106,G__21107,G__21108,G__21109,G__21110,G__21111,G__21112,G__21113,G__21114,G__21115,G__21116) : self__.afn.call(null,G__21101,G__21102,G__21103,G__21104,G__21105,G__21106,G__21107,G__21108,G__21109,G__21110,G__21111,G__21112,G__21113,G__21114,G__21115,G__21116));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
var G__21117 = a;
var G__21118 = b;
var G__21119 = c;
var G__21120 = d;
var G__21121 = e;
var G__21122 = f;
var G__21123 = g;
var G__21124 = h;
var G__21125 = i;
var G__21126 = j;
var G__21127 = k;
var G__21128 = l;
var G__21129 = m;
var G__21130 = n;
var G__21131 = o;
var G__21132 = p;
var G__21133 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__21117,G__21118,G__21119,G__21120,G__21121,G__21122,G__21123,G__21124,G__21125,G__21126,G__21127,G__21128,G__21129,G__21130,G__21131,G__21132,G__21133) : self__.afn.call(null,G__21117,G__21118,G__21119,G__21120,G__21121,G__21122,G__21123,G__21124,G__21125,G__21126,G__21127,G__21128,G__21129,G__21130,G__21131,G__21132,G__21133));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
var G__21134 = a;
var G__21135 = b;
var G__21136 = c;
var G__21137 = d;
var G__21138 = e;
var G__21139 = f;
var G__21140 = g;
var G__21141 = h;
var G__21142 = i;
var G__21143 = j;
var G__21144 = k;
var G__21145 = l;
var G__21146 = m;
var G__21147 = n;
var G__21148 = o;
var G__21149 = p;
var G__21150 = q;
var G__21151 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__21134,G__21135,G__21136,G__21137,G__21138,G__21139,G__21140,G__21141,G__21142,G__21143,G__21144,G__21145,G__21146,G__21147,G__21148,G__21149,G__21150,G__21151) : self__.afn.call(null,G__21134,G__21135,G__21136,G__21137,G__21138,G__21139,G__21140,G__21141,G__21142,G__21143,G__21144,G__21145,G__21146,G__21147,G__21148,G__21149,G__21150,G__21151));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
var G__21152 = a;
var G__21153 = b;
var G__21154 = c;
var G__21155 = d;
var G__21156 = e;
var G__21157 = f;
var G__21158 = g;
var G__21159 = h;
var G__21160 = i;
var G__21161 = j;
var G__21162 = k;
var G__21163 = l;
var G__21164 = m;
var G__21165 = n;
var G__21166 = o;
var G__21167 = p;
var G__21168 = q;
var G__21169 = r;
var G__21170 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__21152,G__21153,G__21154,G__21155,G__21156,G__21157,G__21158,G__21159,G__21160,G__21161,G__21162,G__21163,G__21164,G__21165,G__21166,G__21167,G__21168,G__21169,G__21170) : self__.afn.call(null,G__21152,G__21153,G__21154,G__21155,G__21156,G__21157,G__21158,G__21159,G__21160,G__21161,G__21162,G__21163,G__21164,G__21165,G__21166,G__21167,G__21168,G__21169,G__21170));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
var G__21171 = a;
var G__21172 = b;
var G__21173 = c;
var G__21174 = d;
var G__21175 = e;
var G__21176 = f;
var G__21177 = g;
var G__21178 = h;
var G__21179 = i;
var G__21180 = j;
var G__21181 = k;
var G__21182 = l;
var G__21183 = m;
var G__21184 = n;
var G__21185 = o;
var G__21186 = p;
var G__21187 = q;
var G__21188 = r;
var G__21189 = s;
var G__21190 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__21171,G__21172,G__21173,G__21174,G__21175,G__21176,G__21177,G__21178,G__21179,G__21180,G__21181,G__21182,G__21183,G__21184,G__21185,G__21186,G__21187,G__21188,G__21189,G__21190) : self__.afn.call(null,G__21171,G__21172,G__21173,G__21174,G__21175,G__21176,G__21177,G__21178,G__21179,G__21180,G__21181,G__21182,G__21183,G__21184,G__21185,G__21186,G__21187,G__21188,G__21189,G__21190));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__21191 = self__.afn;
var G__21192 = a;
var G__21193 = b;
var G__21194 = c;
var G__21195 = d;
var G__21196 = e;
var G__21197 = f;
var G__21198 = g;
var G__21199 = h;
var G__21200 = i;
var G__21201 = j;
var G__21202 = k;
var G__21203 = l;
var G__21204 = m;
var G__21205 = n;
var G__21206 = o;
var G__21207 = p;
var G__21208 = q;
var G__21209 = r;
var G__21210 = s;
var G__21211 = t;
var G__21212 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__21191,G__21192,G__21193,G__21194,G__21195,G__21196,G__21197,G__21198,G__21199,G__21200,G__21201,G__21202,G__21203,G__21204,G__21205,G__21206,G__21207,G__21208,G__21209,G__21210,G__21211,G__21212) : cljs.core.apply.call(null,G__21191,G__21192,G__21193,G__21194,G__21195,G__21196,G__21197,G__21198,G__21199,G__21200,G__21201,G__21202,G__21203,G__21204,G__21205,G__21206,G__21207,G__21208,G__21209,G__21210,G__21211,G__21212));
});

cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;

cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.MetaFn(self__.afn,new_meta));
});

cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.MetaFn.cljs$lang$type = true;

cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";

cljs.core.MetaFn.cljs$lang$ctorPrWriter = (function (this__12187__auto__,writer__12188__auto__,opt__12189__auto__){
return cljs.core._write(writer__12188__auto__,"cljs.core/MetaFn");
});

cljs.core.__GT_MetaFn = (function __GT_MetaFn(afn,meta){
return (new cljs.core.MetaFn(afn,meta));
});

/**
* Returns an object of the same type and value as obj, with
* map m as its metadata.
*/
cljs.core.with_meta = (function with_meta(o,meta){
if((cljs.core.fn_QMARK_(o)) && (!((function (){var G__21217 = o;
if(G__21217){
var bit__12281__auto__ = (G__21217.cljs$lang$protocol_mask$partition0$ & (262144));
if((bit__12281__auto__) || (G__21217.cljs$core$IWithMeta$)){
return true;
} else {
if((!G__21217.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__21217);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__21217);
}
})()))){
return (new cljs.core.MetaFn(o,meta));
} else {
if((o == null)){
return null;
} else {
return cljs.core._with_meta(o,meta);
}
}
});
/**
* Returns the metadata of obj, returns nil if there is no metadata.
*/
cljs.core.meta = (function meta(o){
if((function (){var and__11588__auto__ = !((o == null));
if(and__11588__auto__){
var G__21221 = o;
if(G__21221){
var bit__12281__auto__ = (G__21221.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__12281__auto__) || (G__21221.cljs$core$IMeta$)){
return true;
} else {
if((!G__21221.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__21221);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__21221);
}
} else {
return and__11588__auto__;
}
})()){
return cljs.core._meta(o);
} else {
return null;
}
});
/**
* For a list or queue, same as first, for a vector, same as, but much
* more efficient than, last. If the collection is empty, returns nil.
*/
cljs.core.peek = (function peek(coll){
if((coll == null)){
return null;
} else {
return cljs.core._peek(coll);
}
});
/**
* For a list or queue, returns a new list/queue without the first
* item, for a vector, returns a new vector without the last item.
* Note - not the same as next/butlast.
*/
cljs.core.pop = (function pop(coll){
if((coll == null)){
return null;
} else {
return cljs.core._pop(coll);
}
});
/**
* disj[oin]. Returns a new set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj = (function() {
var disj = null;
var disj__1 = (function (coll){
return coll;
});
var disj__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._disjoin(coll,k);
}
});
var disj__3 = (function() { 
var G__21224__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = disj.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__21225 = ret;
var G__21226 = cljs.core.first(ks);
var G__21227 = cljs.core.next(ks);
coll = G__21225;
k = G__21226;
ks = G__21227;
continue;
} else {
return ret;
}
}
break;
}
};
var G__21224 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__21228__i = 0, G__21228__a = new Array(arguments.length -  2);
while (G__21228__i < G__21228__a.length) {G__21228__a[G__21228__i] = arguments[G__21228__i + 2]; ++G__21228__i;}
  ks = new cljs.core.IndexedSeq(G__21228__a,0);
} 
return G__21224__delegate.call(this,coll,k,ks);};
G__21224.cljs$lang$maxFixedArity = 2;
G__21224.cljs$lang$applyTo = (function (arglist__21229){
var coll = cljs.core.first(arglist__21229);
arglist__21229 = cljs.core.next(arglist__21229);
var k = cljs.core.first(arglist__21229);
var ks = cljs.core.rest(arglist__21229);
return G__21224__delegate(coll,k,ks);
});
G__21224.cljs$core$IFn$_invoke$arity$variadic = G__21224__delegate;
return G__21224;
})()
;
disj = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return disj__1.call(this,coll);
case 2:
return disj__2.call(this,coll,k);
default:
var G__21230 = null;
if (arguments.length > 2) {
var G__21231__i = 0, G__21231__a = new Array(arguments.length -  2);
while (G__21231__i < G__21231__a.length) {G__21231__a[G__21231__i] = arguments[G__21231__i + 2]; ++G__21231__i;}
G__21230 = new cljs.core.IndexedSeq(G__21231__a,0);
}
return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__21230);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj.cljs$lang$maxFixedArity = 2;
disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
return disj;
})()
;
/**
* Returns true if coll has no items - same as (not (seq coll)).
* Please use the idiom (seq x) rather than (not (empty? x))
*/
cljs.core.empty_QMARK_ = (function empty_QMARK_(coll){
return ((coll == null)) || (cljs.core.not(cljs.core.seq(coll)));
});
/**
* Returns true if x satisfies ICollection
*/
cljs.core.coll_QMARK_ = (function coll_QMARK_(x){
if((x == null)){
return false;
} else {
var G__21233 = x;
if(G__21233){
var bit__12281__auto__ = (G__21233.cljs$lang$protocol_mask$partition0$ & (8));
if((bit__12281__auto__) || (G__21233.cljs$core$ICollection$)){
return true;
} else {
if((!G__21233.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__21233);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__21233);
}
}
});
/**
* Returns true if x satisfies ISet
*/
cljs.core.set_QMARK_ = (function set_QMARK_(x){
if((x == null)){
return false;
} else {
var G__21235 = x;
if(G__21235){
var bit__12281__auto__ = (G__21235.cljs$lang$protocol_mask$partition0$ & (4096));
if((bit__12281__auto__) || (G__21235.cljs$core$ISet$)){
return true;
} else {
if((!G__21235.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__21235);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__21235);
}
}
});
/**
* Returns true if coll implements Associative
*/
cljs.core.associative_QMARK_ = (function associative_QMARK_(x){
var G__21237 = x;
if(G__21237){
var bit__12281__auto__ = (G__21237.cljs$lang$protocol_mask$partition0$ & (512));
if((bit__12281__auto__) || (G__21237.cljs$core$IAssociative$)){
return true;
} else {
if((!G__21237.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__21237);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__21237);
}
});
/**
* Returns true if coll satisfies ISequential
*/
cljs.core.sequential_QMARK_ = (function sequential_QMARK_(x){
var G__21239 = x;
if(G__21239){
var bit__12281__auto__ = (G__21239.cljs$lang$protocol_mask$partition0$ & (16777216));
if((bit__12281__auto__) || (G__21239.cljs$core$ISequential$)){
return true;
} else {
if((!G__21239.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__21239);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__21239);
}
});
/**
* Returns true if coll satisfies ISorted
*/
cljs.core.sorted_QMARK_ = (function sorted_QMARK_(x){
var G__21241 = x;
if(G__21241){
var bit__12281__auto__ = (G__21241.cljs$lang$protocol_mask$partition0$ & (268435456));
if((bit__12281__auto__) || (G__21241.cljs$core$ISorted$)){
return true;
} else {
if((!G__21241.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__21241);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__21241);
}
});
/**
* Returns true if coll satisfies IReduce
*/
cljs.core.reduceable_QMARK_ = (function reduceable_QMARK_(x){
var G__21243 = x;
if(G__21243){
var bit__12281__auto__ = (G__21243.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__12281__auto__) || (G__21243.cljs$core$IReduce$)){
return true;
} else {
if((!G__21243.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__21243);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__21243);
}
});
/**
* Return true if x satisfies IMap
*/
cljs.core.map_QMARK_ = (function map_QMARK_(x){
if((x == null)){
return false;
} else {
var G__21245 = x;
if(G__21245){
var bit__12281__auto__ = (G__21245.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__12281__auto__) || (G__21245.cljs$core$IMap$)){
return true;
} else {
if((!G__21245.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__21245);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__21245);
}
}
});
/**
* Return true if x satisfies IVector
*/
cljs.core.vector_QMARK_ = (function vector_QMARK_(x){
var G__21247 = x;
if(G__21247){
var bit__12281__auto__ = (G__21247.cljs$lang$protocol_mask$partition0$ & (16384));
if((bit__12281__auto__) || (G__21247.cljs$core$IVector$)){
return true;
} else {
if((!G__21247.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__21247);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__21247);
}
});

cljs.core.chunked_seq_QMARK_ = (function chunked_seq_QMARK_(x){
var G__21249 = x;
if(G__21249){
var bit__12274__auto__ = (G__21249.cljs$lang$protocol_mask$partition1$ & (512));
if((bit__12274__auto__) || (G__21249.cljs$core$IChunkedSeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
});
/**
* @param {...*} var_args
*/
cljs.core.js_obj = (function() {
var js_obj = null;
var js_obj__0 = (function (){
var obj21255 = {};
return obj21255;
});
var js_obj__1 = (function() { 
var G__21258__delegate = function (keyvals){
var G__21256 = goog.object.create;
var G__21257 = keyvals;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(G__21256,G__21257) : cljs.core.apply.call(null,G__21256,G__21257));
};
var G__21258 = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__21259__i = 0, G__21259__a = new Array(arguments.length -  0);
while (G__21259__i < G__21259__a.length) {G__21259__a[G__21259__i] = arguments[G__21259__i + 0]; ++G__21259__i;}
  keyvals = new cljs.core.IndexedSeq(G__21259__a,0);
} 
return G__21258__delegate.call(this,keyvals);};
G__21258.cljs$lang$maxFixedArity = 0;
G__21258.cljs$lang$applyTo = (function (arglist__21260){
var keyvals = cljs.core.seq(arglist__21260);
return G__21258__delegate(keyvals);
});
G__21258.cljs$core$IFn$_invoke$arity$variadic = G__21258__delegate;
return G__21258;
})()
;
js_obj = function(var_args){
var keyvals = var_args;
switch(arguments.length){
case 0:
return js_obj__0.call(this);
default:
var G__21261 = null;
if (arguments.length > 0) {
var G__21262__i = 0, G__21262__a = new Array(arguments.length -  0);
while (G__21262__i < G__21262__a.length) {G__21262__a[G__21262__i] = arguments[G__21262__i + 0]; ++G__21262__i;}
G__21261 = new cljs.core.IndexedSeq(G__21262__a,0);
}
return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(G__21261);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js_obj.cljs$lang$maxFixedArity = 0;
js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
return js_obj;
})()
;
cljs.core.js_keys = (function js_keys(obj){
var keys = [];
var G__21265_21267 = obj;
var G__21266_21268 = ((function (G__21265_21267,keys){
return (function (val,key,obj__$1){
return keys.push(key);
});})(G__21265_21267,keys))
;
goog.object.forEach(G__21265_21267,G__21266_21268);

return keys;
});
cljs.core.js_delete = (function js_delete(obj,key){
return delete obj[key];
});
cljs.core.array_copy = (function array_copy(from,i,to,j,len){
var i__$1 = i;
var j__$1 = j;
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__21269 = (i__$1 + (1));
var G__21270 = (j__$1 + (1));
var G__21271 = (len__$1 - (1));
i__$1 = G__21269;
j__$1 = G__21270;
len__$1 = G__21271;
continue;
}
break;
}
});
cljs.core.array_copy_downward = (function array_copy_downward(from,i,to,j,len){
var i__$1 = (i + (len - (1)));
var j__$1 = (j + (len - (1)));
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__21272 = (i__$1 - (1));
var G__21273 = (j__$1 - (1));
var G__21274 = (len__$1 - (1));
i__$1 = G__21272;
j__$1 = G__21273;
len__$1 = G__21274;
continue;
}
break;
}
});
cljs.core.lookup_sentinel = (function (){var obj21276 = {};
return obj21276;
})();
/**
* Returns true if x is the value false, false otherwise.
*/
cljs.core.false_QMARK_ = (function false_QMARK_(x){
return x === false;
});
/**
* Returns true if x is the value true, false otherwise.
*/
cljs.core.true_QMARK_ = (function true_QMARK_(x){
return x === true;
});
cljs.core.undefined_QMARK_ = (function undefined_QMARK_(x){
return (void 0 === x);
});
/**
* Return true if s satisfies ISeq
*/
cljs.core.seq_QMARK_ = (function seq_QMARK_(s){
if((s == null)){
return false;
} else {
var G__21278 = s;
if(G__21278){
var bit__12281__auto__ = (G__21278.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__12281__auto__) || (G__21278.cljs$core$ISeq$)){
return true;
} else {
if((!G__21278.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__21278);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__21278);
}
}
});
/**
* Return true if s satisfies ISeqable
*/
cljs.core.seqable_QMARK_ = (function seqable_QMARK_(s){
var G__21280 = s;
if(G__21280){
var bit__12281__auto__ = (G__21280.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__12281__auto__) || (G__21280.cljs$core$ISeqable$)){
return true;
} else {
if((!G__21280.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__21280);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__21280);
}
});
cljs.core.boolean$ = (function boolean$(x){
if(cljs.core.truth_(x)){
return true;
} else {
return false;
}
});
cljs.core.ifn_QMARK_ = (function ifn_QMARK_(f){
var or__11600__auto__ = cljs.core.fn_QMARK_(f);
if(or__11600__auto__){
return or__11600__auto__;
} else {
var G__21284 = f;
if(G__21284){
var bit__12281__auto__ = (G__21284.cljs$lang$protocol_mask$partition0$ & (1));
if((bit__12281__auto__) || (G__21284.cljs$core$IFn$)){
return true;
} else {
if((!G__21284.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__21284);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__21284);
}
}
});
/**
* Returns true if n is an integer.
*/
cljs.core.integer_QMARK_ = (function integer_QMARK_(n){
return (typeof n === 'number') && (cljs.core.not((function (){var G__21297 = n;
return isNaN(G__21297);
})())) && (!((n === Infinity))) && (((function (){var G__21298 = n;
return parseFloat(G__21298);
})() === (function (){var G__21299 = n;
var G__21300 = (10);
return parseInt(G__21299,G__21300);
})()));
});
/**
* Returns true if key is present in the given collection, otherwise
* returns false.  Note that for numerically indexed collections like
* vectors and arrays, this tests if the numeric key is within the
* range of indexes. 'contains?' operates constant or logarithmic time;
* it will not perform a linear search for a value.  See also 'some'.
*/
cljs.core.contains_QMARK_ = (function contains_QMARK_(coll,v){
if((cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return false;
} else {
return true;
}
});
/**
* Returns the map entry for key, or nil if key not present.
*/
cljs.core.find = (function find(coll,k){
if((!((coll == null))) && (cljs.core.associative_QMARK_(coll)) && (cljs.core.contains_QMARK_(coll,k))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,k)], null);
} else {
return null;
}
});
/**
* Returns true if no two of the arguments are =
* @param {...*} var_args
*/
cljs.core.distinct_QMARK_ = (function() {
var distinct_QMARK_ = null;
var distinct_QMARK___1 = (function (x){
return true;
});
var distinct_QMARK___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var distinct_QMARK___3 = (function() { 
var G__21301__delegate = function (x,y,more){
if(!(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y))){
var s = cljs.core.PersistentHashSet.fromArray([x,y], true);
var xs = more;
while(true){
var x__$1 = cljs.core.first(xs);
var etc = cljs.core.next(xs);
if(cljs.core.truth_(xs)){
if(cljs.core.contains_QMARK_(s,x__$1)){
return false;
} else {
var G__21302 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s,x__$1);
var G__21303 = etc;
s = G__21302;
xs = G__21303;
continue;
}
} else {
return true;
}
break;
}
} else {
return false;
}
};
var G__21301 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__21304__i = 0, G__21304__a = new Array(arguments.length -  2);
while (G__21304__i < G__21304__a.length) {G__21304__a[G__21304__i] = arguments[G__21304__i + 2]; ++G__21304__i;}
  more = new cljs.core.IndexedSeq(G__21304__a,0);
} 
return G__21301__delegate.call(this,x,y,more);};
G__21301.cljs$lang$maxFixedArity = 2;
G__21301.cljs$lang$applyTo = (function (arglist__21305){
var x = cljs.core.first(arglist__21305);
arglist__21305 = cljs.core.next(arglist__21305);
var y = cljs.core.first(arglist__21305);
var more = cljs.core.rest(arglist__21305);
return G__21301__delegate(x,y,more);
});
G__21301.cljs$core$IFn$_invoke$arity$variadic = G__21301__delegate;
return G__21301;
})()
;
distinct_QMARK_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return distinct_QMARK___1.call(this,x);
case 2:
return distinct_QMARK___2.call(this,x,y);
default:
var G__21306 = null;
if (arguments.length > 2) {
var G__21307__i = 0, G__21307__a = new Array(arguments.length -  2);
while (G__21307__i < G__21307__a.length) {G__21307__a[G__21307__i] = arguments[G__21307__i + 2]; ++G__21307__i;}
G__21306 = new cljs.core.IndexedSeq(G__21307__a,0);
}
return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__21306);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct_QMARK_.cljs$lang$maxFixedArity = 2;
distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
return distinct_QMARK_;
})()
;
/**
* Comparator. Returns a negative number, zero, or a positive number
* when x is logically 'less than', 'equal to', or 'greater than'
* y. Uses IComparable if available and google.array.defaultCompare for objects
* of the same type and special-cases nil to be less than any other object.
*/
cljs.core.compare = (function compare(x,y){
if((x === y)){
return (0);
} else {
if((x == null)){
return (-1);
} else {
if((y == null)){
return (1);
} else {
if((cljs.core.type(x) === cljs.core.type(y))){
if((function (){var G__21311 = x;
if(G__21311){
var bit__12274__auto__ = (G__21311.cljs$lang$protocol_mask$partition1$ & (2048));
if((bit__12274__auto__) || (G__21311.cljs$core$IComparable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(null,y);
} else {
var G__21312 = x;
var G__21313 = y;
return goog.array.defaultCompare(G__21312,G__21313);
}
} else {
throw (new Error("compare on non-nil objects of different types"));

}
}
}
}
});
/**
* Compare indexed collection.
*/
cljs.core.compare_indexed = (function() {
var compare_indexed = null;
var compare_indexed__2 = (function (xs,ys){
var xl = cljs.core.count(xs);
var yl = cljs.core.count(ys);
if((xl < yl)){
return (-1);
} else {
if((xl > yl)){
return (1);
} else {
return compare_indexed.cljs$core$IFn$_invoke$arity$4(xs,ys,xl,(0));

}
}
});
var compare_indexed__4 = (function (xs,ys,len,n){
while(true){
var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs,n),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys,n));
if(((d === (0))) && (((n + (1)) < len))){
var G__21318 = xs;
var G__21319 = ys;
var G__21320 = len;
var G__21321 = (n + (1));
xs = G__21318;
ys = G__21319;
len = G__21320;
n = G__21321;
continue;
} else {
return d;
}
break;
}
});
compare_indexed = function(xs,ys,len,n){
switch(arguments.length){
case 2:
return compare_indexed__2.call(this,xs,ys);
case 4:
return compare_indexed__4.call(this,xs,ys,len,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
return compare_indexed;
})()
;
/**
* Given a fn that might be boolean valued or a comparator,
* return a fn that is a comparator.
*/
cljs.core.fn__GT_comparator = (function fn__GT_comparator(f){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f,cljs.core.compare)){
return cljs.core.compare;
} else {
return (function (x,y){
var r = (function (){var G__21326 = x;
var G__21327 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21326,G__21327) : f.call(null,G__21326,G__21327));
})();
if(typeof r === 'number'){
return r;
} else {
if(cljs.core.truth_(r)){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__21328 = y;
var G__21329 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21328,G__21329) : f.call(null,G__21328,G__21329));
})())){
return (1);
} else {
return (0);
}
}
}
});
}
});
/**
* Returns a sorted sequence of the items in coll. Comp can be
* boolean-valued comparison function, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort = (function() {
var sort = null;
var sort__1 = (function (coll){
return sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare,coll);
});
var sort__2 = (function (comp,coll){
if(cljs.core.seq(coll)){
var a = (function (){var G__21335 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__21335) : cljs.core.to_array.call(null,G__21335));
})();
var G__21336_21338 = a;
var G__21337_21339 = cljs.core.fn__GT_comparator(comp);
goog.array.stableSort(G__21336_21338,G__21337_21339);

return cljs.core.seq(a);
} else {
return cljs.core.List.EMPTY;
}
});
sort = function(comp,coll){
switch(arguments.length){
case 1:
return sort__1.call(this,comp);
case 2:
return sort__2.call(this,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
return sort;
})()
;
/**
* Returns a sorted sequence of the items in coll, where the sort
* order is determined by comparing (keyfn item).  Comp can be
* boolean-valued comparison funcion, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort_by = (function() {
var sort_by = null;
var sort_by__2 = (function (keyfn,coll){
return sort_by.cljs$core$IFn$_invoke$arity$3(keyfn,cljs.core.compare,coll);
});
var sort_by__3 = (function (keyfn,comp,coll){
return cljs.core.sort.cljs$core$IFn$_invoke$arity$2((function (x,y){
return cljs.core.fn__GT_comparator(comp).call(null,(function (){var G__21345 = x;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__21345) : keyfn.call(null,G__21345));
})(),(function (){var G__21346 = y;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__21346) : keyfn.call(null,G__21346));
})());
}),coll);
});
sort_by = function(keyfn,comp,coll){
switch(arguments.length){
case 2:
return sort_by__2.call(this,keyfn,comp);
case 3:
return sort_by__3.call(this,keyfn,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
return sort_by;
})()
;
cljs.core.seq_reduce = (function() {
var seq_reduce = null;
var seq_reduce__2 = (function (f,coll){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
var G__21352 = f;
var G__21353 = cljs.core.first(s);
var G__21354 = cljs.core.next(s);
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__21352,G__21353,G__21354) : cljs.core.reduce.call(null,G__21352,G__21353,G__21354));
} else {
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
}
});
var seq_reduce__3 = (function (f,val,coll){
var val__$1 = val;
var coll__$1 = cljs.core.seq(coll);
while(true){
if(coll__$1){
var nval = (function (){var G__21355 = val__$1;
var G__21356 = cljs.core.first(coll__$1);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21355,G__21356) : f.call(null,G__21355,G__21356));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__21357 = nval;
var G__21358 = cljs.core.next(coll__$1);
val__$1 = G__21357;
coll__$1 = G__21358;
continue;
}
} else {
return val__$1;
}
break;
}
});
seq_reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return seq_reduce__2.call(this,f,val);
case 3:
return seq_reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
return seq_reduce;
})()
;
/**
* Return a random permutation of coll
*/
cljs.core.shuffle = (function shuffle(coll){
var a = (function (){var G__21362 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__21362) : cljs.core.to_array.call(null,G__21362));
})();
var G__21363_21365 = a;
goog.array.shuffle(G__21363_21365);

var G__21364 = a;
return (cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(G__21364) : cljs.core.vec.call(null,G__21364));
});
/**
* f should be a function of 2 arguments. If val is not supplied,
* returns the result of applying f to the first 2 items in coll, then
* applying f to that result and the 3rd item, etc. If coll contains no
* items, f must accept no arguments as well, and reduce returns the
* result of calling f with no arguments.  If coll has only 1 item, it
* is returned and f is not called.  If val is supplied, returns the
* result of applying f to val and the first item in coll, then
* applying f to that result and the 2nd item, etc. If coll contains no
* items, returns val and f is not called.
*/
cljs.core.reduce = (function() {
var reduce = null;
var reduce__2 = (function (f,coll){
if((function (){var G__21368 = coll;
if(G__21368){
var bit__12274__auto__ = (G__21368.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__12274__auto__) || (G__21368.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(null,f);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll);

}
}
}
}
});
var reduce__3 = (function (f,val,coll){
if((function (){var G__21369 = coll;
if(G__21369){
var bit__12274__auto__ = (G__21369.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__12274__auto__) || (G__21369.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(null,f,val);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,val,coll);

}
}
}
}
});
reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return reduce__2.call(this,f,val);
case 3:
return reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
return reduce;
})()
;
/**
* Reduces an associative collection. f should be a function of 3
* arguments. Returns the result of applying f to init, the first key
* and the first value in coll, then applying f to that result and the
* 2nd key and value, etc. If coll contains no entries, returns init
* and f is not called. Note that reduce-kv is supported on vectors,
* where the keys will be the ordinals.
*/
cljs.core.reduce_kv = (function reduce_kv(f,init,coll){
if(!((coll == null))){
return cljs.core._kv_reduce(coll,f,init);
} else {
return init;
}
});
cljs.core.identity = (function identity(x){
return x;
});
cljs.core.completing = (function() {
var completing = null;
var completing__1 = (function (f){
return completing.cljs$core$IFn$_invoke$arity$2(f,cljs.core.identity);
});
var completing__2 = (function (f,cf){
return (function() {
var G__21378 = null;
var G__21378__0 = (function (){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
});
var G__21378__1 = (function (x){
var G__21375 = x;
return (cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(G__21375) : cf.call(null,G__21375));
});
var G__21378__2 = (function (x,y){
var G__21376 = x;
var G__21377 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21376,G__21377) : f.call(null,G__21376,G__21377));
});
G__21378 = function(x,y){
switch(arguments.length){
case 0:
return G__21378__0.call(this);
case 1:
return G__21378__1.call(this,x);
case 2:
return G__21378__2.call(this,x,y);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21378.cljs$core$IFn$_invoke$arity$0 = G__21378__0;
G__21378.cljs$core$IFn$_invoke$arity$1 = G__21378__1;
G__21378.cljs$core$IFn$_invoke$arity$2 = G__21378__2;
return G__21378;
})()
});
completing = function(f,cf){
switch(arguments.length){
case 1:
return completing__1.call(this,f);
case 2:
return completing__2.call(this,f,cf);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
completing.cljs$core$IFn$_invoke$arity$1 = completing__1;
completing.cljs$core$IFn$_invoke$arity$2 = completing__2;
return completing;
})()
;
/**
* reduce with a transformation of f (xf). If init is not
* supplied, (f) will be called to produce it. f should be a reducing
* step function that accepts both 1 and 2 arguments, if it accepts
* only 2 you can add the arity-1 with 'completing'. Returns the result
* of applying (the transformed) xf to init and the first item in coll,
* then applying xf to that result and the 2nd item, etc. If coll
* contains no items, returns init and f is not called. Note that
* certain transforms may inject or skip items.
*/
cljs.core.transduce = (function() {
var transduce = null;
var transduce__3 = (function (xform,f,coll){
return transduce.cljs$core$IFn$_invoke$arity$4(xform,f,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),coll);
});
var transduce__4 = (function (xform,f,init,coll){
var f__$1 = (function (){var G__21385 = f;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__21385) : xform.call(null,G__21385));
})();
var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1,init,coll);
var G__21386 = ret;
return (f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__21386) : f__$1.call(null,G__21386));
});
transduce = function(xform,f,init,coll){
switch(arguments.length){
case 3:
return transduce__3.call(this,xform,f,init);
case 4:
return transduce__4.call(this,xform,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
transduce.cljs$core$IFn$_invoke$arity$3 = transduce__3;
transduce.cljs$core$IFn$_invoke$arity$4 = transduce__4;
return transduce;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core._PLUS_ = (function() {
var _PLUS_ = null;
var _PLUS___0 = (function (){
return (0);
});
var _PLUS___1 = (function (x){
return x;
});
var _PLUS___2 = (function (x,y){
return (x + y);
});
var _PLUS___3 = (function() { 
var G__21387__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_PLUS_,(x + y),more);
};
var G__21387 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__21388__i = 0, G__21388__a = new Array(arguments.length -  2);
while (G__21388__i < G__21388__a.length) {G__21388__a[G__21388__i] = arguments[G__21388__i + 2]; ++G__21388__i;}
  more = new cljs.core.IndexedSeq(G__21388__a,0);
} 
return G__21387__delegate.call(this,x,y,more);};
G__21387.cljs$lang$maxFixedArity = 2;
G__21387.cljs$lang$applyTo = (function (arglist__21389){
var x = cljs.core.first(arglist__21389);
arglist__21389 = cljs.core.next(arglist__21389);
var y = cljs.core.first(arglist__21389);
var more = cljs.core.rest(arglist__21389);
return G__21387__delegate(x,y,more);
});
G__21387.cljs$core$IFn$_invoke$arity$variadic = G__21387__delegate;
return G__21387;
})()
;
_PLUS_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _PLUS___0.call(this);
case 1:
return _PLUS___1.call(this,x);
case 2:
return _PLUS___2.call(this,x,y);
default:
var G__21390 = null;
if (arguments.length > 2) {
var G__21391__i = 0, G__21391__a = new Array(arguments.length -  2);
while (G__21391__i < G__21391__a.length) {G__21391__a[G__21391__i] = arguments[G__21391__i + 2]; ++G__21391__i;}
G__21390 = new cljs.core.IndexedSeq(G__21391__a,0);
}
return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__21390);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_PLUS_.cljs$lang$maxFixedArity = 2;
_PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
_PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
_PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
_PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
_PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
return _PLUS_;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core._ = (function() {
var _ = null;
var ___1 = (function (x){
return (- x);
});
var ___2 = (function (x,y){
return (x - y);
});
var ___3 = (function() { 
var G__21392__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_,(x - y),more);
};
var G__21392 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__21393__i = 0, G__21393__a = new Array(arguments.length -  2);
while (G__21393__i < G__21393__a.length) {G__21393__a[G__21393__i] = arguments[G__21393__i + 2]; ++G__21393__i;}
  more = new cljs.core.IndexedSeq(G__21393__a,0);
} 
return G__21392__delegate.call(this,x,y,more);};
G__21392.cljs$lang$maxFixedArity = 2;
G__21392.cljs$lang$applyTo = (function (arglist__21394){
var x = cljs.core.first(arglist__21394);
arglist__21394 = cljs.core.next(arglist__21394);
var y = cljs.core.first(arglist__21394);
var more = cljs.core.rest(arglist__21394);
return G__21392__delegate(x,y,more);
});
G__21392.cljs$core$IFn$_invoke$arity$variadic = G__21392__delegate;
return G__21392;
})()
;
_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return ___1.call(this,x);
case 2:
return ___2.call(this,x,y);
default:
var G__21395 = null;
if (arguments.length > 2) {
var G__21396__i = 0, G__21396__a = new Array(arguments.length -  2);
while (G__21396__i < G__21396__a.length) {G__21396__a[G__21396__i] = arguments[G__21396__i + 2]; ++G__21396__i;}
G__21395 = new cljs.core.IndexedSeq(G__21396__a,0);
}
return ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__21395);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_.cljs$lang$maxFixedArity = 2;
_.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
_.cljs$core$IFn$_invoke$arity$1 = ___1;
_.cljs$core$IFn$_invoke$arity$2 = ___2;
_.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
return _;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core._STAR_ = (function() {
var _STAR_ = null;
var _STAR___0 = (function (){
return (1);
});
var _STAR___1 = (function (x){
return x;
});
var _STAR___2 = (function (x,y){
return (x * y);
});
var _STAR___3 = (function() { 
var G__21397__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_STAR_,(x * y),more);
};
var G__21397 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__21398__i = 0, G__21398__a = new Array(arguments.length -  2);
while (G__21398__i < G__21398__a.length) {G__21398__a[G__21398__i] = arguments[G__21398__i + 2]; ++G__21398__i;}
  more = new cljs.core.IndexedSeq(G__21398__a,0);
} 
return G__21397__delegate.call(this,x,y,more);};
G__21397.cljs$lang$maxFixedArity = 2;
G__21397.cljs$lang$applyTo = (function (arglist__21399){
var x = cljs.core.first(arglist__21399);
arglist__21399 = cljs.core.next(arglist__21399);
var y = cljs.core.first(arglist__21399);
var more = cljs.core.rest(arglist__21399);
return G__21397__delegate(x,y,more);
});
G__21397.cljs$core$IFn$_invoke$arity$variadic = G__21397__delegate;
return G__21397;
})()
;
_STAR_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _STAR___0.call(this);
case 1:
return _STAR___1.call(this,x);
case 2:
return _STAR___2.call(this,x,y);
default:
var G__21400 = null;
if (arguments.length > 2) {
var G__21401__i = 0, G__21401__a = new Array(arguments.length -  2);
while (G__21401__i < G__21401__a.length) {G__21401__a[G__21401__i] = arguments[G__21401__i + 2]; ++G__21401__i;}
G__21400 = new cljs.core.IndexedSeq(G__21401__a,0);
}
return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__21400);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_STAR_.cljs$lang$maxFixedArity = 2;
_STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
_STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
_STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
_STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
_STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
return _STAR_;
})()
;
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core._SLASH_ = (function() {
var _SLASH_ = null;
var _SLASH___1 = (function (x){
return _SLASH_.cljs$core$IFn$_invoke$arity$2((1),x);
});
var _SLASH___2 = (function (x,y){
return (x / y);
});
var _SLASH___3 = (function() { 
var G__21406__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_SLASH_,_SLASH_.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__21406 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__21407__i = 0, G__21407__a = new Array(arguments.length -  2);
while (G__21407__i < G__21407__a.length) {G__21407__a[G__21407__i] = arguments[G__21407__i + 2]; ++G__21407__i;}
  more = new cljs.core.IndexedSeq(G__21407__a,0);
} 
return G__21406__delegate.call(this,x,y,more);};
G__21406.cljs$lang$maxFixedArity = 2;
G__21406.cljs$lang$applyTo = (function (arglist__21408){
var x = cljs.core.first(arglist__21408);
arglist__21408 = cljs.core.next(arglist__21408);
var y = cljs.core.first(arglist__21408);
var more = cljs.core.rest(arglist__21408);
return G__21406__delegate(x,y,more);
});
G__21406.cljs$core$IFn$_invoke$arity$variadic = G__21406__delegate;
return G__21406;
})()
;
_SLASH_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _SLASH___1.call(this,x);
case 2:
return _SLASH___2.call(this,x,y);
default:
var G__21409 = null;
if (arguments.length > 2) {
var G__21410__i = 0, G__21410__a = new Array(arguments.length -  2);
while (G__21410__i < G__21410__a.length) {G__21410__a[G__21410__i] = arguments[G__21410__i + 2]; ++G__21410__i;}
G__21409 = new cljs.core.IndexedSeq(G__21410__a,0);
}
return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__21409);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_SLASH_.cljs$lang$maxFixedArity = 2;
_SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
_SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
_SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
_SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
return _SLASH_;
})()
;
/**
* Returns non-nil if nums are in monotonically increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT_ = (function() {
var _LT_ = null;
var _LT___1 = (function (x){
return true;
});
var _LT___2 = (function (x,y){
return (x < y);
});
var _LT___3 = (function() { 
var G__21411__delegate = function (x,y,more){
while(true){
if((x < y)){
if(cljs.core.next(more)){
var G__21412 = y;
var G__21413 = cljs.core.first(more);
var G__21414 = cljs.core.next(more);
x = G__21412;
y = G__21413;
more = G__21414;
continue;
} else {
return (y < cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__21411 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__21415__i = 0, G__21415__a = new Array(arguments.length -  2);
while (G__21415__i < G__21415__a.length) {G__21415__a[G__21415__i] = arguments[G__21415__i + 2]; ++G__21415__i;}
  more = new cljs.core.IndexedSeq(G__21415__a,0);
} 
return G__21411__delegate.call(this,x,y,more);};
G__21411.cljs$lang$maxFixedArity = 2;
G__21411.cljs$lang$applyTo = (function (arglist__21416){
var x = cljs.core.first(arglist__21416);
arglist__21416 = cljs.core.next(arglist__21416);
var y = cljs.core.first(arglist__21416);
var more = cljs.core.rest(arglist__21416);
return G__21411__delegate(x,y,more);
});
G__21411.cljs$core$IFn$_invoke$arity$variadic = G__21411__delegate;
return G__21411;
})()
;
_LT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT___1.call(this,x);
case 2:
return _LT___2.call(this,x,y);
default:
var G__21417 = null;
if (arguments.length > 2) {
var G__21418__i = 0, G__21418__a = new Array(arguments.length -  2);
while (G__21418__i < G__21418__a.length) {G__21418__a[G__21418__i] = arguments[G__21418__i + 2]; ++G__21418__i;}
G__21417 = new cljs.core.IndexedSeq(G__21418__a,0);
}
return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__21417);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT_.cljs$lang$maxFixedArity = 2;
_LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
_LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
_LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
_LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT__EQ_ = (function() {
var _LT__EQ_ = null;
var _LT__EQ___1 = (function (x){
return true;
});
var _LT__EQ___2 = (function (x,y){
return (x <= y);
});
var _LT__EQ___3 = (function() { 
var G__21419__delegate = function (x,y,more){
while(true){
if((x <= y)){
if(cljs.core.next(more)){
var G__21420 = y;
var G__21421 = cljs.core.first(more);
var G__21422 = cljs.core.next(more);
x = G__21420;
y = G__21421;
more = G__21422;
continue;
} else {
return (y <= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__21419 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__21423__i = 0, G__21423__a = new Array(arguments.length -  2);
while (G__21423__i < G__21423__a.length) {G__21423__a[G__21423__i] = arguments[G__21423__i + 2]; ++G__21423__i;}
  more = new cljs.core.IndexedSeq(G__21423__a,0);
} 
return G__21419__delegate.call(this,x,y,more);};
G__21419.cljs$lang$maxFixedArity = 2;
G__21419.cljs$lang$applyTo = (function (arglist__21424){
var x = cljs.core.first(arglist__21424);
arglist__21424 = cljs.core.next(arglist__21424);
var y = cljs.core.first(arglist__21424);
var more = cljs.core.rest(arglist__21424);
return G__21419__delegate(x,y,more);
});
G__21419.cljs$core$IFn$_invoke$arity$variadic = G__21419__delegate;
return G__21419;
})()
;
_LT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT__EQ___1.call(this,x);
case 2:
return _LT__EQ___2.call(this,x,y);
default:
var G__21425 = null;
if (arguments.length > 2) {
var G__21426__i = 0, G__21426__a = new Array(arguments.length -  2);
while (G__21426__i < G__21426__a.length) {G__21426__a[G__21426__i] = arguments[G__21426__i + 2]; ++G__21426__i;}
G__21425 = new cljs.core.IndexedSeq(G__21426__a,0);
}
return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__21425);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT__EQ_.cljs$lang$maxFixedArity = 2;
_LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
_LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
_LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
_LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT__EQ_;
})()
;
/**
* Returns non-nil if nums are in monotonically decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT_ = (function() {
var _GT_ = null;
var _GT___1 = (function (x){
return true;
});
var _GT___2 = (function (x,y){
return (x > y);
});
var _GT___3 = (function() { 
var G__21427__delegate = function (x,y,more){
while(true){
if((x > y)){
if(cljs.core.next(more)){
var G__21428 = y;
var G__21429 = cljs.core.first(more);
var G__21430 = cljs.core.next(more);
x = G__21428;
y = G__21429;
more = G__21430;
continue;
} else {
return (y > cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__21427 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__21431__i = 0, G__21431__a = new Array(arguments.length -  2);
while (G__21431__i < G__21431__a.length) {G__21431__a[G__21431__i] = arguments[G__21431__i + 2]; ++G__21431__i;}
  more = new cljs.core.IndexedSeq(G__21431__a,0);
} 
return G__21427__delegate.call(this,x,y,more);};
G__21427.cljs$lang$maxFixedArity = 2;
G__21427.cljs$lang$applyTo = (function (arglist__21432){
var x = cljs.core.first(arglist__21432);
arglist__21432 = cljs.core.next(arglist__21432);
var y = cljs.core.first(arglist__21432);
var more = cljs.core.rest(arglist__21432);
return G__21427__delegate(x,y,more);
});
G__21427.cljs$core$IFn$_invoke$arity$variadic = G__21427__delegate;
return G__21427;
})()
;
_GT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT___1.call(this,x);
case 2:
return _GT___2.call(this,x,y);
default:
var G__21433 = null;
if (arguments.length > 2) {
var G__21434__i = 0, G__21434__a = new Array(arguments.length -  2);
while (G__21434__i < G__21434__a.length) {G__21434__a[G__21434__i] = arguments[G__21434__i + 2]; ++G__21434__i;}
G__21433 = new cljs.core.IndexedSeq(G__21434__a,0);
}
return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__21433);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT_.cljs$lang$maxFixedArity = 2;
_GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
_GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
_GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
_GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT__EQ_ = (function() {
var _GT__EQ_ = null;
var _GT__EQ___1 = (function (x){
return true;
});
var _GT__EQ___2 = (function (x,y){
return (x >= y);
});
var _GT__EQ___3 = (function() { 
var G__21435__delegate = function (x,y,more){
while(true){
if((x >= y)){
if(cljs.core.next(more)){
var G__21436 = y;
var G__21437 = cljs.core.first(more);
var G__21438 = cljs.core.next(more);
x = G__21436;
y = G__21437;
more = G__21438;
continue;
} else {
return (y >= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__21435 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__21439__i = 0, G__21439__a = new Array(arguments.length -  2);
while (G__21439__i < G__21439__a.length) {G__21439__a[G__21439__i] = arguments[G__21439__i + 2]; ++G__21439__i;}
  more = new cljs.core.IndexedSeq(G__21439__a,0);
} 
return G__21435__delegate.call(this,x,y,more);};
G__21435.cljs$lang$maxFixedArity = 2;
G__21435.cljs$lang$applyTo = (function (arglist__21440){
var x = cljs.core.first(arglist__21440);
arglist__21440 = cljs.core.next(arglist__21440);
var y = cljs.core.first(arglist__21440);
var more = cljs.core.rest(arglist__21440);
return G__21435__delegate(x,y,more);
});
G__21435.cljs$core$IFn$_invoke$arity$variadic = G__21435__delegate;
return G__21435;
})()
;
_GT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT__EQ___1.call(this,x);
case 2:
return _GT__EQ___2.call(this,x,y);
default:
var G__21441 = null;
if (arguments.length > 2) {
var G__21442__i = 0, G__21442__a = new Array(arguments.length -  2);
while (G__21442__i < G__21442__a.length) {G__21442__a[G__21442__i] = arguments[G__21442__i + 2]; ++G__21442__i;}
G__21441 = new cljs.core.IndexedSeq(G__21442__a,0);
}
return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__21441);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT__EQ_.cljs$lang$maxFixedArity = 2;
_GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
_GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
_GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
_GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT__EQ_;
})()
;
/**
* Returns a number one less than num.
*/
cljs.core.dec = (function dec(x){
return (x - (1));
});
/**
* Returns the greatest of the nums.
* @param {...*} var_args
*/
cljs.core.max = (function() {
var max = null;
var max__1 = (function (x){
return x;
});
var max__2 = (function (x,y){
var x__11917__auto__ = x;
var y__11918__auto__ = y;
return ((x__11917__auto__ > y__11918__auto__) ? x__11917__auto__ : y__11918__auto__);
});
var max__3 = (function() { 
var G__21443__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(max,(function (){var x__11917__auto__ = x;
var y__11918__auto__ = y;
return ((x__11917__auto__ > y__11918__auto__) ? x__11917__auto__ : y__11918__auto__);
})(),more);
};
var G__21443 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__21444__i = 0, G__21444__a = new Array(arguments.length -  2);
while (G__21444__i < G__21444__a.length) {G__21444__a[G__21444__i] = arguments[G__21444__i + 2]; ++G__21444__i;}
  more = new cljs.core.IndexedSeq(G__21444__a,0);
} 
return G__21443__delegate.call(this,x,y,more);};
G__21443.cljs$lang$maxFixedArity = 2;
G__21443.cljs$lang$applyTo = (function (arglist__21445){
var x = cljs.core.first(arglist__21445);
arglist__21445 = cljs.core.next(arglist__21445);
var y = cljs.core.first(arglist__21445);
var more = cljs.core.rest(arglist__21445);
return G__21443__delegate(x,y,more);
});
G__21443.cljs$core$IFn$_invoke$arity$variadic = G__21443__delegate;
return G__21443;
})()
;
max = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return max__1.call(this,x);
case 2:
return max__2.call(this,x,y);
default:
var G__21446 = null;
if (arguments.length > 2) {
var G__21447__i = 0, G__21447__a = new Array(arguments.length -  2);
while (G__21447__i < G__21447__a.length) {G__21447__a[G__21447__i] = arguments[G__21447__i + 2]; ++G__21447__i;}
G__21446 = new cljs.core.IndexedSeq(G__21447__a,0);
}
return max__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__21446);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max.cljs$lang$maxFixedArity = 2;
max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
max.cljs$core$IFn$_invoke$arity$1 = max__1;
max.cljs$core$IFn$_invoke$arity$2 = max__2;
max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
return max;
})()
;
/**
* Returns the least of the nums.
* @param {...*} var_args
*/
cljs.core.min = (function() {
var min = null;
var min__1 = (function (x){
return x;
});
var min__2 = (function (x,y){
var x__11924__auto__ = x;
var y__11925__auto__ = y;
return ((x__11924__auto__ < y__11925__auto__) ? x__11924__auto__ : y__11925__auto__);
});
var min__3 = (function() { 
var G__21448__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(min,(function (){var x__11924__auto__ = x;
var y__11925__auto__ = y;
return ((x__11924__auto__ < y__11925__auto__) ? x__11924__auto__ : y__11925__auto__);
})(),more);
};
var G__21448 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__21449__i = 0, G__21449__a = new Array(arguments.length -  2);
while (G__21449__i < G__21449__a.length) {G__21449__a[G__21449__i] = arguments[G__21449__i + 2]; ++G__21449__i;}
  more = new cljs.core.IndexedSeq(G__21449__a,0);
} 
return G__21448__delegate.call(this,x,y,more);};
G__21448.cljs$lang$maxFixedArity = 2;
G__21448.cljs$lang$applyTo = (function (arglist__21450){
var x = cljs.core.first(arglist__21450);
arglist__21450 = cljs.core.next(arglist__21450);
var y = cljs.core.first(arglist__21450);
var more = cljs.core.rest(arglist__21450);
return G__21448__delegate(x,y,more);
});
G__21448.cljs$core$IFn$_invoke$arity$variadic = G__21448__delegate;
return G__21448;
})()
;
min = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return min__1.call(this,x);
case 2:
return min__2.call(this,x,y);
default:
var G__21451 = null;
if (arguments.length > 2) {
var G__21452__i = 0, G__21452__a = new Array(arguments.length -  2);
while (G__21452__i < G__21452__a.length) {G__21452__a[G__21452__i] = arguments[G__21452__i + 2]; ++G__21452__i;}
G__21451 = new cljs.core.IndexedSeq(G__21452__a,0);
}
return min__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__21451);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min.cljs$lang$maxFixedArity = 2;
min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
min.cljs$core$IFn$_invoke$arity$1 = min__1;
min.cljs$core$IFn$_invoke$arity$2 = min__2;
min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
return min;
})()
;
cljs.core.byte$ = (function byte$(x){
return x;
});
/**
* Coerce to char
*/
cljs.core.char$ = (function char$(x){
if(typeof x === 'number'){
return String.fromCharCode(x);
} else {
if((typeof x === 'string') && ((x.length === (1)))){
return x;
} else {
throw (new Error("Argument to char must be a character or number"));

}
}
});
cljs.core.short$ = (function short$(x){
return x;
});
cljs.core.float$ = (function float$(x){
return x;
});
cljs.core.double$ = (function double$(x){
return x;
});
cljs.core.unchecked_byte = (function unchecked_byte(x){
return x;
});
cljs.core.unchecked_char = (function unchecked_char(x){
return x;
});
cljs.core.unchecked_short = (function unchecked_short(x){
return x;
});
cljs.core.unchecked_float = (function unchecked_float(x){
return x;
});
cljs.core.unchecked_double = (function unchecked_double(x){
return x;
});
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add = (function() {
var unchecked_add = null;
var unchecked_add__0 = (function (){
return (0);
});
var unchecked_add__1 = (function (x){
return x;
});
var unchecked_add__2 = (function (x,y){
return (x + y);
});
var unchecked_add__3 = (function() { 
var G__21453__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add,(x + y),more);
};
var G__21453 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__21454__i = 0, G__21454__a = new Array(arguments.length -  2);
while (G__21454__i < G__21454__a.length) {G__21454__a[G__21454__i] = arguments[G__21454__i + 2]; ++G__21454__i;}
  more = new cljs.core.IndexedSeq(G__21454__a,0);
} 
return G__21453__delegate.call(this,x,y,more);};
G__21453.cljs$lang$maxFixedArity = 2;
G__21453.cljs$lang$applyTo = (function (arglist__21455){
var x = cljs.core.first(arglist__21455);
arglist__21455 = cljs.core.next(arglist__21455);
var y = cljs.core.first(arglist__21455);
var more = cljs.core.rest(arglist__21455);
return G__21453__delegate(x,y,more);
});
G__21453.cljs$core$IFn$_invoke$arity$variadic = G__21453__delegate;
return G__21453;
})()
;
unchecked_add = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add__0.call(this);
case 1:
return unchecked_add__1.call(this,x);
case 2:
return unchecked_add__2.call(this,x,y);
default:
var G__21456 = null;
if (arguments.length > 2) {
var G__21457__i = 0, G__21457__a = new Array(arguments.length -  2);
while (G__21457__i < G__21457__a.length) {G__21457__a[G__21457__i] = arguments[G__21457__i + 2]; ++G__21457__i;}
G__21456 = new cljs.core.IndexedSeq(G__21457__a,0);
}
return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__21456);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add.cljs$lang$maxFixedArity = 2;
unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add_int = (function() {
var unchecked_add_int = null;
var unchecked_add_int__0 = (function (){
return (0);
});
var unchecked_add_int__1 = (function (x){
return x;
});
var unchecked_add_int__2 = (function (x,y){
return (x + y);
});
var unchecked_add_int__3 = (function() { 
var G__21458__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add_int,(x + y),more);
};
var G__21458 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__21459__i = 0, G__21459__a = new Array(arguments.length -  2);
while (G__21459__i < G__21459__a.length) {G__21459__a[G__21459__i] = arguments[G__21459__i + 2]; ++G__21459__i;}
  more = new cljs.core.IndexedSeq(G__21459__a,0);
} 
return G__21458__delegate.call(this,x,y,more);};
G__21458.cljs$lang$maxFixedArity = 2;
G__21458.cljs$lang$applyTo = (function (arglist__21460){
var x = cljs.core.first(arglist__21460);
arglist__21460 = cljs.core.next(arglist__21460);
var y = cljs.core.first(arglist__21460);
var more = cljs.core.rest(arglist__21460);
return G__21458__delegate(x,y,more);
});
G__21458.cljs$core$IFn$_invoke$arity$variadic = G__21458__delegate;
return G__21458;
})()
;
unchecked_add_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add_int__0.call(this);
case 1:
return unchecked_add_int__1.call(this,x);
case 2:
return unchecked_add_int__2.call(this,x,y);
default:
var G__21461 = null;
if (arguments.length > 2) {
var G__21462__i = 0, G__21462__a = new Array(arguments.length -  2);
while (G__21462__i < G__21462__a.length) {G__21462__a[G__21462__i] = arguments[G__21462__i + 2]; ++G__21462__i;}
G__21461 = new cljs.core.IndexedSeq(G__21462__a,0);
}
return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__21461);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add_int.cljs$lang$maxFixedArity = 2;
unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add_int;
})()
;
cljs.core.unchecked_dec = (function unchecked_dec(x){
return (x - (1));
});
cljs.core.unchecked_dec_int = (function unchecked_dec_int(x){
return (x - (1));
});
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core.unchecked_divide_int = (function() {
var unchecked_divide_int = null;
var unchecked_divide_int__1 = (function (x){
return unchecked_divide_int.cljs$core$IFn$_invoke$arity$2((1),x);
});
var unchecked_divide_int__2 = (function (x,y){
return (x / y);
});
var unchecked_divide_int__3 = (function() { 
var G__21467__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_divide_int,unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__21467 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__21468__i = 0, G__21468__a = new Array(arguments.length -  2);
while (G__21468__i < G__21468__a.length) {G__21468__a[G__21468__i] = arguments[G__21468__i + 2]; ++G__21468__i;}
  more = new cljs.core.IndexedSeq(G__21468__a,0);
} 
return G__21467__delegate.call(this,x,y,more);};
G__21467.cljs$lang$maxFixedArity = 2;
G__21467.cljs$lang$applyTo = (function (arglist__21469){
var x = cljs.core.first(arglist__21469);
arglist__21469 = cljs.core.next(arglist__21469);
var y = cljs.core.first(arglist__21469);
var more = cljs.core.rest(arglist__21469);
return G__21467__delegate(x,y,more);
});
G__21467.cljs$core$IFn$_invoke$arity$variadic = G__21467__delegate;
return G__21467;
})()
;
unchecked_divide_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_divide_int__1.call(this,x);
case 2:
return unchecked_divide_int__2.call(this,x,y);
default:
var G__21470 = null;
if (arguments.length > 2) {
var G__21471__i = 0, G__21471__a = new Array(arguments.length -  2);
while (G__21471__i < G__21471__a.length) {G__21471__a[G__21471__i] = arguments[G__21471__i + 2]; ++G__21471__i;}
G__21470 = new cljs.core.IndexedSeq(G__21471__a,0);
}
return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__21470);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_divide_int.cljs$lang$maxFixedArity = 2;
unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_divide_int;
})()
;
cljs.core.unchecked_inc = (function unchecked_inc(x){
return (x + (1));
});
cljs.core.unchecked_inc_int = (function unchecked_inc_int(x){
return (x + (1));
});
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply = (function() {
var unchecked_multiply = null;
var unchecked_multiply__0 = (function (){
return (1);
});
var unchecked_multiply__1 = (function (x){
return x;
});
var unchecked_multiply__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply__3 = (function() { 
var G__21472__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply,(x * y),more);
};
var G__21472 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__21473__i = 0, G__21473__a = new Array(arguments.length -  2);
while (G__21473__i < G__21473__a.length) {G__21473__a[G__21473__i] = arguments[G__21473__i + 2]; ++G__21473__i;}
  more = new cljs.core.IndexedSeq(G__21473__a,0);
} 
return G__21472__delegate.call(this,x,y,more);};
G__21472.cljs$lang$maxFixedArity = 2;
G__21472.cljs$lang$applyTo = (function (arglist__21474){
var x = cljs.core.first(arglist__21474);
arglist__21474 = cljs.core.next(arglist__21474);
var y = cljs.core.first(arglist__21474);
var more = cljs.core.rest(arglist__21474);
return G__21472__delegate(x,y,more);
});
G__21472.cljs$core$IFn$_invoke$arity$variadic = G__21472__delegate;
return G__21472;
})()
;
unchecked_multiply = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply__0.call(this);
case 1:
return unchecked_multiply__1.call(this,x);
case 2:
return unchecked_multiply__2.call(this,x,y);
default:
var G__21475 = null;
if (arguments.length > 2) {
var G__21476__i = 0, G__21476__a = new Array(arguments.length -  2);
while (G__21476__i < G__21476__a.length) {G__21476__a[G__21476__i] = arguments[G__21476__i + 2]; ++G__21476__i;}
G__21475 = new cljs.core.IndexedSeq(G__21476__a,0);
}
return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__21475);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply.cljs$lang$maxFixedArity = 2;
unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply_int = (function() {
var unchecked_multiply_int = null;
var unchecked_multiply_int__0 = (function (){
return (1);
});
var unchecked_multiply_int__1 = (function (x){
return x;
});
var unchecked_multiply_int__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply_int__3 = (function() { 
var G__21477__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply_int,(x * y),more);
};
var G__21477 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__21478__i = 0, G__21478__a = new Array(arguments.length -  2);
while (G__21478__i < G__21478__a.length) {G__21478__a[G__21478__i] = arguments[G__21478__i + 2]; ++G__21478__i;}
  more = new cljs.core.IndexedSeq(G__21478__a,0);
} 
return G__21477__delegate.call(this,x,y,more);};
G__21477.cljs$lang$maxFixedArity = 2;
G__21477.cljs$lang$applyTo = (function (arglist__21479){
var x = cljs.core.first(arglist__21479);
arglist__21479 = cljs.core.next(arglist__21479);
var y = cljs.core.first(arglist__21479);
var more = cljs.core.rest(arglist__21479);
return G__21477__delegate(x,y,more);
});
G__21477.cljs$core$IFn$_invoke$arity$variadic = G__21477__delegate;
return G__21477;
})()
;
unchecked_multiply_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply_int__0.call(this);
case 1:
return unchecked_multiply_int__1.call(this,x);
case 2:
return unchecked_multiply_int__2.call(this,x,y);
default:
var G__21480 = null;
if (arguments.length > 2) {
var G__21481__i = 0, G__21481__a = new Array(arguments.length -  2);
while (G__21481__i < G__21481__a.length) {G__21481__a[G__21481__i] = arguments[G__21481__i + 2]; ++G__21481__i;}
G__21480 = new cljs.core.IndexedSeq(G__21481__a,0);
}
return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__21480);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply_int;
})()
;
cljs.core.unchecked_negate = (function unchecked_negate(x){
return (- x);
});
cljs.core.unchecked_negate_int = (function unchecked_negate_int(x){
return (- x);
});
cljs.core.unchecked_remainder_int = (function unchecked_remainder_int(x,n){
var G__21484 = x;
var G__21485 = n;
return (cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(G__21484,G__21485) : cljs.core.mod.call(null,G__21484,G__21485));
});
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract = (function() {
var unchecked_subtract = null;
var unchecked_subtract__1 = (function (x){
return (- x);
});
var unchecked_subtract__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract__3 = (function() { 
var G__21486__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract,(x - y),more);
};
var G__21486 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__21487__i = 0, G__21487__a = new Array(arguments.length -  2);
while (G__21487__i < G__21487__a.length) {G__21487__a[G__21487__i] = arguments[G__21487__i + 2]; ++G__21487__i;}
  more = new cljs.core.IndexedSeq(G__21487__a,0);
} 
return G__21486__delegate.call(this,x,y,more);};
G__21486.cljs$lang$maxFixedArity = 2;
G__21486.cljs$lang$applyTo = (function (arglist__21488){
var x = cljs.core.first(arglist__21488);
arglist__21488 = cljs.core.next(arglist__21488);
var y = cljs.core.first(arglist__21488);
var more = cljs.core.rest(arglist__21488);
return G__21486__delegate(x,y,more);
});
G__21486.cljs$core$IFn$_invoke$arity$variadic = G__21486__delegate;
return G__21486;
})()
;
unchecked_subtract = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract__1.call(this,x);
case 2:
return unchecked_subtract__2.call(this,x,y);
default:
var G__21489 = null;
if (arguments.length > 2) {
var G__21490__i = 0, G__21490__a = new Array(arguments.length -  2);
while (G__21490__i < G__21490__a.length) {G__21490__a[G__21490__i] = arguments[G__21490__i + 2]; ++G__21490__i;}
G__21489 = new cljs.core.IndexedSeq(G__21490__a,0);
}
return unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__21489);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract.cljs$lang$maxFixedArity = 2;
unchecked_subtract.cljs$lang$applyTo = unchecked_subtract__3.cljs$lang$applyTo;
unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract__1;
unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract__2;
unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract_int = (function() {
var unchecked_subtract_int = null;
var unchecked_subtract_int__1 = (function (x){
return (- x);
});
var unchecked_subtract_int__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract_int__3 = (function() { 
var G__21491__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract_int,(x - y),more);
};
var G__21491 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__21492__i = 0, G__21492__a = new Array(arguments.length -  2);
while (G__21492__i < G__21492__a.length) {G__21492__a[G__21492__i] = arguments[G__21492__i + 2]; ++G__21492__i;}
  more = new cljs.core.IndexedSeq(G__21492__a,0);
} 
return G__21491__delegate.call(this,x,y,more);};
G__21491.cljs$lang$maxFixedArity = 2;
G__21491.cljs$lang$applyTo = (function (arglist__21493){
var x = cljs.core.first(arglist__21493);
arglist__21493 = cljs.core.next(arglist__21493);
var y = cljs.core.first(arglist__21493);
var more = cljs.core.rest(arglist__21493);
return G__21491__delegate(x,y,more);
});
G__21491.cljs$core$IFn$_invoke$arity$variadic = G__21491__delegate;
return G__21491;
})()
;
unchecked_subtract_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract_int__1.call(this,x);
case 2:
return unchecked_subtract_int__2.call(this,x,y);
default:
var G__21494 = null;
if (arguments.length > 2) {
var G__21495__i = 0, G__21495__a = new Array(arguments.length -  2);
while (G__21495__i < G__21495__a.length) {G__21495__a[G__21495__i] = arguments[G__21495__i + 2]; ++G__21495__i;}
G__21494 = new cljs.core.IndexedSeq(G__21495__a,0);
}
return unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__21494);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
unchecked_subtract_int.cljs$lang$applyTo = unchecked_subtract_int__3.cljs$lang$applyTo;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract_int__1;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract_int__2;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract_int;
})()
;
cljs.core.fix = (function fix(q){
if((q >= (0))){
var G__21498 = q;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__21498) : Math.floor.call(null,G__21498));
} else {
var G__21499 = q;
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__21499) : Math.ceil.call(null,G__21499));
}
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.int$ = (function int$(x){
return (x | (0));
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.unchecked_int = (function unchecked_int(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.long$ = (function long$(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.unchecked_long = (function unchecked_long(x){
return cljs.core.fix(x);
});
cljs.core.booleans = (function booleans(x){
return x;
});
cljs.core.bytes = (function bytes(x){
return x;
});
cljs.core.chars = (function chars(x){
return x;
});
cljs.core.shorts = (function shorts(x){
return x;
});
cljs.core.ints = (function ints(x){
return x;
});
cljs.core.floats = (function floats(x){
return x;
});
cljs.core.doubles = (function doubles(x){
return x;
});
cljs.core.longs = (function longs(x){
return x;
});
/**
* Modulus of num and div with original javascript behavior. i.e. bug for negative numbers
*/
cljs.core.js_mod = (function js_mod(n,d){
return (n % d);
});
/**
* Modulus of num and div. Truncates toward negative infinity.
*/
cljs.core.mod = (function mod(n,d){
return (((n % d) + d) % d);
});
/**
* quot[ient] of dividing numerator by denominator.
*/
cljs.core.quot = (function quot(n,d){
var rem = (n % d);
return cljs.core.fix(((n - rem) / d));
});
/**
* remainder of dividing numerator by denominator.
*/
cljs.core.rem = (function rem(n,d){
var q = cljs.core.quot(n,d);
return (n - (d * q));
});
/**
* Bitwise exclusive or
* @param {...*} var_args
*/
cljs.core.bit_xor = (function() {
var bit_xor = null;
var bit_xor__2 = (function (x,y){
return (x ^ y);
});
var bit_xor__3 = (function() { 
var G__21500__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_xor,(x ^ y),more);
};
var G__21500 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__21501__i = 0, G__21501__a = new Array(arguments.length -  2);
while (G__21501__i < G__21501__a.length) {G__21501__a[G__21501__i] = arguments[G__21501__i + 2]; ++G__21501__i;}
  more = new cljs.core.IndexedSeq(G__21501__a,0);
} 
return G__21500__delegate.call(this,x,y,more);};
G__21500.cljs$lang$maxFixedArity = 2;
G__21500.cljs$lang$applyTo = (function (arglist__21502){
var x = cljs.core.first(arglist__21502);
arglist__21502 = cljs.core.next(arglist__21502);
var y = cljs.core.first(arglist__21502);
var more = cljs.core.rest(arglist__21502);
return G__21500__delegate(x,y,more);
});
G__21500.cljs$core$IFn$_invoke$arity$variadic = G__21500__delegate;
return G__21500;
})()
;
bit_xor = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_xor__2.call(this,x,y);
default:
var G__21503 = null;
if (arguments.length > 2) {
var G__21504__i = 0, G__21504__a = new Array(arguments.length -  2);
while (G__21504__i < G__21504__a.length) {G__21504__a[G__21504__i] = arguments[G__21504__i + 2]; ++G__21504__i;}
G__21503 = new cljs.core.IndexedSeq(G__21504__a,0);
}
return bit_xor__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__21503);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_xor.cljs$lang$maxFixedArity = 2;
bit_xor.cljs$lang$applyTo = bit_xor__3.cljs$lang$applyTo;
bit_xor.cljs$core$IFn$_invoke$arity$2 = bit_xor__2;
bit_xor.cljs$core$IFn$_invoke$arity$variadic = bit_xor__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_xor;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and = (function() {
var bit_and = null;
var bit_and__2 = (function (x,y){
return (x & y);
});
var bit_and__3 = (function() { 
var G__21505__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and,(x & y),more);
};
var G__21505 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__21506__i = 0, G__21506__a = new Array(arguments.length -  2);
while (G__21506__i < G__21506__a.length) {G__21506__a[G__21506__i] = arguments[G__21506__i + 2]; ++G__21506__i;}
  more = new cljs.core.IndexedSeq(G__21506__a,0);
} 
return G__21505__delegate.call(this,x,y,more);};
G__21505.cljs$lang$maxFixedArity = 2;
G__21505.cljs$lang$applyTo = (function (arglist__21507){
var x = cljs.core.first(arglist__21507);
arglist__21507 = cljs.core.next(arglist__21507);
var y = cljs.core.first(arglist__21507);
var more = cljs.core.rest(arglist__21507);
return G__21505__delegate(x,y,more);
});
G__21505.cljs$core$IFn$_invoke$arity$variadic = G__21505__delegate;
return G__21505;
})()
;
bit_and = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and__2.call(this,x,y);
default:
var G__21508 = null;
if (arguments.length > 2) {
var G__21509__i = 0, G__21509__a = new Array(arguments.length -  2);
while (G__21509__i < G__21509__a.length) {G__21509__a[G__21509__i] = arguments[G__21509__i + 2]; ++G__21509__i;}
G__21508 = new cljs.core.IndexedSeq(G__21509__a,0);
}
return bit_and__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__21508);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and.cljs$lang$maxFixedArity = 2;
bit_and.cljs$lang$applyTo = bit_and__3.cljs$lang$applyTo;
bit_and.cljs$core$IFn$_invoke$arity$2 = bit_and__2;
bit_and.cljs$core$IFn$_invoke$arity$variadic = bit_and__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and;
})()
;
/**
* Bitwise or
* @param {...*} var_args
*/
cljs.core.bit_or = (function() {
var bit_or = null;
var bit_or__2 = (function (x,y){
return (x | y);
});
var bit_or__3 = (function() { 
var G__21510__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_or,(x | y),more);
};
var G__21510 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__21511__i = 0, G__21511__a = new Array(arguments.length -  2);
while (G__21511__i < G__21511__a.length) {G__21511__a[G__21511__i] = arguments[G__21511__i + 2]; ++G__21511__i;}
  more = new cljs.core.IndexedSeq(G__21511__a,0);
} 
return G__21510__delegate.call(this,x,y,more);};
G__21510.cljs$lang$maxFixedArity = 2;
G__21510.cljs$lang$applyTo = (function (arglist__21512){
var x = cljs.core.first(arglist__21512);
arglist__21512 = cljs.core.next(arglist__21512);
var y = cljs.core.first(arglist__21512);
var more = cljs.core.rest(arglist__21512);
return G__21510__delegate(x,y,more);
});
G__21510.cljs$core$IFn$_invoke$arity$variadic = G__21510__delegate;
return G__21510;
})()
;
bit_or = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_or__2.call(this,x,y);
default:
var G__21513 = null;
if (arguments.length > 2) {
var G__21514__i = 0, G__21514__a = new Array(arguments.length -  2);
while (G__21514__i < G__21514__a.length) {G__21514__a[G__21514__i] = arguments[G__21514__i + 2]; ++G__21514__i;}
G__21513 = new cljs.core.IndexedSeq(G__21514__a,0);
}
return bit_or__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__21513);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_or.cljs$lang$maxFixedArity = 2;
bit_or.cljs$lang$applyTo = bit_or__3.cljs$lang$applyTo;
bit_or.cljs$core$IFn$_invoke$arity$2 = bit_or__2;
bit_or.cljs$core$IFn$_invoke$arity$variadic = bit_or__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_or;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and_not = (function() {
var bit_and_not = null;
var bit_and_not__2 = (function (x,y){
return (x & ~y);
});
var bit_and_not__3 = (function() { 
var G__21515__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and_not,(x & ~y),more);
};
var G__21515 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__21516__i = 0, G__21516__a = new Array(arguments.length -  2);
while (G__21516__i < G__21516__a.length) {G__21516__a[G__21516__i] = arguments[G__21516__i + 2]; ++G__21516__i;}
  more = new cljs.core.IndexedSeq(G__21516__a,0);
} 
return G__21515__delegate.call(this,x,y,more);};
G__21515.cljs$lang$maxFixedArity = 2;
G__21515.cljs$lang$applyTo = (function (arglist__21517){
var x = cljs.core.first(arglist__21517);
arglist__21517 = cljs.core.next(arglist__21517);
var y = cljs.core.first(arglist__21517);
var more = cljs.core.rest(arglist__21517);
return G__21515__delegate(x,y,more);
});
G__21515.cljs$core$IFn$_invoke$arity$variadic = G__21515__delegate;
return G__21515;
})()
;
bit_and_not = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and_not__2.call(this,x,y);
default:
var G__21518 = null;
if (arguments.length > 2) {
var G__21519__i = 0, G__21519__a = new Array(arguments.length -  2);
while (G__21519__i < G__21519__a.length) {G__21519__a[G__21519__i] = arguments[G__21519__i + 2]; ++G__21519__i;}
G__21518 = new cljs.core.IndexedSeq(G__21519__a,0);
}
return bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__21518);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and_not.cljs$lang$maxFixedArity = 2;
bit_and_not.cljs$lang$applyTo = bit_and_not__3.cljs$lang$applyTo;
bit_and_not.cljs$core$IFn$_invoke$arity$2 = bit_and_not__2;
bit_and_not.cljs$core$IFn$_invoke$arity$variadic = bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and_not;
})()
;
/**
* Clear bit at index n
*/
cljs.core.bit_clear = (function bit_clear(x,n){
return (x & ~(1 << n));
});
/**
* Flip bit at index n
*/
cljs.core.bit_flip = (function bit_flip(x,n){
return (x ^ (1 << n));
});
/**
* Bitwise complement
*/
cljs.core.bit_not = (function bit_not(x){
return (~ x);
});
/**
* Set bit at index n
*/
cljs.core.bit_set = (function bit_set(x,n){
return (x | (1 << n));
});
/**
* Test bit at index n
*/
cljs.core.bit_test = (function bit_test(x,n){
return ((x & (1 << n)) != 0);
});
/**
* Bitwise shift left
*/
cljs.core.bit_shift_left = (function bit_shift_left(x,n){
return (x << n);
});
/**
* Bitwise shift right
*/
cljs.core.bit_shift_right = (function bit_shift_right(x,n){
return (x >> n);
});
/**
* DEPRECATED: Bitwise shift right with zero fill
*/
cljs.core.bit_shift_right_zero_fill = (function bit_shift_right_zero_fill(x,n){
return (x >>> n);
});
/**
* Bitwise shift right with zero fill
*/
cljs.core.unsigned_bit_shift_right = (function unsigned_bit_shift_right(x,n){
return (x >>> n);
});
/**
* Counts the number of bits set in n
*/
cljs.core.bit_count = (function bit_count(v){
var v__$1 = (v - ((v >> (1)) & (1431655765)));
var v__$2 = ((v__$1 & (858993459)) + ((v__$1 >> (2)) & (858993459)));
return ((((v__$2 + (v__$2 >> (4))) & (252645135)) * (16843009)) >> (24));
});
/**
* Returns non-nil if nums all have the equivalent
* value, otherwise false. Behavior on non nums is
* undefined.
* @param {...*} var_args
*/
cljs.core._EQ__EQ_ = (function() {
var _EQ__EQ_ = null;
var _EQ__EQ___1 = (function (x){
return true;
});
var _EQ__EQ___2 = (function (x,y){
return cljs.core._equiv(x,y);
});
var _EQ__EQ___3 = (function() { 
var G__21524__delegate = function (x,y,more){
while(true){
if(_EQ__EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__21525 = y;
var G__21526 = cljs.core.first(more);
var G__21527 = cljs.core.next(more);
x = G__21525;
y = G__21526;
more = G__21527;
continue;
} else {
return _EQ__EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__21524 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__21528__i = 0, G__21528__a = new Array(arguments.length -  2);
while (G__21528__i < G__21528__a.length) {G__21528__a[G__21528__i] = arguments[G__21528__i + 2]; ++G__21528__i;}
  more = new cljs.core.IndexedSeq(G__21528__a,0);
} 
return G__21524__delegate.call(this,x,y,more);};
G__21524.cljs$lang$maxFixedArity = 2;
G__21524.cljs$lang$applyTo = (function (arglist__21529){
var x = cljs.core.first(arglist__21529);
arglist__21529 = cljs.core.next(arglist__21529);
var y = cljs.core.first(arglist__21529);
var more = cljs.core.rest(arglist__21529);
return G__21524__delegate(x,y,more);
});
G__21524.cljs$core$IFn$_invoke$arity$variadic = G__21524__delegate;
return G__21524;
})()
;
_EQ__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ__EQ___1.call(this,x);
case 2:
return _EQ__EQ___2.call(this,x,y);
default:
var G__21530 = null;
if (arguments.length > 2) {
var G__21531__i = 0, G__21531__a = new Array(arguments.length -  2);
while (G__21531__i < G__21531__a.length) {G__21531__a[G__21531__i] = arguments[G__21531__i + 2]; ++G__21531__i;}
G__21530 = new cljs.core.IndexedSeq(G__21531__a,0);
}
return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__21530);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ__EQ_.cljs$lang$maxFixedArity = 2;
_EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ__EQ_;
})()
;
/**
* Returns true if num is greater than zero, else false
*/
cljs.core.pos_QMARK_ = (function pos_QMARK_(n){
return (n > (0));
});
cljs.core.zero_QMARK_ = (function zero_QMARK_(n){
return (n === (0));
});
/**
* Returns true if num is less than zero, else false
*/
cljs.core.neg_QMARK_ = (function neg_QMARK_(x){
return (x < (0));
});
/**
* Returns the nth next of coll, (seq coll) when n is 0.
*/
cljs.core.nthnext = (function nthnext(coll,n){
var n__$1 = n;
var xs = cljs.core.seq(coll);
while(true){
if((xs) && ((n__$1 > (0)))){
var G__21532 = (n__$1 - (1));
var G__21533 = cljs.core.next(xs);
n__$1 = G__21532;
xs = G__21533;
continue;
} else {
return xs;
}
break;
}
});
/**
* With no args, returns the empty string. With one arg x, returns
* x.toString().  (str nil) returns the empty string. With more than
* one arg, returns the concatenation of the str values of the args.
* @param {...*} var_args
*/
cljs.core.str = (function() {
var str = null;
var str__0 = (function (){
return "";
});
var str__1 = (function (x){
if((x == null)){
return "";
} else {
var G__21537 = x;
return goog.string.buildString(G__21537);
}
});
var str__2 = (function() { 
var G__21538__delegate = function (x,ys){
var sb = (new goog.string.StringBuffer(str.cljs$core$IFn$_invoke$arity$1(x)));
var more = ys;
while(true){
if(cljs.core.truth_(more)){
var G__21539 = sb.append(str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(more)));
var G__21540 = cljs.core.next(more);
sb = G__21539;
more = G__21540;
continue;
} else {
return sb.toString();
}
break;
}
};
var G__21538 = function (x,var_args){
var ys = null;
if (arguments.length > 1) {
var G__21541__i = 0, G__21541__a = new Array(arguments.length -  1);
while (G__21541__i < G__21541__a.length) {G__21541__a[G__21541__i] = arguments[G__21541__i + 1]; ++G__21541__i;}
  ys = new cljs.core.IndexedSeq(G__21541__a,0);
} 
return G__21538__delegate.call(this,x,ys);};
G__21538.cljs$lang$maxFixedArity = 1;
G__21538.cljs$lang$applyTo = (function (arglist__21542){
var x = cljs.core.first(arglist__21542);
var ys = cljs.core.rest(arglist__21542);
return G__21538__delegate(x,ys);
});
G__21538.cljs$core$IFn$_invoke$arity$variadic = G__21538__delegate;
return G__21538;
})()
;
str = function(x,var_args){
var ys = var_args;
switch(arguments.length){
case 0:
return str__0.call(this);
case 1:
return str__1.call(this,x);
default:
var G__21543 = null;
if (arguments.length > 1) {
var G__21544__i = 0, G__21544__a = new Array(arguments.length -  1);
while (G__21544__i < G__21544__a.length) {G__21544__a[G__21544__i] = arguments[G__21544__i + 1]; ++G__21544__i;}
G__21543 = new cljs.core.IndexedSeq(G__21544__a,0);
}
return str__2.cljs$core$IFn$_invoke$arity$variadic(x, G__21543);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
str.cljs$lang$maxFixedArity = 1;
str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
str.cljs$core$IFn$_invoke$arity$0 = str__0;
str.cljs$core$IFn$_invoke$arity$1 = str__1;
str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
return str;
})()
;
/**
* Returns the substring of s beginning at start inclusive, and ending
* at end (defaults to length of string), exclusive.
*/
cljs.core.subs = (function() {
var subs = null;
var subs__2 = (function (s,start){
return s.substring(start);
});
var subs__3 = (function (s,start,end){
return s.substring(start,end);
});
subs = function(s,start,end){
switch(arguments.length){
case 2:
return subs__2.call(this,s,start);
case 3:
return subs__3.call(this,s,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
return subs;
})()
;

/**
* Assumes x is sequential. Returns true if x equals y, otherwise
* returns false.
*/
cljs.core.equiv_sequential = (function equiv_sequential(x,y){
return cljs.core.boolean$(((cljs.core.sequential_QMARK_(y))?(((cljs.core.counted_QMARK_(x)) && (cljs.core.counted_QMARK_(y)) && (!((cljs.core.count(x) === cljs.core.count(y)))))?false:(function (){var xs = cljs.core.seq(x);
var ys = cljs.core.seq(y);
while(true){
if((xs == null)){
return (ys == null);
} else {
if((ys == null)){
return false;
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs),cljs.core.first(ys))){
var G__21545 = cljs.core.next(xs);
var G__21546 = cljs.core.next(ys);
xs = G__21545;
ys = G__21546;
continue;
} else {
return false;

}
}
}
break;
}
})()):null));
});
cljs.core.hash_coll = (function hash_coll(coll){
if(cljs.core.seq(coll)){
var res = cljs.core.hash(cljs.core.first(coll));
var s = cljs.core.next(coll);
while(true){
if((s == null)){
return res;
} else {
var G__21547 = cljs.core.hash_combine(res,cljs.core.hash(cljs.core.first(s)));
var G__21548 = cljs.core.next(s);
res = G__21547;
s = G__21548;
continue;
}
break;
}
} else {
return (0);
}
});

cljs.core.hash_imap = (function hash_imap(m){
var h = (0);
var s = cljs.core.seq(m);
while(true){
if(s){
var e = cljs.core.first(s);
var G__21553 = ((h + (cljs.core.hash((function (){var G__21551 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__21551) : cljs.core.key.call(null,G__21551));
})()) ^ cljs.core.hash((function (){var G__21552 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__21552) : cljs.core.val.call(null,G__21552));
})()))) % (4503599627370496));
var G__21554 = cljs.core.next(s);
h = G__21553;
s = G__21554;
continue;
} else {
return h;
}
break;
}
});
cljs.core.hash_iset = (function hash_iset(s){
var h = (0);
var s__$1 = cljs.core.seq(s);
while(true){
if(s__$1){
var e = cljs.core.first(s__$1);
var G__21555 = ((h + cljs.core.hash(e)) % (4503599627370496));
var G__21556 = cljs.core.next(s__$1);
h = G__21555;
s__$1 = G__21556;
continue;
} else {
return h;
}
break;
}
});


/**
* Takes a JavaScript object and a map of names to functions and
* attaches said functions as methods on the object.  Any references to
* JavaScript's implicit this (via the this-as macro) will resolve to the
* object that the function is attached.
*/
cljs.core.extend_object_BANG_ = (function extend_object_BANG_(obj,fn_map){
var seq__21567_21577 = cljs.core.seq(fn_map);
var chunk__21568_21578 = null;
var count__21569_21579 = (0);
var i__21570_21580 = (0);
while(true){
if((i__21570_21580 < count__21569_21579)){
var vec__21571_21581 = chunk__21568_21578.cljs$core$IIndexed$_nth$arity$2(null,i__21570_21580);
var key_name_21582 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21571_21581,(0),null);
var f_21583 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21571_21581,(1),null);
var str_name_21584 = (function (){var G__21572 = key_name_21582;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__21572) : cljs.core.name.call(null,G__21572));
})();
(obj[str_name_21584] = f_21583);

var G__21585 = seq__21567_21577;
var G__21586 = chunk__21568_21578;
var G__21587 = count__21569_21579;
var G__21588 = (i__21570_21580 + (1));
seq__21567_21577 = G__21585;
chunk__21568_21578 = G__21586;
count__21569_21579 = G__21587;
i__21570_21580 = G__21588;
continue;
} else {
var temp__4126__auto___21589 = cljs.core.seq(seq__21567_21577);
if(temp__4126__auto___21589){
var seq__21567_21590__$1 = temp__4126__auto___21589;
if(cljs.core.chunked_seq_QMARK_(seq__21567_21590__$1)){
var c__12387__auto___21591 = (function (){var G__21573 = seq__21567_21590__$1;
return (cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(G__21573) : cljs.core.chunk_first.call(null,G__21573));
})();
var G__21592 = (function (){var G__21574 = seq__21567_21590__$1;
return (cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(G__21574) : cljs.core.chunk_rest.call(null,G__21574));
})();
var G__21593 = c__12387__auto___21591;
var G__21594 = cljs.core.count(c__12387__auto___21591);
var G__21595 = (0);
seq__21567_21577 = G__21592;
chunk__21568_21578 = G__21593;
count__21569_21579 = G__21594;
i__21570_21580 = G__21595;
continue;
} else {
var vec__21575_21596 = cljs.core.first(seq__21567_21590__$1);
var key_name_21597 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21575_21596,(0),null);
var f_21598 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21575_21596,(1),null);
var str_name_21599 = (function (){var G__21576 = key_name_21597;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__21576) : cljs.core.name.call(null,G__21576));
})();
(obj[str_name_21599] = f_21598);

var G__21600 = cljs.core.next(seq__21567_21590__$1);
var G__21601 = null;
var G__21602 = (0);
var G__21603 = (0);
seq__21567_21577 = G__21600;
chunk__21568_21578 = G__21601;
count__21569_21579 = G__21602;
i__21570_21580 = G__21603;
continue;
}
} else {
}
}
break;
}

return obj;
});

/**
* @constructor
*/
cljs.core.List = (function (meta,first,rest,count,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.count = count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65937646;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.List.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.List.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.List(self__.meta,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return null;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._rest(coll__$1);
});

cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__12021__auto__ = self__.__hash;
if(!((h__12021__auto__ == null))){
return h__12021__auto__;
} else {
var h__12021__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__12021__auto____$1;

return h__12021__auto____$1;
}
});

cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(meta__$1,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,coll__$1,(self__.count + (1)),null));
});

cljs.core.List.cljs$lang$type = true;

cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";

cljs.core.List.cljs$lang$ctorPrWriter = (function (this__12187__auto__,writer__12188__auto__,opt__12189__auto__){
return cljs.core._write(writer__12188__auto__,"cljs.core/List");
});

cljs.core.__GT_List = (function __GT_List(meta,first,rest,count,__hash){
return (new cljs.core.List(meta,first,rest,count,__hash));
});

(cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__12578__auto__ = this;
return cljs.core.es6_iterator(this__12578__auto__);
}));

/**
* @constructor
*/
cljs.core.EmptyList = (function (meta){
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 65937614;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.EmptyList.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.EmptyList.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.EmptyList(self__.meta));
});

cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (0);
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
throw (new Error("Can't pop empty list"));
});

cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.empty_ordered_hash;
});

cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.EmptyList(meta__$1));
});

cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,null,(1),null));
});

cljs.core.EmptyList.cljs$lang$type = true;

cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";

cljs.core.EmptyList.cljs$lang$ctorPrWriter = (function (this__12187__auto__,writer__12188__auto__,opt__12189__auto__){
return cljs.core._write(writer__12188__auto__,"cljs.core/EmptyList");
});

cljs.core.__GT_EmptyList = (function __GT_EmptyList(meta){
return (new cljs.core.EmptyList(meta));
});

cljs.core.List.EMPTY = (new cljs.core.EmptyList(null));
(cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__12578__auto__ = this;
return cljs.core.es6_iterator(this__12578__auto__);
}));
cljs.core.reversible_QMARK_ = (function reversible_QMARK_(coll){
var G__21605 = coll;
if(G__21605){
var bit__12281__auto__ = (G__21605.cljs$lang$protocol_mask$partition0$ & (134217728));
if((bit__12281__auto__) || (G__21605.cljs$core$IReversible$)){
return true;
} else {
if((!G__21605.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__21605);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__21605);
}
});
cljs.core.rseq = (function rseq(coll){
return cljs.core._rseq(coll);
});
/**
* Returns a seq of the items in coll in reverse order. Not lazy.
*/
cljs.core.reverse = (function reverse(coll){
if(cljs.core.reversible_QMARK_(coll)){
return cljs.core.rseq(coll);
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,coll);
}
});
/**
* @param {...*} var_args
*/
cljs.core.list = (function() { 
var list__delegate = function (xs){
var arr = ((((xs instanceof cljs.core.IndexedSeq)) && ((xs.i === (0))))?xs.arr:(function (){var arr = [];
var xs__$1 = xs;
while(true){
if(!((xs__$1 == null))){
arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));

var G__21606 = xs__$1.cljs$core$INext$_next$arity$1(null);
xs__$1 = G__21606;
continue;
} else {
return arr;
}
break;
}
})());
var i = arr.length;
var r = cljs.core.List.EMPTY;
while(true){
if((i > (0))){
var G__21607 = (i - (1));
var G__21608 = r.cljs$core$ICollection$_conj$arity$2(null,(arr[(i - (1))]));
i = G__21607;
r = G__21608;
continue;
} else {
return r;
}
break;
}
};
var list = function (var_args){
var xs = null;
if (arguments.length > 0) {
var G__21609__i = 0, G__21609__a = new Array(arguments.length -  0);
while (G__21609__i < G__21609__a.length) {G__21609__a[G__21609__i] = arguments[G__21609__i + 0]; ++G__21609__i;}
  xs = new cljs.core.IndexedSeq(G__21609__a,0);
} 
return list__delegate.call(this,xs);};
list.cljs$lang$maxFixedArity = 0;
list.cljs$lang$applyTo = (function (arglist__21610){
var xs = cljs.core.seq(arglist__21610);
return list__delegate(xs);
});
list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
return list;
})()
;

/**
* @constructor
*/
cljs.core.Cons = (function (meta,first,rest,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65929452;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Cons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Cons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Cons(self__.meta,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return null;
} else {
return cljs.core.seq(self__.rest);
}
});

cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__12021__auto__ = self__.__hash;
if(!((h__12021__auto__ == null))){
return h__12021__auto__;
} else {
var h__12021__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__12021__auto____$1;

return h__12021__auto____$1;
}
});

cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(meta__$1,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(null,o,coll__$1,self__.__hash));
});

cljs.core.Cons.cljs$lang$type = true;

cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";

cljs.core.Cons.cljs$lang$ctorPrWriter = (function (this__12187__auto__,writer__12188__auto__,opt__12189__auto__){
return cljs.core._write(writer__12188__auto__,"cljs.core/Cons");
});

cljs.core.__GT_Cons = (function __GT_Cons(meta,first,rest,__hash){
return (new cljs.core.Cons(meta,first,rest,__hash));
});

(cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__12578__auto__ = this;
return cljs.core.es6_iterator(this__12578__auto__);
}));
/**
* Returns a new seq where x is the first element and seq is the rest.
*/
cljs.core.cons = (function cons(x,coll){
if((function (){var or__11600__auto__ = (coll == null);
if(or__11600__auto__){
return or__11600__auto__;
} else {
var G__21614 = coll;
if(G__21614){
var bit__12274__auto__ = (G__21614.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__12274__auto__) || (G__21614.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
}
})()){
return (new cljs.core.Cons(null,x,coll,null));
} else {
return (new cljs.core.Cons(null,x,cljs.core.seq(coll),null));
}
});
cljs.core.list_QMARK_ = (function list_QMARK_(x){
var G__21616 = x;
if(G__21616){
var bit__12281__auto__ = (G__21616.cljs$lang$protocol_mask$partition0$ & (33554432));
if((bit__12281__auto__) || (G__21616.cljs$core$IList$)){
return true;
} else {
if((!G__21616.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__21616);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__21616);
}
});
cljs.core.hash_keyword = (function hash_keyword(k){
return ((cljs.core.hash_symbol(k) + (2654435769)) | (0));
});
cljs.core.compare_keywords = (function compare_keywords(a,b){
if((a.fqn === b.fqn)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__11588__auto__ = cljs.core.not(a.ns);
if(and__11588__auto__){
return b.ns;
} else {
return and__11588__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__21623 = a.ns;
var G__21624 = b.ns;
return goog.array.defaultCompare(G__21623,G__21624);
})();
if(((0) === nsc)){
var G__21625 = a.name;
var G__21626 = b.name;
return goog.array.defaultCompare(G__21625,G__21626);
} else {
return nsc;
}
}
} else {
var G__21627 = a.name;
var G__21628 = b.name;
return goog.array.defaultCompare(G__21627,G__21628);

}
}
}
});

/**
* @constructor
*/
cljs.core.Keyword = (function (ns,name,fqn,_hash){
this.ns = ns;
this.name = name;
this.fqn = fqn;
this._hash = _hash;
this.cljs$lang$protocol_mask$partition0$ = 2153775105;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,[cljs.core.str(":"),cljs.core.str(self__.fqn)].join(''));
});

cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var h__12021__auto__ = self__._hash;
if(!((h__12021__auto__ == null))){
return h__12021__auto__;
} else {
var h__12021__auto____$1 = cljs.core.hash_keyword(this$__$1);
self__._hash = h__12021__auto____$1;

return h__12021__auto____$1;
}
});

cljs.core.Keyword.prototype.call = (function() {
var G__21630 = null;
var G__21630__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});
var G__21630__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});
G__21630 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__21630__2.call(this,self__,coll);
case 3:
return G__21630__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21630.cljs$core$IFn$_invoke$arity$2 = G__21630__2;
G__21630.cljs$core$IFn$_invoke$arity$3 = G__21630__3;
return G__21630;
})()
;

cljs.core.Keyword.prototype.apply = (function (self__,args21629){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args21629)));
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});

cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Keyword)){
return (self__.fqn === other.fqn);
} else {
return false;
}
});

cljs.core.Keyword.prototype.toString = (function (){
var self__ = this;
var _ = this;
return [cljs.core.str(":"),cljs.core.str(self__.fqn)].join('');
});

cljs.core.Keyword.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Keyword.cljs$lang$type = true;

cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";

cljs.core.Keyword.cljs$lang$ctorPrWriter = (function (this__12187__auto__,writer__12188__auto__,opt__12189__auto__){
return cljs.core._write(writer__12188__auto__,"cljs.core/Keyword");
});

cljs.core.__GT_Keyword = (function __GT_Keyword(ns,name,fqn,_hash){
return (new cljs.core.Keyword(ns,name,fqn,_hash));
});

cljs.core.keyword_QMARK_ = (function keyword_QMARK_(x){
return (x instanceof cljs.core.Keyword);
});
cljs.core.keyword_identical_QMARK_ = (function keyword_identical_QMARK_(x,y){
if((x === y)){
return true;
} else {
if(((x instanceof cljs.core.Keyword)) && ((y instanceof cljs.core.Keyword))){
return (x.fqn === y.fqn);
} else {
return false;
}
}
});
/**
* Returns the namespace String of a symbol or keyword, or nil if not present.
*/
cljs.core.namespace = (function namespace(x){
if((function (){var G__21632 = x;
if(G__21632){
var bit__12274__auto__ = (G__21632.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__12274__auto__) || (G__21632.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(null);
} else {
throw (new Error([cljs.core.str("Doesn't support namespace: "),cljs.core.str(x)].join('')));
}
});
/**
* Returns a Keyword with the given namespace and name.  Do not use :
* in the keyword strings, it will be added automatically.
*/
cljs.core.keyword = (function() {
var keyword = null;
var keyword__1 = (function (name){
if((name instanceof cljs.core.Keyword)){
return name;
} else {
if((name instanceof cljs.core.Symbol)){
return (new cljs.core.Keyword(cljs.core.namespace(name),(function (){var G__21634 = name;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__21634) : cljs.core.name.call(null,G__21634));
})(),name.str,null));
} else {
if(typeof name === 'string'){
var parts = name.split("/");
if((parts.length === (2))){
return (new cljs.core.Keyword((parts[(0)]),(parts[(1)]),name,null));
} else {
return (new cljs.core.Keyword(null,(parts[(0)]),name,null));
}
} else {
return null;
}
}
}
});
var keyword__2 = (function (ns,name){
return (new cljs.core.Keyword(ns,name,[cljs.core.str((cljs.core.truth_(ns)?[cljs.core.str(ns),cljs.core.str("/")].join(''):null)),cljs.core.str(name)].join(''),null));
});
keyword = function(ns,name){
switch(arguments.length){
case 1:
return keyword__1.call(this,ns);
case 2:
return keyword__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
return keyword;
})()
;

/**
* @constructor
*/
cljs.core.LazySeq = (function (meta,fn,s,__hash){
this.meta = meta;
this.fn = fn;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.LazySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.LazySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.LazySeq.prototype.sval = (function (){
var self__ = this;
var coll = this;
if((self__.fn == null)){
return self__.s;
} else {
self__.s = (function (){return (self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null));
})();

self__.fn = null;

return self__.s;
}
});

cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.next(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__12021__auto__ = self__.__hash;
if(!((h__12021__auto__ == null))){
return h__12021__auto__;
} else {
var h__12021__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__12021__auto____$1;

return h__12021__auto____$1;
}
});

cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if(!((self__.s == null))){
return cljs.core.rest(self__.s);
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
coll__$1.sval();

if((self__.s == null)){
return null;
} else {
var ls = self__.s;
while(true){
if((ls instanceof cljs.core.LazySeq)){
var G__21635 = ls.sval();
ls = G__21635;
continue;
} else {
self__.s = ls;

return cljs.core.seq(self__.s);
}
break;
}
}
});

cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.LazySeq(meta__$1,self__.fn,self__.s,self__.__hash));
});

cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.LazySeq.cljs$lang$type = true;

cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";

cljs.core.LazySeq.cljs$lang$ctorPrWriter = (function (this__12187__auto__,writer__12188__auto__,opt__12189__auto__){
return cljs.core._write(writer__12188__auto__,"cljs.core/LazySeq");
});

cljs.core.__GT_LazySeq = (function __GT_LazySeq(meta,fn,s,__hash){
return (new cljs.core.LazySeq(meta,fn,s,__hash));
});

(cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__12578__auto__ = this;
return cljs.core.es6_iterator(this__12578__auto__);
}));

/**
* @constructor
*/
cljs.core.ChunkBuffer = (function (buf,end){
this.buf = buf;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2;
})
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.end;
});

cljs.core.ChunkBuffer.prototype.add = (function (o){
var self__ = this;
var _ = this;
(self__.buf[self__.end] = o);

return self__.end = (self__.end + (1));
});

cljs.core.ChunkBuffer.prototype.chunk = (function (o){
var self__ = this;
var _ = this;
var ret = (new cljs.core.ArrayChunk(self__.buf,(0),self__.end));
self__.buf = null;

return ret;
});

cljs.core.ChunkBuffer.cljs$lang$type = true;

cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";

cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = (function (this__12187__auto__,writer__12188__auto__,opt__12189__auto__){
return cljs.core._write(writer__12188__auto__,"cljs.core/ChunkBuffer");
});

cljs.core.__GT_ChunkBuffer = (function __GT_ChunkBuffer(buf,end){
return (new cljs.core.ChunkBuffer(buf,end));
});

cljs.core.chunk_buffer = (function chunk_buffer(capacity){
return (new cljs.core.ChunkBuffer((new Array(capacity)),(0)));
});

/**
* @constructor
*/
cljs.core.ArrayChunk = (function (arr,off,end){
this.arr = arr;
this.off = off;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 524306;
})
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.off]),(self__.off + (1)));
});

cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.off);
});

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.off === self__.end)){
throw (new Error("-drop-first of empty chunk"));
} else {
return (new cljs.core.ArrayChunk(self__.arr,(self__.off + (1)),self__.end));
}
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,i){
var self__ = this;
var coll__$1 = this;
return (self__.arr[(self__.off + i)]);
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,i,not_found){
var self__ = this;
var coll__$1 = this;
if(((i >= (0))) && ((i < (self__.end - self__.off)))){
return (self__.arr[(self__.off + i)]);
} else {
return not_found;
}
});

cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.end - self__.off);
});

cljs.core.ArrayChunk.cljs$lang$type = true;

cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";

cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = (function (this__12187__auto__,writer__12188__auto__,opt__12189__auto__){
return cljs.core._write(writer__12188__auto__,"cljs.core/ArrayChunk");
});

cljs.core.__GT_ArrayChunk = (function __GT_ArrayChunk(arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});

cljs.core.array_chunk = (function() {
var array_chunk = null;
var array_chunk__1 = (function (arr){
return (new cljs.core.ArrayChunk(arr,(0),arr.length));
});
var array_chunk__2 = (function (arr,off){
return (new cljs.core.ArrayChunk(arr,off,arr.length));
});
var array_chunk__3 = (function (arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});
array_chunk = function(arr,off,end){
switch(arguments.length){
case 1:
return array_chunk__1.call(this,arr);
case 2:
return array_chunk__2.call(this,arr,off);
case 3:
return array_chunk__3.call(this,arr,off,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
return array_chunk;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedCons = (function (chunk,more,meta,__hash){
this.chunk = chunk;
this.more = more;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31850732;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedCons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedCons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
var more__$1 = cljs.core._seq(self__.more);
if((more__$1 == null)){
return null;
} else {
return more__$1;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__12021__auto__ = self__.__hash;
if(!((h__12021__auto__ == null))){
return h__12021__auto__;
} else {
var h__12021__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__12021__auto____$1;

return h__12021__auto____$1;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk,(0));
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.chunk;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ChunkedCons(self__.chunk,self__.more,m,self__.__hash));
});

cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,this$__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return null;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.cljs$lang$type = true;

cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";

cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = (function (this__12187__auto__,writer__12188__auto__,opt__12189__auto__){
return cljs.core._write(writer__12188__auto__,"cljs.core/ChunkedCons");
});

cljs.core.__GT_ChunkedCons = (function __GT_ChunkedCons(chunk,more,meta,__hash){
return (new cljs.core.ChunkedCons(chunk,more,meta,__hash));
});

(cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__12578__auto__ = this;
return cljs.core.es6_iterator(this__12578__auto__);
}));
cljs.core.chunk_cons = (function chunk_cons(chunk,rest){
if((cljs.core._count(chunk) === (0))){
return rest;
} else {
return (new cljs.core.ChunkedCons(chunk,rest,null,null));
}
});
cljs.core.chunk_append = (function chunk_append(b,x){
return b.add(x);
});
cljs.core.chunk = (function chunk(b){
return b.chunk();
});
cljs.core.chunk_first = (function chunk_first(s){
return cljs.core._chunked_first(s);
});
cljs.core.chunk_rest = (function chunk_rest(s){
return cljs.core._chunked_rest(s);
});
cljs.core.chunk_next = (function chunk_next(s){
if((function (){var G__21637 = s;
if(G__21637){
var bit__12274__auto__ = (G__21637.cljs$lang$protocol_mask$partition1$ & (1024));
if((bit__12274__auto__) || (G__21637.cljs$core$IChunkedNext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core._chunked_next(s);
} else {
return cljs.core.seq(cljs.core._chunked_rest(s));
}
});
/**
* Naive impl of to-array as a start.
*/
cljs.core.to_array = (function to_array(s){
var ary = [];
var s__$1 = s;
while(true){
if(cljs.core.seq(s__$1)){
ary.push(cljs.core.first(s__$1));

var G__21638 = cljs.core.next(s__$1);
s__$1 = G__21638;
continue;
} else {
return ary;
}
break;
}
});
/**
* Returns a (potentially-ragged) 2-dimensional array
* containing the contents of coll.
*/
cljs.core.to_array_2d = (function to_array_2d(coll){
var ret = (new Array(cljs.core.count(coll)));
var i_21639 = (0);
var xs_21640 = cljs.core.seq(coll);
while(true){
if(xs_21640){
(ret[i_21639] = cljs.core.to_array(cljs.core.first(xs_21640)));

var G__21641 = (i_21639 + (1));
var G__21642 = cljs.core.next(xs_21640);
i_21639 = G__21641;
xs_21640 = G__21642;
continue;
} else {
}
break;
}

return ret;
});
cljs.core.int_array = (function() {
var int_array = null;
var int_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var int_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__21645 = (i + (1));
var G__21646 = cljs.core.next(s__$1);
i = G__21645;
s__$1 = G__21646;
continue;
} else {
return a;
}
break;
}
} else {
var n__12487__auto___21647 = size;
var i_21648 = (0);
while(true){
if((i_21648 < n__12487__auto___21647)){
(a[i_21648] = init_val_or_seq);

var G__21649 = (i_21648 + (1));
i_21648 = G__21649;
continue;
} else {
}
break;
}

return a;
}
});
int_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return int_array__1.call(this,size);
case 2:
return int_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
return int_array;
})()
;
cljs.core.long_array = (function() {
var long_array = null;
var long_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var long_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__21652 = (i + (1));
var G__21653 = cljs.core.next(s__$1);
i = G__21652;
s__$1 = G__21653;
continue;
} else {
return a;
}
break;
}
} else {
var n__12487__auto___21654 = size;
var i_21655 = (0);
while(true){
if((i_21655 < n__12487__auto___21654)){
(a[i_21655] = init_val_or_seq);

var G__21656 = (i_21655 + (1));
i_21655 = G__21656;
continue;
} else {
}
break;
}

return a;
}
});
long_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return long_array__1.call(this,size);
case 2:
return long_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
return long_array;
})()
;
cljs.core.double_array = (function() {
var double_array = null;
var double_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var double_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__21659 = (i + (1));
var G__21660 = cljs.core.next(s__$1);
i = G__21659;
s__$1 = G__21660;
continue;
} else {
return a;
}
break;
}
} else {
var n__12487__auto___21661 = size;
var i_21662 = (0);
while(true){
if((i_21662 < n__12487__auto___21661)){
(a[i_21662] = init_val_or_seq);

var G__21663 = (i_21662 + (1));
i_21662 = G__21663;
continue;
} else {
}
break;
}

return a;
}
});
double_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return double_array__1.call(this,size);
case 2:
return double_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
return double_array;
})()
;
cljs.core.object_array = (function() {
var object_array = null;
var object_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var object_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__21666 = (i + (1));
var G__21667 = cljs.core.next(s__$1);
i = G__21666;
s__$1 = G__21667;
continue;
} else {
return a;
}
break;
}
} else {
var n__12487__auto___21668 = size;
var i_21669 = (0);
while(true){
if((i_21669 < n__12487__auto___21668)){
(a[i_21669] = init_val_or_seq);

var G__21670 = (i_21669 + (1));
i_21669 = G__21670;
continue;
} else {
}
break;
}

return a;
}
});
object_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return object_array__1.call(this,size);
case 2:
return object_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
return object_array;
})()
;
cljs.core.bounded_count = (function bounded_count(s,n){
if(cljs.core.counted_QMARK_(s)){
return cljs.core.count(s);
} else {
var s__$1 = s;
var i = n;
var sum = (0);
while(true){
if(((i > (0))) && (cljs.core.seq(s__$1))){
var G__21671 = cljs.core.next(s__$1);
var G__21672 = (i - (1));
var G__21673 = (sum + (1));
s__$1 = G__21671;
i = G__21672;
sum = G__21673;
continue;
} else {
return sum;
}
break;
}
}
});
cljs.core.spread = (function spread(arglist){
if((arglist == null)){
return null;
} else {
if((cljs.core.next(arglist) == null)){
return cljs.core.seq(cljs.core.first(arglist));
} else {
return cljs.core.cons(cljs.core.first(arglist),spread(cljs.core.next(arglist)));

}
}
});
/**
* Returns a lazy seq representing the concatenation of the elements in the supplied colls.
* @param {...*} var_args
*/
cljs.core.concat = (function() {
var concat = null;
var concat__0 = (function (){
return (new cljs.core.LazySeq(null,(function (){
return null;
}),null,null));
});
var concat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return x;
}),null,null));
});
var concat__2 = (function (x,y){
return (new cljs.core.LazySeq(null,(function (){
var s = cljs.core.seq(x);
if(s){
if(cljs.core.chunked_seq_QMARK_(s)){
return cljs.core.chunk_cons(cljs.core.chunk_first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s),y));
} else {
return cljs.core.cons(cljs.core.first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s),y));
}
} else {
return y;
}
}),null,null));
});
var concat__3 = (function() { 
var G__21693__delegate = function (x,y,zs){
var cat = (function cat(xys,zs__$1){
return (new cljs.core.LazySeq(null,(function (){
var xys__$1 = cljs.core.seq(xys);
if(xys__$1){
if(cljs.core.chunked_seq_QMARK_(xys__$1)){
return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1),cat(cljs.core.chunk_rest(xys__$1),zs__$1));
} else {
return cljs.core.cons(cljs.core.first(xys__$1),cat(cljs.core.rest(xys__$1),zs__$1));
}
} else {
if(cljs.core.truth_(zs__$1)){
return cat(cljs.core.first(zs__$1),cljs.core.next(zs__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(concat.cljs$core$IFn$_invoke$arity$2(x,y),zs);
};
var G__21693 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__21694__i = 0, G__21694__a = new Array(arguments.length -  2);
while (G__21694__i < G__21694__a.length) {G__21694__a[G__21694__i] = arguments[G__21694__i + 2]; ++G__21694__i;}
  zs = new cljs.core.IndexedSeq(G__21694__a,0);
} 
return G__21693__delegate.call(this,x,y,zs);};
G__21693.cljs$lang$maxFixedArity = 2;
G__21693.cljs$lang$applyTo = (function (arglist__21695){
var x = cljs.core.first(arglist__21695);
arglist__21695 = cljs.core.next(arglist__21695);
var y = cljs.core.first(arglist__21695);
var zs = cljs.core.rest(arglist__21695);
return G__21693__delegate(x,y,zs);
});
G__21693.cljs$core$IFn$_invoke$arity$variadic = G__21693__delegate;
return G__21693;
})()
;
concat = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return concat__0.call(this);
case 1:
return concat__1.call(this,x);
case 2:
return concat__2.call(this,x,y);
default:
var G__21696 = null;
if (arguments.length > 2) {
var G__21697__i = 0, G__21697__a = new Array(arguments.length -  2);
while (G__21697__i < G__21697__a.length) {G__21697__a[G__21697__i] = arguments[G__21697__i + 2]; ++G__21697__i;}
G__21696 = new cljs.core.IndexedSeq(G__21697__a,0);
}
return concat__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__21696);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
concat.cljs$lang$maxFixedArity = 2;
concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
return concat;
})()
;
/**
* Creates a new list containing the items prepended to the rest, the
* last of which will be treated as a sequence.
* @param {...*} var_args
*/
cljs.core.list_STAR_ = (function() {
var list_STAR_ = null;
var list_STAR___1 = (function (args){
return cljs.core.seq(args);
});
var list_STAR___2 = (function (a,args){
return cljs.core.cons(a,args);
});
var list_STAR___3 = (function (a,b,args){
return cljs.core.cons(a,cljs.core.cons(b,args));
});
var list_STAR___4 = (function (a,b,c,args){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,args)));
});
var list_STAR___5 = (function() { 
var G__21698__delegate = function (a,b,c,d,more){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(more)))));
};
var G__21698 = function (a,b,c,d,var_args){
var more = null;
if (arguments.length > 4) {
var G__21699__i = 0, G__21699__a = new Array(arguments.length -  4);
while (G__21699__i < G__21699__a.length) {G__21699__a[G__21699__i] = arguments[G__21699__i + 4]; ++G__21699__i;}
  more = new cljs.core.IndexedSeq(G__21699__a,0);
} 
return G__21698__delegate.call(this,a,b,c,d,more);};
G__21698.cljs$lang$maxFixedArity = 4;
G__21698.cljs$lang$applyTo = (function (arglist__21700){
var a = cljs.core.first(arglist__21700);
arglist__21700 = cljs.core.next(arglist__21700);
var b = cljs.core.first(arglist__21700);
arglist__21700 = cljs.core.next(arglist__21700);
var c = cljs.core.first(arglist__21700);
arglist__21700 = cljs.core.next(arglist__21700);
var d = cljs.core.first(arglist__21700);
var more = cljs.core.rest(arglist__21700);
return G__21698__delegate(a,b,c,d,more);
});
G__21698.cljs$core$IFn$_invoke$arity$variadic = G__21698__delegate;
return G__21698;
})()
;
list_STAR_ = function(a,b,c,d,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return list_STAR___1.call(this,a);
case 2:
return list_STAR___2.call(this,a,b);
case 3:
return list_STAR___3.call(this,a,b,c);
case 4:
return list_STAR___4.call(this,a,b,c,d);
default:
var G__21701 = null;
if (arguments.length > 4) {
var G__21702__i = 0, G__21702__a = new Array(arguments.length -  4);
while (G__21702__i < G__21702__a.length) {G__21702__a[G__21702__i] = arguments[G__21702__i + 4]; ++G__21702__i;}
G__21701 = new cljs.core.IndexedSeq(G__21702__a,0);
}
return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a,b,c,d, G__21701);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
list_STAR_.cljs$lang$maxFixedArity = 4;
list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
return list_STAR_;
})()
;
/**
* Returns a new, transient version of the collection, in constant time.
*/
cljs.core.transient$ = (function transient$(coll){
return cljs.core._as_transient(coll);
});
/**
* Returns a new, persistent version of the transient collection, in
* constant time. The transient collection cannot be used after this
* call, any such use will throw an exception.
*/
cljs.core.persistent_BANG_ = (function persistent_BANG_(tcoll){
return cljs.core._persistent_BANG_(tcoll);
});
/**
* Adds x to the transient collection, and return coll. The 'addition'
* may happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj_BANG_ = (function() {
var conj_BANG_ = null;
var conj_BANG___0 = (function (){
return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
});
var conj_BANG___1 = (function (coll){
return coll;
});
var conj_BANG___2 = (function (tcoll,val){
return cljs.core._conj_BANG_(tcoll,val);
});
var conj_BANG___3 = (function() { 
var G__21703__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._conj_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__21704 = ntcoll;
var G__21705 = cljs.core.first(vals);
var G__21706 = cljs.core.next(vals);
tcoll = G__21704;
val = G__21705;
vals = G__21706;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__21703 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__21707__i = 0, G__21707__a = new Array(arguments.length -  2);
while (G__21707__i < G__21707__a.length) {G__21707__a[G__21707__i] = arguments[G__21707__i + 2]; ++G__21707__i;}
  vals = new cljs.core.IndexedSeq(G__21707__a,0);
} 
return G__21703__delegate.call(this,tcoll,val,vals);};
G__21703.cljs$lang$maxFixedArity = 2;
G__21703.cljs$lang$applyTo = (function (arglist__21708){
var tcoll = cljs.core.first(arglist__21708);
arglist__21708 = cljs.core.next(arglist__21708);
var val = cljs.core.first(arglist__21708);
var vals = cljs.core.rest(arglist__21708);
return G__21703__delegate(tcoll,val,vals);
});
G__21703.cljs$core$IFn$_invoke$arity$variadic = G__21703__delegate;
return G__21703;
})()
;
conj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 0:
return conj_BANG___0.call(this);
case 1:
return conj_BANG___1.call(this,tcoll);
case 2:
return conj_BANG___2.call(this,tcoll,val);
default:
var G__21709 = null;
if (arguments.length > 2) {
var G__21710__i = 0, G__21710__a = new Array(arguments.length -  2);
while (G__21710__i < G__21710__a.length) {G__21710__a[G__21710__i] = arguments[G__21710__i + 2]; ++G__21710__i;}
G__21709 = new cljs.core.IndexedSeq(G__21710__a,0);
}
return conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__21709);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj_BANG_.cljs$lang$maxFixedArity = 2;
conj_BANG_.cljs$lang$applyTo = conj_BANG___3.cljs$lang$applyTo;
conj_BANG_.cljs$core$IFn$_invoke$arity$0 = conj_BANG___0;
conj_BANG_.cljs$core$IFn$_invoke$arity$1 = conj_BANG___1;
conj_BANG_.cljs$core$IFn$_invoke$arity$2 = conj_BANG___2;
conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return conj_BANG_;
})()
;
/**
* When applied to a transient map, adds mapping of key(s) to
* val(s). When applied to a transient vector, sets the val at index.
* Note - index must be <= (count vector). Returns coll.
* @param {...*} var_args
*/
cljs.core.assoc_BANG_ = (function() {
var assoc_BANG_ = null;
var assoc_BANG___3 = (function (tcoll,key,val){
return cljs.core._assoc_BANG_(tcoll,key,val);
});
var assoc_BANG___4 = (function() { 
var G__21711__delegate = function (tcoll,key,val,kvs){
while(true){
var ntcoll = cljs.core._assoc_BANG_(tcoll,key,val);
if(cljs.core.truth_(kvs)){
var G__21712 = ntcoll;
var G__21713 = cljs.core.first(kvs);
var G__21714 = cljs.core.second(kvs);
var G__21715 = cljs.core.nnext(kvs);
tcoll = G__21712;
key = G__21713;
val = G__21714;
kvs = G__21715;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__21711 = function (tcoll,key,val,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__21716__i = 0, G__21716__a = new Array(arguments.length -  3);
while (G__21716__i < G__21716__a.length) {G__21716__a[G__21716__i] = arguments[G__21716__i + 3]; ++G__21716__i;}
  kvs = new cljs.core.IndexedSeq(G__21716__a,0);
} 
return G__21711__delegate.call(this,tcoll,key,val,kvs);};
G__21711.cljs$lang$maxFixedArity = 3;
G__21711.cljs$lang$applyTo = (function (arglist__21717){
var tcoll = cljs.core.first(arglist__21717);
arglist__21717 = cljs.core.next(arglist__21717);
var key = cljs.core.first(arglist__21717);
arglist__21717 = cljs.core.next(arglist__21717);
var val = cljs.core.first(arglist__21717);
var kvs = cljs.core.rest(arglist__21717);
return G__21711__delegate(tcoll,key,val,kvs);
});
G__21711.cljs$core$IFn$_invoke$arity$variadic = G__21711__delegate;
return G__21711;
})()
;
assoc_BANG_ = function(tcoll,key,val,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc_BANG___3.call(this,tcoll,key,val);
default:
var G__21718 = null;
if (arguments.length > 3) {
var G__21719__i = 0, G__21719__a = new Array(arguments.length -  3);
while (G__21719__i < G__21719__a.length) {G__21719__a[G__21719__i] = arguments[G__21719__i + 3]; ++G__21719__i;}
G__21718 = new cljs.core.IndexedSeq(G__21719__a,0);
}
return assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll,key,val, G__21718);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc_BANG_.cljs$lang$maxFixedArity = 3;
assoc_BANG_.cljs$lang$applyTo = assoc_BANG___4.cljs$lang$applyTo;
assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = assoc_BANG___3;
assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
return assoc_BANG_;
})()
;
/**
* Returns a transient map that doesn't contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc_BANG_ = (function() {
var dissoc_BANG_ = null;
var dissoc_BANG___2 = (function (tcoll,key){
return cljs.core._dissoc_BANG_(tcoll,key);
});
var dissoc_BANG___3 = (function() { 
var G__21720__delegate = function (tcoll,key,ks){
while(true){
var ntcoll = cljs.core._dissoc_BANG_(tcoll,key);
if(cljs.core.truth_(ks)){
var G__21721 = ntcoll;
var G__21722 = cljs.core.first(ks);
var G__21723 = cljs.core.next(ks);
tcoll = G__21721;
key = G__21722;
ks = G__21723;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__21720 = function (tcoll,key,var_args){
var ks = null;
if (arguments.length > 2) {
var G__21724__i = 0, G__21724__a = new Array(arguments.length -  2);
while (G__21724__i < G__21724__a.length) {G__21724__a[G__21724__i] = arguments[G__21724__i + 2]; ++G__21724__i;}
  ks = new cljs.core.IndexedSeq(G__21724__a,0);
} 
return G__21720__delegate.call(this,tcoll,key,ks);};
G__21720.cljs$lang$maxFixedArity = 2;
G__21720.cljs$lang$applyTo = (function (arglist__21725){
var tcoll = cljs.core.first(arglist__21725);
arglist__21725 = cljs.core.next(arglist__21725);
var key = cljs.core.first(arglist__21725);
var ks = cljs.core.rest(arglist__21725);
return G__21720__delegate(tcoll,key,ks);
});
G__21720.cljs$core$IFn$_invoke$arity$variadic = G__21720__delegate;
return G__21720;
})()
;
dissoc_BANG_ = function(tcoll,key,var_args){
var ks = var_args;
switch(arguments.length){
case 2:
return dissoc_BANG___2.call(this,tcoll,key);
default:
var G__21726 = null;
if (arguments.length > 2) {
var G__21727__i = 0, G__21727__a = new Array(arguments.length -  2);
while (G__21727__i < G__21727__a.length) {G__21727__a[G__21727__i] = arguments[G__21727__i + 2]; ++G__21727__i;}
G__21726 = new cljs.core.IndexedSeq(G__21727__a,0);
}
return dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,key, G__21726);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc_BANG_.cljs$lang$maxFixedArity = 2;
dissoc_BANG_.cljs$lang$applyTo = dissoc_BANG___3.cljs$lang$applyTo;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = dissoc_BANG___2;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc_BANG_;
})()
;
/**
* Removes the last item from a transient vector. If
* the collection is empty, throws an exception. Returns coll
*/
cljs.core.pop_BANG_ = (function pop_BANG_(tcoll){
return cljs.core._pop_BANG_(tcoll);
});
/**
* disj[oin]. Returns a transient set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj_BANG_ = (function() {
var disj_BANG_ = null;
var disj_BANG___2 = (function (tcoll,val){
return cljs.core._disjoin_BANG_(tcoll,val);
});
var disj_BANG___3 = (function() { 
var G__21728__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._disjoin_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__21729 = ntcoll;
var G__21730 = cljs.core.first(vals);
var G__21731 = cljs.core.next(vals);
tcoll = G__21729;
val = G__21730;
vals = G__21731;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__21728 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__21732__i = 0, G__21732__a = new Array(arguments.length -  2);
while (G__21732__i < G__21732__a.length) {G__21732__a[G__21732__i] = arguments[G__21732__i + 2]; ++G__21732__i;}
  vals = new cljs.core.IndexedSeq(G__21732__a,0);
} 
return G__21728__delegate.call(this,tcoll,val,vals);};
G__21728.cljs$lang$maxFixedArity = 2;
G__21728.cljs$lang$applyTo = (function (arglist__21733){
var tcoll = cljs.core.first(arglist__21733);
arglist__21733 = cljs.core.next(arglist__21733);
var val = cljs.core.first(arglist__21733);
var vals = cljs.core.rest(arglist__21733);
return G__21728__delegate(tcoll,val,vals);
});
G__21728.cljs$core$IFn$_invoke$arity$variadic = G__21728__delegate;
return G__21728;
})()
;
disj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 2:
return disj_BANG___2.call(this,tcoll,val);
default:
var G__21734 = null;
if (arguments.length > 2) {
var G__21735__i = 0, G__21735__a = new Array(arguments.length -  2);
while (G__21735__i < G__21735__a.length) {G__21735__a[G__21735__i] = arguments[G__21735__i + 2]; ++G__21735__i;}
G__21734 = new cljs.core.IndexedSeq(G__21735__a,0);
}
return disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__21734);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj_BANG_.cljs$lang$maxFixedArity = 2;
disj_BANG_.cljs$lang$applyTo = disj_BANG___3.cljs$lang$applyTo;
disj_BANG_.cljs$core$IFn$_invoke$arity$2 = disj_BANG___2;
disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return disj_BANG_;
})()
;

cljs.core.apply_to = (function apply_to(f,argc,args){
var args__$1 = cljs.core.seq(args);
if((argc === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var a12531 = cljs.core._first(args__$1);
var args__$2 = cljs.core._rest(args__$1);
if((argc === (1))){
if(f.cljs$core$IFn$_invoke$arity$1){
return f.cljs$core$IFn$_invoke$arity$1(a12531);
} else {
var G__21946 = a12531;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__21946) : f.call(null,G__21946));
}
} else {
var b12532 = cljs.core._first(args__$2);
var args__$3 = cljs.core._rest(args__$2);
if((argc === (2))){
if(f.cljs$core$IFn$_invoke$arity$2){
return f.cljs$core$IFn$_invoke$arity$2(a12531,b12532);
} else {
var G__21947 = a12531;
var G__21948 = b12532;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21947,G__21948) : f.call(null,G__21947,G__21948));
}
} else {
var c12533 = cljs.core._first(args__$3);
var args__$4 = cljs.core._rest(args__$3);
if((argc === (3))){
if(f.cljs$core$IFn$_invoke$arity$3){
return f.cljs$core$IFn$_invoke$arity$3(a12531,b12532,c12533);
} else {
var G__21949 = a12531;
var G__21950 = b12532;
var G__21951 = c12533;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__21949,G__21950,G__21951) : f.call(null,G__21949,G__21950,G__21951));
}
} else {
var d12534 = cljs.core._first(args__$4);
var args__$5 = cljs.core._rest(args__$4);
if((argc === (4))){
if(f.cljs$core$IFn$_invoke$arity$4){
return f.cljs$core$IFn$_invoke$arity$4(a12531,b12532,c12533,d12534);
} else {
var G__21952 = a12531;
var G__21953 = b12532;
var G__21954 = c12533;
var G__21955 = d12534;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__21952,G__21953,G__21954,G__21955) : f.call(null,G__21952,G__21953,G__21954,G__21955));
}
} else {
var e12535 = cljs.core._first(args__$5);
var args__$6 = cljs.core._rest(args__$5);
if((argc === (5))){
if(f.cljs$core$IFn$_invoke$arity$5){
return f.cljs$core$IFn$_invoke$arity$5(a12531,b12532,c12533,d12534,e12535);
} else {
var G__21956 = a12531;
var G__21957 = b12532;
var G__21958 = c12533;
var G__21959 = d12534;
var G__21960 = e12535;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__21956,G__21957,G__21958,G__21959,G__21960) : f.call(null,G__21956,G__21957,G__21958,G__21959,G__21960));
}
} else {
var f12536 = cljs.core._first(args__$6);
var args__$7 = cljs.core._rest(args__$6);
if((argc === (6))){
if(f.cljs$core$IFn$_invoke$arity$6){
return f.cljs$core$IFn$_invoke$arity$6(a12531,b12532,c12533,d12534,e12535,f12536);
} else {
var G__21961 = a12531;
var G__21962 = b12532;
var G__21963 = c12533;
var G__21964 = d12534;
var G__21965 = e12535;
var G__21966 = f12536;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__21961,G__21962,G__21963,G__21964,G__21965,G__21966) : f.call(null,G__21961,G__21962,G__21963,G__21964,G__21965,G__21966));
}
} else {
var g12537 = cljs.core._first(args__$7);
var args__$8 = cljs.core._rest(args__$7);
if((argc === (7))){
if(f.cljs$core$IFn$_invoke$arity$7){
return f.cljs$core$IFn$_invoke$arity$7(a12531,b12532,c12533,d12534,e12535,f12536,g12537);
} else {
var G__21967 = a12531;
var G__21968 = b12532;
var G__21969 = c12533;
var G__21970 = d12534;
var G__21971 = e12535;
var G__21972 = f12536;
var G__21973 = g12537;
return (f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(G__21967,G__21968,G__21969,G__21970,G__21971,G__21972,G__21973) : f.call(null,G__21967,G__21968,G__21969,G__21970,G__21971,G__21972,G__21973));
}
} else {
var h12538 = cljs.core._first(args__$8);
var args__$9 = cljs.core._rest(args__$8);
if((argc === (8))){
if(f.cljs$core$IFn$_invoke$arity$8){
return f.cljs$core$IFn$_invoke$arity$8(a12531,b12532,c12533,d12534,e12535,f12536,g12537,h12538);
} else {
var G__21974 = a12531;
var G__21975 = b12532;
var G__21976 = c12533;
var G__21977 = d12534;
var G__21978 = e12535;
var G__21979 = f12536;
var G__21980 = g12537;
var G__21981 = h12538;
return (f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(G__21974,G__21975,G__21976,G__21977,G__21978,G__21979,G__21980,G__21981) : f.call(null,G__21974,G__21975,G__21976,G__21977,G__21978,G__21979,G__21980,G__21981));
}
} else {
var i12539 = cljs.core._first(args__$9);
var args__$10 = cljs.core._rest(args__$9);
if((argc === (9))){
if(f.cljs$core$IFn$_invoke$arity$9){
return f.cljs$core$IFn$_invoke$arity$9(a12531,b12532,c12533,d12534,e12535,f12536,g12537,h12538,i12539);
} else {
var G__21982 = a12531;
var G__21983 = b12532;
var G__21984 = c12533;
var G__21985 = d12534;
var G__21986 = e12535;
var G__21987 = f12536;
var G__21988 = g12537;
var G__21989 = h12538;
var G__21990 = i12539;
return (f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(G__21982,G__21983,G__21984,G__21985,G__21986,G__21987,G__21988,G__21989,G__21990) : f.call(null,G__21982,G__21983,G__21984,G__21985,G__21986,G__21987,G__21988,G__21989,G__21990));
}
} else {
var j12540 = cljs.core._first(args__$10);
var args__$11 = cljs.core._rest(args__$10);
if((argc === (10))){
if(f.cljs$core$IFn$_invoke$arity$10){
return f.cljs$core$IFn$_invoke$arity$10(a12531,b12532,c12533,d12534,e12535,f12536,g12537,h12538,i12539,j12540);
} else {
var G__21991 = a12531;
var G__21992 = b12532;
var G__21993 = c12533;
var G__21994 = d12534;
var G__21995 = e12535;
var G__21996 = f12536;
var G__21997 = g12537;
var G__21998 = h12538;
var G__21999 = i12539;
var G__22000 = j12540;
return (f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(G__21991,G__21992,G__21993,G__21994,G__21995,G__21996,G__21997,G__21998,G__21999,G__22000) : f.call(null,G__21991,G__21992,G__21993,G__21994,G__21995,G__21996,G__21997,G__21998,G__21999,G__22000));
}
} else {
var k12541 = cljs.core._first(args__$11);
var args__$12 = cljs.core._rest(args__$11);
if((argc === (11))){
if(f.cljs$core$IFn$_invoke$arity$11){
return f.cljs$core$IFn$_invoke$arity$11(a12531,b12532,c12533,d12534,e12535,f12536,g12537,h12538,i12539,j12540,k12541);
} else {
var G__22001 = a12531;
var G__22002 = b12532;
var G__22003 = c12533;
var G__22004 = d12534;
var G__22005 = e12535;
var G__22006 = f12536;
var G__22007 = g12537;
var G__22008 = h12538;
var G__22009 = i12539;
var G__22010 = j12540;
var G__22011 = k12541;
return (f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(G__22001,G__22002,G__22003,G__22004,G__22005,G__22006,G__22007,G__22008,G__22009,G__22010,G__22011) : f.call(null,G__22001,G__22002,G__22003,G__22004,G__22005,G__22006,G__22007,G__22008,G__22009,G__22010,G__22011));
}
} else {
var l12542 = cljs.core._first(args__$12);
var args__$13 = cljs.core._rest(args__$12);
if((argc === (12))){
if(f.cljs$core$IFn$_invoke$arity$12){
return f.cljs$core$IFn$_invoke$arity$12(a12531,b12532,c12533,d12534,e12535,f12536,g12537,h12538,i12539,j12540,k12541,l12542);
} else {
var G__22012 = a12531;
var G__22013 = b12532;
var G__22014 = c12533;
var G__22015 = d12534;
var G__22016 = e12535;
var G__22017 = f12536;
var G__22018 = g12537;
var G__22019 = h12538;
var G__22020 = i12539;
var G__22021 = j12540;
var G__22022 = k12541;
var G__22023 = l12542;
return (f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(G__22012,G__22013,G__22014,G__22015,G__22016,G__22017,G__22018,G__22019,G__22020,G__22021,G__22022,G__22023) : f.call(null,G__22012,G__22013,G__22014,G__22015,G__22016,G__22017,G__22018,G__22019,G__22020,G__22021,G__22022,G__22023));
}
} else {
var m12543 = cljs.core._first(args__$13);
var args__$14 = cljs.core._rest(args__$13);
if((argc === (13))){
if(f.cljs$core$IFn$_invoke$arity$13){
return f.cljs$core$IFn$_invoke$arity$13(a12531,b12532,c12533,d12534,e12535,f12536,g12537,h12538,i12539,j12540,k12541,l12542,m12543);
} else {
var G__22024 = a12531;
var G__22025 = b12532;
var G__22026 = c12533;
var G__22027 = d12534;
var G__22028 = e12535;
var G__22029 = f12536;
var G__22030 = g12537;
var G__22031 = h12538;
var G__22032 = i12539;
var G__22033 = j12540;
var G__22034 = k12541;
var G__22035 = l12542;
var G__22036 = m12543;
return (f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(G__22024,G__22025,G__22026,G__22027,G__22028,G__22029,G__22030,G__22031,G__22032,G__22033,G__22034,G__22035,G__22036) : f.call(null,G__22024,G__22025,G__22026,G__22027,G__22028,G__22029,G__22030,G__22031,G__22032,G__22033,G__22034,G__22035,G__22036));
}
} else {
var n12544 = cljs.core._first(args__$14);
var args__$15 = cljs.core._rest(args__$14);
if((argc === (14))){
if(f.cljs$core$IFn$_invoke$arity$14){
return f.cljs$core$IFn$_invoke$arity$14(a12531,b12532,c12533,d12534,e12535,f12536,g12537,h12538,i12539,j12540,k12541,l12542,m12543,n12544);
} else {
var G__22037 = a12531;
var G__22038 = b12532;
var G__22039 = c12533;
var G__22040 = d12534;
var G__22041 = e12535;
var G__22042 = f12536;
var G__22043 = g12537;
var G__22044 = h12538;
var G__22045 = i12539;
var G__22046 = j12540;
var G__22047 = k12541;
var G__22048 = l12542;
var G__22049 = m12543;
var G__22050 = n12544;
return (f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(G__22037,G__22038,G__22039,G__22040,G__22041,G__22042,G__22043,G__22044,G__22045,G__22046,G__22047,G__22048,G__22049,G__22050) : f.call(null,G__22037,G__22038,G__22039,G__22040,G__22041,G__22042,G__22043,G__22044,G__22045,G__22046,G__22047,G__22048,G__22049,G__22050));
}
} else {
var o12545 = cljs.core._first(args__$15);
var args__$16 = cljs.core._rest(args__$15);
if((argc === (15))){
if(f.cljs$core$IFn$_invoke$arity$15){
return f.cljs$core$IFn$_invoke$arity$15(a12531,b12532,c12533,d12534,e12535,f12536,g12537,h12538,i12539,j12540,k12541,l12542,m12543,n12544,o12545);
} else {
var G__22051 = a12531;
var G__22052 = b12532;
var G__22053 = c12533;
var G__22054 = d12534;
var G__22055 = e12535;
var G__22056 = f12536;
var G__22057 = g12537;
var G__22058 = h12538;
var G__22059 = i12539;
var G__22060 = j12540;
var G__22061 = k12541;
var G__22062 = l12542;
var G__22063 = m12543;
var G__22064 = n12544;
var G__22065 = o12545;
return (f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(G__22051,G__22052,G__22053,G__22054,G__22055,G__22056,G__22057,G__22058,G__22059,G__22060,G__22061,G__22062,G__22063,G__22064,G__22065) : f.call(null,G__22051,G__22052,G__22053,G__22054,G__22055,G__22056,G__22057,G__22058,G__22059,G__22060,G__22061,G__22062,G__22063,G__22064,G__22065));
}
} else {
var p12546 = cljs.core._first(args__$16);
var args__$17 = cljs.core._rest(args__$16);
if((argc === (16))){
if(f.cljs$core$IFn$_invoke$arity$16){
return f.cljs$core$IFn$_invoke$arity$16(a12531,b12532,c12533,d12534,e12535,f12536,g12537,h12538,i12539,j12540,k12541,l12542,m12543,n12544,o12545,p12546);
} else {
var G__22066 = a12531;
var G__22067 = b12532;
var G__22068 = c12533;
var G__22069 = d12534;
var G__22070 = e12535;
var G__22071 = f12536;
var G__22072 = g12537;
var G__22073 = h12538;
var G__22074 = i12539;
var G__22075 = j12540;
var G__22076 = k12541;
var G__22077 = l12542;
var G__22078 = m12543;
var G__22079 = n12544;
var G__22080 = o12545;
var G__22081 = p12546;
return (f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(G__22066,G__22067,G__22068,G__22069,G__22070,G__22071,G__22072,G__22073,G__22074,G__22075,G__22076,G__22077,G__22078,G__22079,G__22080,G__22081) : f.call(null,G__22066,G__22067,G__22068,G__22069,G__22070,G__22071,G__22072,G__22073,G__22074,G__22075,G__22076,G__22077,G__22078,G__22079,G__22080,G__22081));
}
} else {
var q12547 = cljs.core._first(args__$17);
var args__$18 = cljs.core._rest(args__$17);
if((argc === (17))){
if(f.cljs$core$IFn$_invoke$arity$17){
return f.cljs$core$IFn$_invoke$arity$17(a12531,b12532,c12533,d12534,e12535,f12536,g12537,h12538,i12539,j12540,k12541,l12542,m12543,n12544,o12545,p12546,q12547);
} else {
var G__22082 = a12531;
var G__22083 = b12532;
var G__22084 = c12533;
var G__22085 = d12534;
var G__22086 = e12535;
var G__22087 = f12536;
var G__22088 = g12537;
var G__22089 = h12538;
var G__22090 = i12539;
var G__22091 = j12540;
var G__22092 = k12541;
var G__22093 = l12542;
var G__22094 = m12543;
var G__22095 = n12544;
var G__22096 = o12545;
var G__22097 = p12546;
var G__22098 = q12547;
return (f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(G__22082,G__22083,G__22084,G__22085,G__22086,G__22087,G__22088,G__22089,G__22090,G__22091,G__22092,G__22093,G__22094,G__22095,G__22096,G__22097,G__22098) : f.call(null,G__22082,G__22083,G__22084,G__22085,G__22086,G__22087,G__22088,G__22089,G__22090,G__22091,G__22092,G__22093,G__22094,G__22095,G__22096,G__22097,G__22098));
}
} else {
var r12548 = cljs.core._first(args__$18);
var args__$19 = cljs.core._rest(args__$18);
if((argc === (18))){
if(f.cljs$core$IFn$_invoke$arity$18){
return f.cljs$core$IFn$_invoke$arity$18(a12531,b12532,c12533,d12534,e12535,f12536,g12537,h12538,i12539,j12540,k12541,l12542,m12543,n12544,o12545,p12546,q12547,r12548);
} else {
var G__22099 = a12531;
var G__22100 = b12532;
var G__22101 = c12533;
var G__22102 = d12534;
var G__22103 = e12535;
var G__22104 = f12536;
var G__22105 = g12537;
var G__22106 = h12538;
var G__22107 = i12539;
var G__22108 = j12540;
var G__22109 = k12541;
var G__22110 = l12542;
var G__22111 = m12543;
var G__22112 = n12544;
var G__22113 = o12545;
var G__22114 = p12546;
var G__22115 = q12547;
var G__22116 = r12548;
return (f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(G__22099,G__22100,G__22101,G__22102,G__22103,G__22104,G__22105,G__22106,G__22107,G__22108,G__22109,G__22110,G__22111,G__22112,G__22113,G__22114,G__22115,G__22116) : f.call(null,G__22099,G__22100,G__22101,G__22102,G__22103,G__22104,G__22105,G__22106,G__22107,G__22108,G__22109,G__22110,G__22111,G__22112,G__22113,G__22114,G__22115,G__22116));
}
} else {
var s12549 = cljs.core._first(args__$19);
var args__$20 = cljs.core._rest(args__$19);
if((argc === (19))){
if(f.cljs$core$IFn$_invoke$arity$19){
return f.cljs$core$IFn$_invoke$arity$19(a12531,b12532,c12533,d12534,e12535,f12536,g12537,h12538,i12539,j12540,k12541,l12542,m12543,n12544,o12545,p12546,q12547,r12548,s12549);
} else {
var G__22117 = a12531;
var G__22118 = b12532;
var G__22119 = c12533;
var G__22120 = d12534;
var G__22121 = e12535;
var G__22122 = f12536;
var G__22123 = g12537;
var G__22124 = h12538;
var G__22125 = i12539;
var G__22126 = j12540;
var G__22127 = k12541;
var G__22128 = l12542;
var G__22129 = m12543;
var G__22130 = n12544;
var G__22131 = o12545;
var G__22132 = p12546;
var G__22133 = q12547;
var G__22134 = r12548;
var G__22135 = s12549;
return (f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(G__22117,G__22118,G__22119,G__22120,G__22121,G__22122,G__22123,G__22124,G__22125,G__22126,G__22127,G__22128,G__22129,G__22130,G__22131,G__22132,G__22133,G__22134,G__22135) : f.call(null,G__22117,G__22118,G__22119,G__22120,G__22121,G__22122,G__22123,G__22124,G__22125,G__22126,G__22127,G__22128,G__22129,G__22130,G__22131,G__22132,G__22133,G__22134,G__22135));
}
} else {
var t12550 = cljs.core._first(args__$20);
var args__$21 = cljs.core._rest(args__$20);
if((argc === (20))){
if(f.cljs$core$IFn$_invoke$arity$20){
return f.cljs$core$IFn$_invoke$arity$20(a12531,b12532,c12533,d12534,e12535,f12536,g12537,h12538,i12539,j12540,k12541,l12542,m12543,n12544,o12545,p12546,q12547,r12548,s12549,t12550);
} else {
var G__22136 = a12531;
var G__22137 = b12532;
var G__22138 = c12533;
var G__22139 = d12534;
var G__22140 = e12535;
var G__22141 = f12536;
var G__22142 = g12537;
var G__22143 = h12538;
var G__22144 = i12539;
var G__22145 = j12540;
var G__22146 = k12541;
var G__22147 = l12542;
var G__22148 = m12543;
var G__22149 = n12544;
var G__22150 = o12545;
var G__22151 = p12546;
var G__22152 = q12547;
var G__22153 = r12548;
var G__22154 = s12549;
var G__22155 = t12550;
return (f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(G__22136,G__22137,G__22138,G__22139,G__22140,G__22141,G__22142,G__22143,G__22144,G__22145,G__22146,G__22147,G__22148,G__22149,G__22150,G__22151,G__22152,G__22153,G__22154,G__22155) : f.call(null,G__22136,G__22137,G__22138,G__22139,G__22140,G__22141,G__22142,G__22143,G__22144,G__22145,G__22146,G__22147,G__22148,G__22149,G__22150,G__22151,G__22152,G__22153,G__22154,G__22155));
}
} else {
throw (new Error("Only up to 20 arguments supported on functions"));
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
});

/**
* Applies fn f to the argument list formed by prepending intervening arguments to args.
* First cut.  Not lazy.  Needs to use emitted toApply.
* @param {...*} var_args
*/
cljs.core.apply = (function() {
var apply = null;
var apply__2 = (function (f,args){
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(args,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,args);
} else {
return f.cljs$lang$applyTo(args);
}
} else {
return f.apply(f,cljs.core.to_array(args));
}
});
var apply__3 = (function (f,x,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__4 = (function (f,x,y,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x,y,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__5 = (function (f,x,y,z,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x,y,z,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__6 = (function() { 
var G__22156__delegate = function (f,a,b,c,d,args){
var arglist = cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(args)))));
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
};
var G__22156 = function (f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 5) {
var G__22157__i = 0, G__22157__a = new Array(arguments.length -  5);
while (G__22157__i < G__22157__a.length) {G__22157__a[G__22157__i] = arguments[G__22157__i + 5]; ++G__22157__i;}
  args = new cljs.core.IndexedSeq(G__22157__a,0);
} 
return G__22156__delegate.call(this,f,a,b,c,d,args);};
G__22156.cljs$lang$maxFixedArity = 5;
G__22156.cljs$lang$applyTo = (function (arglist__22158){
var f = cljs.core.first(arglist__22158);
arglist__22158 = cljs.core.next(arglist__22158);
var a = cljs.core.first(arglist__22158);
arglist__22158 = cljs.core.next(arglist__22158);
var b = cljs.core.first(arglist__22158);
arglist__22158 = cljs.core.next(arglist__22158);
var c = cljs.core.first(arglist__22158);
arglist__22158 = cljs.core.next(arglist__22158);
var d = cljs.core.first(arglist__22158);
var args = cljs.core.rest(arglist__22158);
return G__22156__delegate(f,a,b,c,d,args);
});
G__22156.cljs$core$IFn$_invoke$arity$variadic = G__22156__delegate;
return G__22156;
})()
;
apply = function(f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return apply__2.call(this,f,a);
case 3:
return apply__3.call(this,f,a,b);
case 4:
return apply__4.call(this,f,a,b,c);
case 5:
return apply__5.call(this,f,a,b,c,d);
default:
var G__22159 = null;
if (arguments.length > 5) {
var G__22160__i = 0, G__22160__a = new Array(arguments.length -  5);
while (G__22160__i < G__22160__a.length) {G__22160__a[G__22160__i] = arguments[G__22160__i + 5]; ++G__22160__i;}
G__22159 = new cljs.core.IndexedSeq(G__22160__a,0);
}
return apply__6.cljs$core$IFn$_invoke$arity$variadic(f,a,b,c,d, G__22159);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
apply.cljs$lang$maxFixedArity = 5;
apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
return apply;
})()
;
/**
* Returns an object of the same type and value as obj, with
* (apply f (meta obj) args) as its metadata.
* @param {...*} var_args
*/
cljs.core.vary_meta = (function() {
var vary_meta = null;
var vary_meta__2 = (function (obj,f){
return cljs.core.with_meta(obj,(function (){var G__22176 = cljs.core.meta(obj);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22176) : f.call(null,G__22176));
})());
});
var vary_meta__3 = (function (obj,f,a){
return cljs.core.with_meta(obj,(function (){var G__22177 = cljs.core.meta(obj);
var G__22178 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22177,G__22178) : f.call(null,G__22177,G__22178));
})());
});
var vary_meta__4 = (function (obj,f,a,b){
return cljs.core.with_meta(obj,(function (){var G__22179 = cljs.core.meta(obj);
var G__22180 = a;
var G__22181 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__22179,G__22180,G__22181) : f.call(null,G__22179,G__22180,G__22181));
})());
});
var vary_meta__5 = (function (obj,f,a,b,c){
return cljs.core.with_meta(obj,(function (){var G__22182 = cljs.core.meta(obj);
var G__22183 = a;
var G__22184 = b;
var G__22185 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__22182,G__22183,G__22184,G__22185) : f.call(null,G__22182,G__22183,G__22184,G__22185));
})());
});
var vary_meta__6 = (function (obj,f,a,b,c,d){
return cljs.core.with_meta(obj,(function (){var G__22186 = cljs.core.meta(obj);
var G__22187 = a;
var G__22188 = b;
var G__22189 = c;
var G__22190 = d;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__22186,G__22187,G__22188,G__22189,G__22190) : f.call(null,G__22186,G__22187,G__22188,G__22189,G__22190));
})());
});
var vary_meta__7 = (function() { 
var G__22191__delegate = function (obj,f,a,b,c,d,args){
return cljs.core.with_meta(obj,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.meta(obj),a,b,c,cljs.core.array_seq([d,args], 0)));
};
var G__22191 = function (obj,f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 6) {
var G__22192__i = 0, G__22192__a = new Array(arguments.length -  6);
while (G__22192__i < G__22192__a.length) {G__22192__a[G__22192__i] = arguments[G__22192__i + 6]; ++G__22192__i;}
  args = new cljs.core.IndexedSeq(G__22192__a,0);
} 
return G__22191__delegate.call(this,obj,f,a,b,c,d,args);};
G__22191.cljs$lang$maxFixedArity = 6;
G__22191.cljs$lang$applyTo = (function (arglist__22193){
var obj = cljs.core.first(arglist__22193);
arglist__22193 = cljs.core.next(arglist__22193);
var f = cljs.core.first(arglist__22193);
arglist__22193 = cljs.core.next(arglist__22193);
var a = cljs.core.first(arglist__22193);
arglist__22193 = cljs.core.next(arglist__22193);
var b = cljs.core.first(arglist__22193);
arglist__22193 = cljs.core.next(arglist__22193);
var c = cljs.core.first(arglist__22193);
arglist__22193 = cljs.core.next(arglist__22193);
var d = cljs.core.first(arglist__22193);
var args = cljs.core.rest(arglist__22193);
return G__22191__delegate(obj,f,a,b,c,d,args);
});
G__22191.cljs$core$IFn$_invoke$arity$variadic = G__22191__delegate;
return G__22191;
})()
;
vary_meta = function(obj,f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return vary_meta__2.call(this,obj,f);
case 3:
return vary_meta__3.call(this,obj,f,a);
case 4:
return vary_meta__4.call(this,obj,f,a,b);
case 5:
return vary_meta__5.call(this,obj,f,a,b,c);
case 6:
return vary_meta__6.call(this,obj,f,a,b,c,d);
default:
var G__22194 = null;
if (arguments.length > 6) {
var G__22195__i = 0, G__22195__a = new Array(arguments.length -  6);
while (G__22195__i < G__22195__a.length) {G__22195__a[G__22195__i] = arguments[G__22195__i + 6]; ++G__22195__i;}
G__22194 = new cljs.core.IndexedSeq(G__22195__a,0);
}
return vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj,f,a,b,c,d, G__22194);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
vary_meta.cljs$lang$maxFixedArity = 6;
vary_meta.cljs$lang$applyTo = vary_meta__7.cljs$lang$applyTo;
vary_meta.cljs$core$IFn$_invoke$arity$2 = vary_meta__2;
vary_meta.cljs$core$IFn$_invoke$arity$3 = vary_meta__3;
vary_meta.cljs$core$IFn$_invoke$arity$4 = vary_meta__4;
vary_meta.cljs$core$IFn$_invoke$arity$5 = vary_meta__5;
vary_meta.cljs$core$IFn$_invoke$arity$6 = vary_meta__6;
vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
return vary_meta;
})()
;
/**
* Same as (not (= obj1 obj2))
* @param {...*} var_args
*/
cljs.core.not_EQ_ = (function() {
var not_EQ_ = null;
var not_EQ___1 = (function (x){
return false;
});
var not_EQ___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var not_EQ___3 = (function() { 
var G__22196__delegate = function (x,y,more){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_,x,y,more));
};
var G__22196 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__22197__i = 0, G__22197__a = new Array(arguments.length -  2);
while (G__22197__i < G__22197__a.length) {G__22197__a[G__22197__i] = arguments[G__22197__i + 2]; ++G__22197__i;}
  more = new cljs.core.IndexedSeq(G__22197__a,0);
} 
return G__22196__delegate.call(this,x,y,more);};
G__22196.cljs$lang$maxFixedArity = 2;
G__22196.cljs$lang$applyTo = (function (arglist__22198){
var x = cljs.core.first(arglist__22198);
arglist__22198 = cljs.core.next(arglist__22198);
var y = cljs.core.first(arglist__22198);
var more = cljs.core.rest(arglist__22198);
return G__22196__delegate(x,y,more);
});
G__22196.cljs$core$IFn$_invoke$arity$variadic = G__22196__delegate;
return G__22196;
})()
;
not_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return not_EQ___1.call(this,x);
case 2:
return not_EQ___2.call(this,x,y);
default:
var G__22199 = null;
if (arguments.length > 2) {
var G__22200__i = 0, G__22200__a = new Array(arguments.length -  2);
while (G__22200__i < G__22200__a.length) {G__22200__a[G__22200__i] = arguments[G__22200__i + 2]; ++G__22200__i;}
G__22199 = new cljs.core.IndexedSeq(G__22200__a,0);
}
return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__22199);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
not_EQ_.cljs$lang$maxFixedArity = 2;
not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return not_EQ_;
})()
;
/**
* If coll is empty, returns nil, else coll
*/
cljs.core.not_empty = (function not_empty(coll){
if(cljs.core.seq(coll)){
return coll;
} else {
return null;
}
});
cljs.core.nil_iter = (function nil_iter(){
if(typeof cljs.core.t22204 !== 'undefined'){
} else {

/**
* @constructor
*/
cljs.core.t22204 = (function (nil_iter,meta22205){
this.nil_iter = nil_iter;
this.meta22205 = meta22205;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393216;
})
cljs.core.t22204.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return false;
});

cljs.core.t22204.prototype.next = (function (){
var self__ = this;
var _ = this;
return (new Error("No such element"));
});

cljs.core.t22204.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.t22204.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_22206){
var self__ = this;
var _22206__$1 = this;
return self__.meta22205;
});

cljs.core.t22204.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_22206,meta22205__$1){
var self__ = this;
var _22206__$1 = this;
return (new cljs.core.t22204(self__.nil_iter,meta22205__$1));
});

cljs.core.t22204.cljs$lang$type = true;

cljs.core.t22204.cljs$lang$ctorStr = "cljs.core/t22204";

cljs.core.t22204.cljs$lang$ctorPrWriter = (function (this__12187__auto__,writer__12188__auto__,opt__12189__auto__){
return cljs.core._write(writer__12188__auto__,"cljs.core/t22204");
});

cljs.core.__GT_t22204 = (function __GT_t22204(nil_iter__$1,meta22205){
return (new cljs.core.t22204(nil_iter__$1,meta22205));
});

}

return (new cljs.core.t22204(nil_iter,cljs.core.PersistentArrayMap.EMPTY));
});

/**
* @constructor
*/
cljs.core.StringIter = (function (s,i){
this.s = s;
this.i = i;
})
cljs.core.StringIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.s.length);
});

cljs.core.StringIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.s.charAt(self__.i);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.StringIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.StringIter.cljs$lang$type = true;

cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";

cljs.core.StringIter.cljs$lang$ctorPrWriter = (function (this__12187__auto__,writer__12188__auto__,opt__12189__auto__){
return cljs.core._write(writer__12188__auto__,"cljs.core/StringIter");
});

cljs.core.__GT_StringIter = (function __GT_StringIter(s,i){
return (new cljs.core.StringIter(s,i));
});

cljs.core.string_iter = (function string_iter(x){
return (new cljs.core.StringIter(x,(0)));
});

/**
* @constructor
*/
cljs.core.ArrayIter = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.ArrayIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.ArrayIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.ArrayIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.ArrayIter.cljs$lang$type = true;

cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";

cljs.core.ArrayIter.cljs$lang$ctorPrWriter = (function (this__12187__auto__,writer__12188__auto__,opt__12189__auto__){
return cljs.core._write(writer__12188__auto__,"cljs.core/ArrayIter");
});

cljs.core.__GT_ArrayIter = (function __GT_ArrayIter(arr,i){
return (new cljs.core.ArrayIter(arr,i));
});

cljs.core.array_iter = (function array_iter(x){
return (new cljs.core.ArrayIter(x,(0)));
});
cljs.core.INIT = {};
cljs.core.START = {};

/**
* @constructor
*/
cljs.core.SeqIter = (function (_seq,_next){
this._seq = _seq;
this._next = _next;
})
cljs.core.SeqIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__._seq === cljs.core.INIT)){
self__._seq = cljs.core.START;

self__._next = cljs.core.seq(self__._next);
} else {
if((self__._seq === self__._next)){
self__._next = cljs.core.next(self__._seq);
} else {
}
}

return !((self__._next == null));
});

cljs.core.SeqIter.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(cljs.core.not(this$.hasNext())){
throw (new Error("No such element"));
} else {
self__._seq = self__._next;

return cljs.core.first(self__._next);
}
});

cljs.core.SeqIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.SeqIter.cljs$lang$type = true;

cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";

cljs.core.SeqIter.cljs$lang$ctorPrWriter = (function (this__12187__auto__,writer__12188__auto__,opt__12189__auto__){
return cljs.core._write(writer__12188__auto__,"cljs.core/SeqIter");
});

cljs.core.__GT_SeqIter = (function __GT_SeqIter(_seq,_next){
return (new cljs.core.SeqIter(_seq,_next));
});

cljs.core.seq_iter = (function seq_iter(coll){
return (new cljs.core.SeqIter(cljs.core.INIT,coll));
});
cljs.core.iter = (function iter(coll){
if((coll == null)){
return cljs.core.nil_iter();
} else {
if(typeof coll === 'string'){
return cljs.core.string_iter(coll);
} else {
if(coll instanceof Array){
return cljs.core.array_iter(coll);
} else {
if(cljs.core.iterable_QMARK_(coll)){
return cljs.core._iterator(coll);
} else {
if(cljs.core.seqable_QMARK_(coll)){
return cljs.core.seq_iter(coll);
} else {
throw (new Error([cljs.core.str("Cannot create iterator from "),cljs.core.str(coll)].join('')));

}
}
}
}
}
});
cljs.core.lazy_transformer = (function lazy_transformer(stepper){
return (new cljs.core.LazyTransformer(stepper,null,null,null));
});

/**
* @constructor
*/
cljs.core.Stepper = (function (xform,iter){
this.xform = xform;
this.iter = iter;
})
cljs.core.Stepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__11588__auto__ = !((lt.stepper == null));
if(and__11588__auto__){
return self__.iter.hasNext();
} else {
return and__11588__auto__;
}
})())){
if(cljs.core.reduced_QMARK_((function (){var G__22207 = lt;
var G__22208 = self__.iter.next();
return (self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__22207,G__22208) : self__.xform.call(null,G__22207,G__22208));
})())){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__22209 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__22209) : self__.xform.call(null,G__22209));
}
});

cljs.core.Stepper.cljs$lang$type = true;

cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";

cljs.core.Stepper.cljs$lang$ctorPrWriter = (function (this__12187__auto__,writer__12188__auto__,opt__12189__auto__){
return cljs.core._write(writer__12188__auto__,"cljs.core/Stepper");
});

cljs.core.__GT_Stepper = (function __GT_Stepper(xform,iter){
return (new cljs.core.Stepper(xform,iter));
});

cljs.core.stepper = (function stepper(xform,iter){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return result;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.Stepper((function (){var G__22211 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__22211) : xform.call(null,G__22211));
})(),iter));
});

/**
* @constructor
*/
cljs.core.MultiStepper = (function (xform,iters,nexts){
this.xform = xform;
this.iters = iters;
this.nexts = nexts;
})
cljs.core.MultiStepper.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
var iters__$1 = cljs.core.seq(self__.iters);
while(true){
if(!((iters__$1 == null))){
var iter = cljs.core.first(iters__$1);
if(cljs.core.not(iter.hasNext())){
return false;
} else {
var G__22213 = cljs.core.next(iters__$1);
iters__$1 = G__22213;
continue;
}
} else {
return true;
}
break;
}
});

cljs.core.MultiStepper.prototype.next = (function (){
var self__ = this;
var _ = this;
var n__12487__auto___22214 = self__.iters.length;
var i_22215 = (0);
while(true){
if((i_22215 < n__12487__auto___22214)){
(self__.nexts[i_22215] = (self__.iters[i_22215]).next());

var G__22216 = (i_22215 + (1));
i_22215 = G__22216;
continue;
} else {
}
break;
}

return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts,(0));
});

cljs.core.MultiStepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__11588__auto__ = !((lt.stepper == null));
if(and__11588__auto__){
return this$.hasNext();
} else {
return and__11588__auto__;
}
})())){
if(cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform,cljs.core.cons(lt,this$.next())))){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__22212 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__22212) : self__.xform.call(null,G__22212));
}
});

cljs.core.MultiStepper.cljs$lang$type = true;

cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";

cljs.core.MultiStepper.cljs$lang$ctorPrWriter = (function (this__12187__auto__,writer__12188__auto__,opt__12189__auto__){
return cljs.core._write(writer__12188__auto__,"cljs.core/MultiStepper");
});

cljs.core.__GT_MultiStepper = (function __GT_MultiStepper(xform,iters,nexts){
return (new cljs.core.MultiStepper(xform,iters,nexts));
});

cljs.core.multi_stepper = (function() {
var multi_stepper = null;
var multi_stepper__2 = (function (xform,iters){
return multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length)));
});
var multi_stepper__3 = (function (xform,iters,nexts){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return lt;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.MultiStepper((function (){var G__22221 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__22221) : xform.call(null,G__22221));
})(),iters,nexts));
});
multi_stepper = function(xform,iters,nexts){
switch(arguments.length){
case 2:
return multi_stepper__2.call(this,xform,iters);
case 3:
return multi_stepper__3.call(this,xform,iters,nexts);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
multi_stepper.cljs$core$IFn$_invoke$arity$2 = multi_stepper__2;
multi_stepper.cljs$core$IFn$_invoke$arity$3 = multi_stepper__3;
return multi_stepper;
})()
;

/**
* @constructor
*/
cljs.core.LazyTransformer = (function (stepper,first,rest,meta){
this.stepper = stepper;
this.first = first;
this.rest = rest;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31719628;
})
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return cljs.core._seq(self__.rest);
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return self__.first;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
self__.stepper.step(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return this$__$1;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.hash_ordered_coll(this$__$1);
});

cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this$,other){
var self__ = this;
var this$__$1 = this;
var s = cljs.core._seq(this$__$1);
if(!((s == null))){
return cljs.core.equiv_sequential(this$__$1,other);
} else {
return (cljs.core.sequential_QMARK_(other)) && ((cljs.core.seq(other) == null));
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,cljs.core._seq(this$__$1));
});

cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this$,new_meta){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.LazyTransformer(self__.stepper,self__.first,self__.rest,new_meta));
});

cljs.core.LazyTransformer.cljs$lang$type = true;

cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";

cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = (function (this__12187__auto__,writer__12188__auto__,opt__12189__auto__){
return cljs.core._write(writer__12188__auto__,"cljs.core/LazyTransformer");
});

cljs.core.__GT_LazyTransformer = (function __GT_LazyTransformer(stepper,first,rest,meta){
return (new cljs.core.LazyTransformer(stepper,first,rest,meta));
});

(cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__12578__auto__ = this;
return cljs.core.es6_iterator(this__12578__auto__);
}));
cljs.core.LazyTransformer.create = (function (xform,coll){
return (new cljs.core.LazyTransformer(cljs.core.stepper(xform,cljs.core.iter(coll)),null,null,null));
});
cljs.core.LazyTransformer.createMulti = (function (xform,colls){
var iters = [];
var seq__22222_22226 = cljs.core.seq(colls);
var chunk__22223_22227 = null;
var count__22224_22228 = (0);
var i__22225_22229 = (0);
while(true){
if((i__22225_22229 < count__22224_22228)){
var coll_22230 = chunk__22223_22227.cljs$core$IIndexed$_nth$arity$2(null,i__22225_22229);
iters.push(cljs.core.iter(coll_22230));

var G__22231 = seq__22222_22226;
var G__22232 = chunk__22223_22227;
var G__22233 = count__22224_22228;
var G__22234 = (i__22225_22229 + (1));
seq__22222_22226 = G__22231;
chunk__22223_22227 = G__22232;
count__22224_22228 = G__22233;
i__22225_22229 = G__22234;
continue;
} else {
var temp__4126__auto___22235 = cljs.core.seq(seq__22222_22226);
if(temp__4126__auto___22235){
var seq__22222_22236__$1 = temp__4126__auto___22235;
if(cljs.core.chunked_seq_QMARK_(seq__22222_22236__$1)){
var c__12387__auto___22237 = cljs.core.chunk_first(seq__22222_22236__$1);
var G__22238 = cljs.core.chunk_rest(seq__22222_22236__$1);
var G__22239 = c__12387__auto___22237;
var G__22240 = cljs.core.count(c__12387__auto___22237);
var G__22241 = (0);
seq__22222_22226 = G__22238;
chunk__22223_22227 = G__22239;
count__22224_22228 = G__22240;
i__22225_22229 = G__22241;
continue;
} else {
var coll_22242 = cljs.core.first(seq__22222_22236__$1);
iters.push(cljs.core.iter(coll_22242));

var G__22243 = cljs.core.next(seq__22222_22236__$1);
var G__22244 = null;
var G__22245 = (0);
var G__22246 = (0);
seq__22222_22226 = G__22243;
chunk__22223_22227 = G__22244;
count__22224_22228 = G__22245;
i__22225_22229 = G__22246;
continue;
}
} else {
}
}
break;
}

return (new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length))),null,null,null));
});
/**
* Coerces coll to a (possibly empty) sequence, if it is not already
* one. Will not force a lazy seq. (sequence nil) yields (), When a
* transducer is supplied, returns a lazy sequence of applications of
* the transform to the items in coll(s), i.e. to the set of first
* items of each coll, followed by the set of second
* items in each coll, until any one of the colls is exhausted.  Any
* remaining items in other colls are ignored. The transform should accept
* number-of-colls arguments
* @param {...*} var_args
*/
cljs.core.sequence = (function() {
var sequence = null;
var sequence__1 = (function (coll){
if(cljs.core.seq_QMARK_(coll)){
return coll;
} else {
var or__11600__auto__ = cljs.core.seq(coll);
if(or__11600__auto__){
return or__11600__auto__;
} else {
return cljs.core.List.EMPTY;
}
}
});
var sequence__2 = (function (xform,coll){
return cljs.core.LazyTransformer.create(xform,coll);
});
var sequence__3 = (function() { 
var G__22247__delegate = function (xform,coll,colls){
return cljs.core.LazyTransformer.createMulti(xform,cljs.core.to_array(cljs.core.cons(coll,colls)));
};
var G__22247 = function (xform,coll,var_args){
var colls = null;
if (arguments.length > 2) {
var G__22248__i = 0, G__22248__a = new Array(arguments.length -  2);
while (G__22248__i < G__22248__a.length) {G__22248__a[G__22248__i] = arguments[G__22248__i + 2]; ++G__22248__i;}
  colls = new cljs.core.IndexedSeq(G__22248__a,0);
} 
return G__22247__delegate.call(this,xform,coll,colls);};
G__22247.cljs$lang$maxFixedArity = 2;
G__22247.cljs$lang$applyTo = (function (arglist__22249){
var xform = cljs.core.first(arglist__22249);
arglist__22249 = cljs.core.next(arglist__22249);
var coll = cljs.core.first(arglist__22249);
var colls = cljs.core.rest(arglist__22249);
return G__22247__delegate(xform,coll,colls);
});
G__22247.cljs$core$IFn$_invoke$arity$variadic = G__22247__delegate;
return G__22247;
})()
;
sequence = function(xform,coll,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return sequence__1.call(this,xform);
case 2:
return sequence__2.call(this,xform,coll);
default:
var G__22250 = null;
if (arguments.length > 2) {
var G__22251__i = 0, G__22251__a = new Array(arguments.length -  2);
while (G__22251__i < G__22251__a.length) {G__22251__a[G__22251__i] = arguments[G__22251__i + 2]; ++G__22251__i;}
G__22250 = new cljs.core.IndexedSeq(G__22251__a,0);
}
return sequence__3.cljs$core$IFn$_invoke$arity$variadic(xform,coll, G__22250);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sequence.cljs$lang$maxFixedArity = 2;
sequence.cljs$lang$applyTo = sequence__3.cljs$lang$applyTo;
sequence.cljs$core$IFn$_invoke$arity$1 = sequence__1;
sequence.cljs$core$IFn$_invoke$arity$2 = sequence__2;
sequence.cljs$core$IFn$_invoke$arity$variadic = sequence__3.cljs$core$IFn$_invoke$arity$variadic;
return sequence;
})()
;
/**
* Returns true if (pred x) is logical true for every x in coll, else
* false.
*/
cljs.core.every_QMARK_ = (function every_QMARK_(pred,coll){
while(true){
if((cljs.core.seq(coll) == null)){
return true;
} else {
if(cljs.core.truth_((function (){var G__22253 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__22253) : pred.call(null,G__22253));
})())){
var G__22254 = pred;
var G__22255 = cljs.core.next(coll);
pred = G__22254;
coll = G__22255;
continue;
} else {
return false;

}
}
break;
}
});
/**
* Returns false if (pred x) is logical true for every x in
* coll, else true.
*/
cljs.core.not_every_QMARK_ = (function not_every_QMARK_(pred,coll){
return !(cljs.core.every_QMARK_(pred,coll));
});
/**
* Returns the first logical true value of (pred x) for any x in coll,
* else nil.  One common idiom is to use a set as pred, for example
* this will return :fred if :fred is in the sequence, otherwise nil:
* (some #{:fred} coll)
*/
cljs.core.some = (function some(pred,coll){
while(true){
if(cljs.core.seq(coll)){
var or__11600__auto__ = (function (){var G__22259 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__22259) : pred.call(null,G__22259));
})();
if(cljs.core.truth_(or__11600__auto__)){
return or__11600__auto__;
} else {
var G__22260 = pred;
var G__22261 = cljs.core.next(coll);
pred = G__22260;
coll = G__22261;
continue;
}
} else {
return null;
}
break;
}
});
/**
* Returns false if (pred x) is logical true for any x in coll,
* else true.
*/
cljs.core.not_any_QMARK_ = (function not_any_QMARK_(pred,coll){
return cljs.core.not(cljs.core.some(pred,coll));
});
/**
* Returns true if n is even, throws an exception if n is not an integer
*/
cljs.core.even_QMARK_ = (function even_QMARK_(n){
if(cljs.core.integer_QMARK_(n)){
return ((n & (1)) === (0));
} else {
throw (new Error([cljs.core.str("Argument must be an integer: "),cljs.core.str(n)].join('')));
}
});
/**
* Returns true if n is odd, throws an exception if n is not an integer
*/
cljs.core.odd_QMARK_ = (function odd_QMARK_(n){
return !(cljs.core.even_QMARK_(n));
});
/**
* Takes a fn f and returns a fn that takes the same arguments as f,
* has the same effects, if any, and returns the opposite truth value.
*/
cljs.core.complement = (function complement(f){
return (function() {
var G__22268 = null;
var G__22268__0 = (function (){
return cljs.core.not((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
});
var G__22268__1 = (function (x){
return cljs.core.not((function (){var G__22265 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22265) : f.call(null,G__22265));
})());
});
var G__22268__2 = (function (x,y){
return cljs.core.not((function (){var G__22266 = x;
var G__22267 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22266,G__22267) : f.call(null,G__22266,G__22267));
})());
});
var G__22268__3 = (function() { 
var G__22269__delegate = function (x,y,zs){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f,x,y,zs));
};
var G__22269 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__22270__i = 0, G__22270__a = new Array(arguments.length -  2);
while (G__22270__i < G__22270__a.length) {G__22270__a[G__22270__i] = arguments[G__22270__i + 2]; ++G__22270__i;}
  zs = new cljs.core.IndexedSeq(G__22270__a,0);
} 
return G__22269__delegate.call(this,x,y,zs);};
G__22269.cljs$lang$maxFixedArity = 2;
G__22269.cljs$lang$applyTo = (function (arglist__22271){
var x = cljs.core.first(arglist__22271);
arglist__22271 = cljs.core.next(arglist__22271);
var y = cljs.core.first(arglist__22271);
var zs = cljs.core.rest(arglist__22271);
return G__22269__delegate(x,y,zs);
});
G__22269.cljs$core$IFn$_invoke$arity$variadic = G__22269__delegate;
return G__22269;
})()
;
G__22268 = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return G__22268__0.call(this);
case 1:
return G__22268__1.call(this,x);
case 2:
return G__22268__2.call(this,x,y);
default:
var G__22272 = null;
if (arguments.length > 2) {
var G__22273__i = 0, G__22273__a = new Array(arguments.length -  2);
while (G__22273__i < G__22273__a.length) {G__22273__a[G__22273__i] = arguments[G__22273__i + 2]; ++G__22273__i;}
G__22272 = new cljs.core.IndexedSeq(G__22273__a,0);
}
return G__22268__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__22272);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22268.cljs$lang$maxFixedArity = 2;
G__22268.cljs$lang$applyTo = G__22268__3.cljs$lang$applyTo;
G__22268.cljs$core$IFn$_invoke$arity$0 = G__22268__0;
G__22268.cljs$core$IFn$_invoke$arity$1 = G__22268__1;
G__22268.cljs$core$IFn$_invoke$arity$2 = G__22268__2;
G__22268.cljs$core$IFn$_invoke$arity$variadic = G__22268__3.cljs$core$IFn$_invoke$arity$variadic;
return G__22268;
})()
});
/**
* Returns a function that takes any number of arguments and returns x.
*/
cljs.core.constantly = (function constantly(x){
return (function() { 
var G__22274__delegate = function (args){
return x;
};
var G__22274 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__22275__i = 0, G__22275__a = new Array(arguments.length -  0);
while (G__22275__i < G__22275__a.length) {G__22275__a[G__22275__i] = arguments[G__22275__i + 0]; ++G__22275__i;}
  args = new cljs.core.IndexedSeq(G__22275__a,0);
} 
return G__22274__delegate.call(this,args);};
G__22274.cljs$lang$maxFixedArity = 0;
G__22274.cljs$lang$applyTo = (function (arglist__22276){
var args = cljs.core.seq(arglist__22276);
return G__22274__delegate(args);
});
G__22274.cljs$core$IFn$_invoke$arity$variadic = G__22274__delegate;
return G__22274;
})()
;
});
/**
* Takes a set of functions and returns a fn that is the composition
* of those fns.  The returned fn takes a variable number of args,
* applies the rightmost of fns to the args, the next
* fn (right-to-left) to the result, etc.
* @param {...*} var_args
*/
cljs.core.comp = (function() {
var comp = null;
var comp__0 = (function (){
return cljs.core.identity;
});
var comp__1 = (function (f){
return f;
});
var comp__2 = (function (f,g){
return (function() {
var G__22331 = null;
var G__22331__0 = (function (){
var G__22304 = (function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22304) : f.call(null,G__22304));
});
var G__22331__1 = (function (x){
var G__22305 = (function (){var G__22306 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__22306) : g.call(null,G__22306));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22305) : f.call(null,G__22305));
});
var G__22331__2 = (function (x,y){
var G__22307 = (function (){var G__22308 = x;
var G__22309 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__22308,G__22309) : g.call(null,G__22308,G__22309));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22307) : f.call(null,G__22307));
});
var G__22331__3 = (function (x,y,z){
var G__22310 = (function (){var G__22311 = x;
var G__22312 = y;
var G__22313 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__22311,G__22312,G__22313) : g.call(null,G__22311,G__22312,G__22313));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22310) : f.call(null,G__22310));
});
var G__22331__4 = (function() { 
var G__22332__delegate = function (x,y,z,args){
var G__22314 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22314) : f.call(null,G__22314));
};
var G__22332 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__22333__i = 0, G__22333__a = new Array(arguments.length -  3);
while (G__22333__i < G__22333__a.length) {G__22333__a[G__22333__i] = arguments[G__22333__i + 3]; ++G__22333__i;}
  args = new cljs.core.IndexedSeq(G__22333__a,0);
} 
return G__22332__delegate.call(this,x,y,z,args);};
G__22332.cljs$lang$maxFixedArity = 3;
G__22332.cljs$lang$applyTo = (function (arglist__22334){
var x = cljs.core.first(arglist__22334);
arglist__22334 = cljs.core.next(arglist__22334);
var y = cljs.core.first(arglist__22334);
arglist__22334 = cljs.core.next(arglist__22334);
var z = cljs.core.first(arglist__22334);
var args = cljs.core.rest(arglist__22334);
return G__22332__delegate(x,y,z,args);
});
G__22332.cljs$core$IFn$_invoke$arity$variadic = G__22332__delegate;
return G__22332;
})()
;
G__22331 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__22331__0.call(this);
case 1:
return G__22331__1.call(this,x);
case 2:
return G__22331__2.call(this,x,y);
case 3:
return G__22331__3.call(this,x,y,z);
default:
var G__22335 = null;
if (arguments.length > 3) {
var G__22336__i = 0, G__22336__a = new Array(arguments.length -  3);
while (G__22336__i < G__22336__a.length) {G__22336__a[G__22336__i] = arguments[G__22336__i + 3]; ++G__22336__i;}
G__22335 = new cljs.core.IndexedSeq(G__22336__a,0);
}
return G__22331__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__22335);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22331.cljs$lang$maxFixedArity = 3;
G__22331.cljs$lang$applyTo = G__22331__4.cljs$lang$applyTo;
G__22331.cljs$core$IFn$_invoke$arity$0 = G__22331__0;
G__22331.cljs$core$IFn$_invoke$arity$1 = G__22331__1;
G__22331.cljs$core$IFn$_invoke$arity$2 = G__22331__2;
G__22331.cljs$core$IFn$_invoke$arity$3 = G__22331__3;
G__22331.cljs$core$IFn$_invoke$arity$variadic = G__22331__4.cljs$core$IFn$_invoke$arity$variadic;
return G__22331;
})()
});
var comp__3 = (function (f,g,h){
return (function() {
var G__22337 = null;
var G__22337__0 = (function (){
var G__22315 = (function (){var G__22316 = (function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__22316) : g.call(null,G__22316));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22315) : f.call(null,G__22315));
});
var G__22337__1 = (function (x){
var G__22317 = (function (){var G__22318 = (function (){var G__22319 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__22319) : h.call(null,G__22319));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__22318) : g.call(null,G__22318));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22317) : f.call(null,G__22317));
});
var G__22337__2 = (function (x,y){
var G__22320 = (function (){var G__22321 = (function (){var G__22322 = x;
var G__22323 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__22322,G__22323) : h.call(null,G__22322,G__22323));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__22321) : g.call(null,G__22321));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22320) : f.call(null,G__22320));
});
var G__22337__3 = (function (x,y,z){
var G__22324 = (function (){var G__22325 = (function (){var G__22326 = x;
var G__22327 = y;
var G__22328 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__22326,G__22327,G__22328) : h.call(null,G__22326,G__22327,G__22328));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__22325) : g.call(null,G__22325));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22324) : f.call(null,G__22324));
});
var G__22337__4 = (function() { 
var G__22338__delegate = function (x,y,z,args){
var G__22329 = (function (){var G__22330 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args);
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__22330) : g.call(null,G__22330));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22329) : f.call(null,G__22329));
};
var G__22338 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__22339__i = 0, G__22339__a = new Array(arguments.length -  3);
while (G__22339__i < G__22339__a.length) {G__22339__a[G__22339__i] = arguments[G__22339__i + 3]; ++G__22339__i;}
  args = new cljs.core.IndexedSeq(G__22339__a,0);
} 
return G__22338__delegate.call(this,x,y,z,args);};
G__22338.cljs$lang$maxFixedArity = 3;
G__22338.cljs$lang$applyTo = (function (arglist__22340){
var x = cljs.core.first(arglist__22340);
arglist__22340 = cljs.core.next(arglist__22340);
var y = cljs.core.first(arglist__22340);
arglist__22340 = cljs.core.next(arglist__22340);
var z = cljs.core.first(arglist__22340);
var args = cljs.core.rest(arglist__22340);
return G__22338__delegate(x,y,z,args);
});
G__22338.cljs$core$IFn$_invoke$arity$variadic = G__22338__delegate;
return G__22338;
})()
;
G__22337 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__22337__0.call(this);
case 1:
return G__22337__1.call(this,x);
case 2:
return G__22337__2.call(this,x,y);
case 3:
return G__22337__3.call(this,x,y,z);
default:
var G__22341 = null;
if (arguments.length > 3) {
var G__22342__i = 0, G__22342__a = new Array(arguments.length -  3);
while (G__22342__i < G__22342__a.length) {G__22342__a[G__22342__i] = arguments[G__22342__i + 3]; ++G__22342__i;}
G__22341 = new cljs.core.IndexedSeq(G__22342__a,0);
}
return G__22337__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__22341);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22337.cljs$lang$maxFixedArity = 3;
G__22337.cljs$lang$applyTo = G__22337__4.cljs$lang$applyTo;
G__22337.cljs$core$IFn$_invoke$arity$0 = G__22337__0;
G__22337.cljs$core$IFn$_invoke$arity$1 = G__22337__1;
G__22337.cljs$core$IFn$_invoke$arity$2 = G__22337__2;
G__22337.cljs$core$IFn$_invoke$arity$3 = G__22337__3;
G__22337.cljs$core$IFn$_invoke$arity$variadic = G__22337__4.cljs$core$IFn$_invoke$arity$variadic;
return G__22337;
})()
});
var comp__4 = (function() { 
var G__22343__delegate = function (f1,f2,f3,fs){
var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1,f2,f3,fs));
return ((function (fs__$1){
return (function() { 
var G__22344__delegate = function (args){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1),args);
var fs__$2 = cljs.core.next(fs__$1);
while(true){
if(fs__$2){
var G__22345 = cljs.core.first(fs__$2).call(null,ret);
var G__22346 = cljs.core.next(fs__$2);
ret = G__22345;
fs__$2 = G__22346;
continue;
} else {
return ret;
}
break;
}
};
var G__22344 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__22347__i = 0, G__22347__a = new Array(arguments.length -  0);
while (G__22347__i < G__22347__a.length) {G__22347__a[G__22347__i] = arguments[G__22347__i + 0]; ++G__22347__i;}
  args = new cljs.core.IndexedSeq(G__22347__a,0);
} 
return G__22344__delegate.call(this,args);};
G__22344.cljs$lang$maxFixedArity = 0;
G__22344.cljs$lang$applyTo = (function (arglist__22348){
var args = cljs.core.seq(arglist__22348);
return G__22344__delegate(args);
});
G__22344.cljs$core$IFn$_invoke$arity$variadic = G__22344__delegate;
return G__22344;
})()
;
;})(fs__$1))
};
var G__22343 = function (f1,f2,f3,var_args){
var fs = null;
if (arguments.length > 3) {
var G__22349__i = 0, G__22349__a = new Array(arguments.length -  3);
while (G__22349__i < G__22349__a.length) {G__22349__a[G__22349__i] = arguments[G__22349__i + 3]; ++G__22349__i;}
  fs = new cljs.core.IndexedSeq(G__22349__a,0);
} 
return G__22343__delegate.call(this,f1,f2,f3,fs);};
G__22343.cljs$lang$maxFixedArity = 3;
G__22343.cljs$lang$applyTo = (function (arglist__22350){
var f1 = cljs.core.first(arglist__22350);
arglist__22350 = cljs.core.next(arglist__22350);
var f2 = cljs.core.first(arglist__22350);
arglist__22350 = cljs.core.next(arglist__22350);
var f3 = cljs.core.first(arglist__22350);
var fs = cljs.core.rest(arglist__22350);
return G__22343__delegate(f1,f2,f3,fs);
});
G__22343.cljs$core$IFn$_invoke$arity$variadic = G__22343__delegate;
return G__22343;
})()
;
comp = function(f1,f2,f3,var_args){
var fs = var_args;
switch(arguments.length){
case 0:
return comp__0.call(this);
case 1:
return comp__1.call(this,f1);
case 2:
return comp__2.call(this,f1,f2);
case 3:
return comp__3.call(this,f1,f2,f3);
default:
var G__22351 = null;
if (arguments.length > 3) {
var G__22352__i = 0, G__22352__a = new Array(arguments.length -  3);
while (G__22352__i < G__22352__a.length) {G__22352__a[G__22352__i] = arguments[G__22352__i + 3]; ++G__22352__i;}
G__22351 = new cljs.core.IndexedSeq(G__22352__a,0);
}
return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1,f2,f3, G__22351);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
comp.cljs$lang$maxFixedArity = 3;
comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
return comp;
})()
;
/**
* Takes a function f and fewer than the normal arguments to f, and
* returns a fn that takes a variable number of additional args. When
* called, the returned function calls f with args + additional args.
* @param {...*} var_args
*/
cljs.core.partial = (function() {
var partial = null;
var partial__1 = (function (f){
return f;
});
var partial__2 = (function (f,arg1){
return (function() {
var G__22437 = null;
var G__22437__0 = (function (){
var G__22395 = arg1;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22395) : f.call(null,G__22395));
});
var G__22437__1 = (function (x){
var G__22396 = arg1;
var G__22397 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22396,G__22397) : f.call(null,G__22396,G__22397));
});
var G__22437__2 = (function (x,y){
var G__22398 = arg1;
var G__22399 = x;
var G__22400 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__22398,G__22399,G__22400) : f.call(null,G__22398,G__22399,G__22400));
});
var G__22437__3 = (function (x,y,z){
var G__22401 = arg1;
var G__22402 = x;
var G__22403 = y;
var G__22404 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__22401,G__22402,G__22403,G__22404) : f.call(null,G__22401,G__22402,G__22403,G__22404));
});
var G__22437__4 = (function() { 
var G__22438__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,x,y,z,cljs.core.array_seq([args], 0));
};
var G__22438 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__22439__i = 0, G__22439__a = new Array(arguments.length -  3);
while (G__22439__i < G__22439__a.length) {G__22439__a[G__22439__i] = arguments[G__22439__i + 3]; ++G__22439__i;}
  args = new cljs.core.IndexedSeq(G__22439__a,0);
} 
return G__22438__delegate.call(this,x,y,z,args);};
G__22438.cljs$lang$maxFixedArity = 3;
G__22438.cljs$lang$applyTo = (function (arglist__22440){
var x = cljs.core.first(arglist__22440);
arglist__22440 = cljs.core.next(arglist__22440);
var y = cljs.core.first(arglist__22440);
arglist__22440 = cljs.core.next(arglist__22440);
var z = cljs.core.first(arglist__22440);
var args = cljs.core.rest(arglist__22440);
return G__22438__delegate(x,y,z,args);
});
G__22438.cljs$core$IFn$_invoke$arity$variadic = G__22438__delegate;
return G__22438;
})()
;
G__22437 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__22437__0.call(this);
case 1:
return G__22437__1.call(this,x);
case 2:
return G__22437__2.call(this,x,y);
case 3:
return G__22437__3.call(this,x,y,z);
default:
var G__22441 = null;
if (arguments.length > 3) {
var G__22442__i = 0, G__22442__a = new Array(arguments.length -  3);
while (G__22442__i < G__22442__a.length) {G__22442__a[G__22442__i] = arguments[G__22442__i + 3]; ++G__22442__i;}
G__22441 = new cljs.core.IndexedSeq(G__22442__a,0);
}
return G__22437__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__22441);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22437.cljs$lang$maxFixedArity = 3;
G__22437.cljs$lang$applyTo = G__22437__4.cljs$lang$applyTo;
G__22437.cljs$core$IFn$_invoke$arity$0 = G__22437__0;
G__22437.cljs$core$IFn$_invoke$arity$1 = G__22437__1;
G__22437.cljs$core$IFn$_invoke$arity$2 = G__22437__2;
G__22437.cljs$core$IFn$_invoke$arity$3 = G__22437__3;
G__22437.cljs$core$IFn$_invoke$arity$variadic = G__22437__4.cljs$core$IFn$_invoke$arity$variadic;
return G__22437;
})()
});
var partial__3 = (function (f,arg1,arg2){
return (function() {
var G__22443 = null;
var G__22443__0 = (function (){
var G__22405 = arg1;
var G__22406 = arg2;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22405,G__22406) : f.call(null,G__22405,G__22406));
});
var G__22443__1 = (function (x){
var G__22407 = arg1;
var G__22408 = arg2;
var G__22409 = x;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__22407,G__22408,G__22409) : f.call(null,G__22407,G__22408,G__22409));
});
var G__22443__2 = (function (x,y){
var G__22410 = arg1;
var G__22411 = arg2;
var G__22412 = x;
var G__22413 = y;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__22410,G__22411,G__22412,G__22413) : f.call(null,G__22410,G__22411,G__22412,G__22413));
});
var G__22443__3 = (function (x,y,z){
var G__22414 = arg1;
var G__22415 = arg2;
var G__22416 = x;
var G__22417 = y;
var G__22418 = z;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__22414,G__22415,G__22416,G__22417,G__22418) : f.call(null,G__22414,G__22415,G__22416,G__22417,G__22418));
});
var G__22443__4 = (function() { 
var G__22444__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,x,y,cljs.core.array_seq([z,args], 0));
};
var G__22444 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__22445__i = 0, G__22445__a = new Array(arguments.length -  3);
while (G__22445__i < G__22445__a.length) {G__22445__a[G__22445__i] = arguments[G__22445__i + 3]; ++G__22445__i;}
  args = new cljs.core.IndexedSeq(G__22445__a,0);
} 
return G__22444__delegate.call(this,x,y,z,args);};
G__22444.cljs$lang$maxFixedArity = 3;
G__22444.cljs$lang$applyTo = (function (arglist__22446){
var x = cljs.core.first(arglist__22446);
arglist__22446 = cljs.core.next(arglist__22446);
var y = cljs.core.first(arglist__22446);
arglist__22446 = cljs.core.next(arglist__22446);
var z = cljs.core.first(arglist__22446);
var args = cljs.core.rest(arglist__22446);
return G__22444__delegate(x,y,z,args);
});
G__22444.cljs$core$IFn$_invoke$arity$variadic = G__22444__delegate;
return G__22444;
})()
;
G__22443 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__22443__0.call(this);
case 1:
return G__22443__1.call(this,x);
case 2:
return G__22443__2.call(this,x,y);
case 3:
return G__22443__3.call(this,x,y,z);
default:
var G__22447 = null;
if (arguments.length > 3) {
var G__22448__i = 0, G__22448__a = new Array(arguments.length -  3);
while (G__22448__i < G__22448__a.length) {G__22448__a[G__22448__i] = arguments[G__22448__i + 3]; ++G__22448__i;}
G__22447 = new cljs.core.IndexedSeq(G__22448__a,0);
}
return G__22443__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__22447);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22443.cljs$lang$maxFixedArity = 3;
G__22443.cljs$lang$applyTo = G__22443__4.cljs$lang$applyTo;
G__22443.cljs$core$IFn$_invoke$arity$0 = G__22443__0;
G__22443.cljs$core$IFn$_invoke$arity$1 = G__22443__1;
G__22443.cljs$core$IFn$_invoke$arity$2 = G__22443__2;
G__22443.cljs$core$IFn$_invoke$arity$3 = G__22443__3;
G__22443.cljs$core$IFn$_invoke$arity$variadic = G__22443__4.cljs$core$IFn$_invoke$arity$variadic;
return G__22443;
})()
});
var partial__4 = (function (f,arg1,arg2,arg3){
return (function() {
var G__22449 = null;
var G__22449__0 = (function (){
var G__22419 = arg1;
var G__22420 = arg2;
var G__22421 = arg3;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__22419,G__22420,G__22421) : f.call(null,G__22419,G__22420,G__22421));
});
var G__22449__1 = (function (x){
var G__22422 = arg1;
var G__22423 = arg2;
var G__22424 = arg3;
var G__22425 = x;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__22422,G__22423,G__22424,G__22425) : f.call(null,G__22422,G__22423,G__22424,G__22425));
});
var G__22449__2 = (function (x,y){
var G__22426 = arg1;
var G__22427 = arg2;
var G__22428 = arg3;
var G__22429 = x;
var G__22430 = y;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__22426,G__22427,G__22428,G__22429,G__22430) : f.call(null,G__22426,G__22427,G__22428,G__22429,G__22430));
});
var G__22449__3 = (function (x,y,z){
var G__22431 = arg1;
var G__22432 = arg2;
var G__22433 = arg3;
var G__22434 = x;
var G__22435 = y;
var G__22436 = z;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__22431,G__22432,G__22433,G__22434,G__22435,G__22436) : f.call(null,G__22431,G__22432,G__22433,G__22434,G__22435,G__22436));
});
var G__22449__4 = (function() { 
var G__22450__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3,x,cljs.core.array_seq([y,z,args], 0));
};
var G__22450 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__22451__i = 0, G__22451__a = new Array(arguments.length -  3);
while (G__22451__i < G__22451__a.length) {G__22451__a[G__22451__i] = arguments[G__22451__i + 3]; ++G__22451__i;}
  args = new cljs.core.IndexedSeq(G__22451__a,0);
} 
return G__22450__delegate.call(this,x,y,z,args);};
G__22450.cljs$lang$maxFixedArity = 3;
G__22450.cljs$lang$applyTo = (function (arglist__22452){
var x = cljs.core.first(arglist__22452);
arglist__22452 = cljs.core.next(arglist__22452);
var y = cljs.core.first(arglist__22452);
arglist__22452 = cljs.core.next(arglist__22452);
var z = cljs.core.first(arglist__22452);
var args = cljs.core.rest(arglist__22452);
return G__22450__delegate(x,y,z,args);
});
G__22450.cljs$core$IFn$_invoke$arity$variadic = G__22450__delegate;
return G__22450;
})()
;
G__22449 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__22449__0.call(this);
case 1:
return G__22449__1.call(this,x);
case 2:
return G__22449__2.call(this,x,y);
case 3:
return G__22449__3.call(this,x,y,z);
default:
var G__22453 = null;
if (arguments.length > 3) {
var G__22454__i = 0, G__22454__a = new Array(arguments.length -  3);
while (G__22454__i < G__22454__a.length) {G__22454__a[G__22454__i] = arguments[G__22454__i + 3]; ++G__22454__i;}
G__22453 = new cljs.core.IndexedSeq(G__22454__a,0);
}
return G__22449__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__22453);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22449.cljs$lang$maxFixedArity = 3;
G__22449.cljs$lang$applyTo = G__22449__4.cljs$lang$applyTo;
G__22449.cljs$core$IFn$_invoke$arity$0 = G__22449__0;
G__22449.cljs$core$IFn$_invoke$arity$1 = G__22449__1;
G__22449.cljs$core$IFn$_invoke$arity$2 = G__22449__2;
G__22449.cljs$core$IFn$_invoke$arity$3 = G__22449__3;
G__22449.cljs$core$IFn$_invoke$arity$variadic = G__22449__4.cljs$core$IFn$_invoke$arity$variadic;
return G__22449;
})()
});
var partial__5 = (function() { 
var G__22455__delegate = function (f,arg1,arg2,arg3,more){
return (function() { 
var G__22456__delegate = function (args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,arg1,arg2,arg3,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more,args));
};
var G__22456 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__22457__i = 0, G__22457__a = new Array(arguments.length -  0);
while (G__22457__i < G__22457__a.length) {G__22457__a[G__22457__i] = arguments[G__22457__i + 0]; ++G__22457__i;}
  args = new cljs.core.IndexedSeq(G__22457__a,0);
} 
return G__22456__delegate.call(this,args);};
G__22456.cljs$lang$maxFixedArity = 0;
G__22456.cljs$lang$applyTo = (function (arglist__22458){
var args = cljs.core.seq(arglist__22458);
return G__22456__delegate(args);
});
G__22456.cljs$core$IFn$_invoke$arity$variadic = G__22456__delegate;
return G__22456;
})()
;
};
var G__22455 = function (f,arg1,arg2,arg3,var_args){
var more = null;
if (arguments.length > 4) {
var G__22459__i = 0, G__22459__a = new Array(arguments.length -  4);
while (G__22459__i < G__22459__a.length) {G__22459__a[G__22459__i] = arguments[G__22459__i + 4]; ++G__22459__i;}
  more = new cljs.core.IndexedSeq(G__22459__a,0);
} 
return G__22455__delegate.call(this,f,arg1,arg2,arg3,more);};
G__22455.cljs$lang$maxFixedArity = 4;
G__22455.cljs$lang$applyTo = (function (arglist__22460){
var f = cljs.core.first(arglist__22460);
arglist__22460 = cljs.core.next(arglist__22460);
var arg1 = cljs.core.first(arglist__22460);
arglist__22460 = cljs.core.next(arglist__22460);
var arg2 = cljs.core.first(arglist__22460);
arglist__22460 = cljs.core.next(arglist__22460);
var arg3 = cljs.core.first(arglist__22460);
var more = cljs.core.rest(arglist__22460);
return G__22455__delegate(f,arg1,arg2,arg3,more);
});
G__22455.cljs$core$IFn$_invoke$arity$variadic = G__22455__delegate;
return G__22455;
})()
;
partial = function(f,arg1,arg2,arg3,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return partial__1.call(this,f);
case 2:
return partial__2.call(this,f,arg1);
case 3:
return partial__3.call(this,f,arg1,arg2);
case 4:
return partial__4.call(this,f,arg1,arg2,arg3);
default:
var G__22461 = null;
if (arguments.length > 4) {
var G__22462__i = 0, G__22462__a = new Array(arguments.length -  4);
while (G__22462__i < G__22462__a.length) {G__22462__a[G__22462__i] = arguments[G__22462__i + 4]; ++G__22462__i;}
G__22461 = new cljs.core.IndexedSeq(G__22462__a,0);
}
return partial__5.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3, G__22461);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partial.cljs$lang$maxFixedArity = 4;
partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
partial.cljs$core$IFn$_invoke$arity$1 = partial__1;
partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
return partial;
})()
;
/**
* Takes a function f, and returns a function that calls f, replacing
* a nil first argument to f with the supplied value x. Higher arity
* versions can replace arguments in the second and third
* positions (y, z). Note that the function f can take any number of
* arguments, not just the one(s) being nil-patched.
*/
cljs.core.fnil = (function() {
var fnil = null;
var fnil__2 = (function (f,x){
return (function() {
var G__22495 = null;
var G__22495__1 = (function (a){
var G__22479 = (((a == null))?x:a);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22479) : f.call(null,G__22479));
});
var G__22495__2 = (function (a,b){
var G__22480 = (((a == null))?x:a);
var G__22481 = b;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22480,G__22481) : f.call(null,G__22480,G__22481));
});
var G__22495__3 = (function (a,b,c){
var G__22482 = (((a == null))?x:a);
var G__22483 = b;
var G__22484 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__22482,G__22483,G__22484) : f.call(null,G__22482,G__22483,G__22484));
});
var G__22495__4 = (function() { 
var G__22496__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),b,c,ds);
};
var G__22496 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__22497__i = 0, G__22497__a = new Array(arguments.length -  3);
while (G__22497__i < G__22497__a.length) {G__22497__a[G__22497__i] = arguments[G__22497__i + 3]; ++G__22497__i;}
  ds = new cljs.core.IndexedSeq(G__22497__a,0);
} 
return G__22496__delegate.call(this,a,b,c,ds);};
G__22496.cljs$lang$maxFixedArity = 3;
G__22496.cljs$lang$applyTo = (function (arglist__22498){
var a = cljs.core.first(arglist__22498);
arglist__22498 = cljs.core.next(arglist__22498);
var b = cljs.core.first(arglist__22498);
arglist__22498 = cljs.core.next(arglist__22498);
var c = cljs.core.first(arglist__22498);
var ds = cljs.core.rest(arglist__22498);
return G__22496__delegate(a,b,c,ds);
});
G__22496.cljs$core$IFn$_invoke$arity$variadic = G__22496__delegate;
return G__22496;
})()
;
G__22495 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 1:
return G__22495__1.call(this,a);
case 2:
return G__22495__2.call(this,a,b);
case 3:
return G__22495__3.call(this,a,b,c);
default:
var G__22499 = null;
if (arguments.length > 3) {
var G__22500__i = 0, G__22500__a = new Array(arguments.length -  3);
while (G__22500__i < G__22500__a.length) {G__22500__a[G__22500__i] = arguments[G__22500__i + 3]; ++G__22500__i;}
G__22499 = new cljs.core.IndexedSeq(G__22500__a,0);
}
return G__22495__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__22499);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22495.cljs$lang$maxFixedArity = 3;
G__22495.cljs$lang$applyTo = G__22495__4.cljs$lang$applyTo;
G__22495.cljs$core$IFn$_invoke$arity$1 = G__22495__1;
G__22495.cljs$core$IFn$_invoke$arity$2 = G__22495__2;
G__22495.cljs$core$IFn$_invoke$arity$3 = G__22495__3;
G__22495.cljs$core$IFn$_invoke$arity$variadic = G__22495__4.cljs$core$IFn$_invoke$arity$variadic;
return G__22495;
})()
});
var fnil__3 = (function (f,x,y){
return (function() {
var G__22501 = null;
var G__22501__2 = (function (a,b){
var G__22485 = (((a == null))?x:a);
var G__22486 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22485,G__22486) : f.call(null,G__22485,G__22486));
});
var G__22501__3 = (function (a,b,c){
var G__22487 = (((a == null))?x:a);
var G__22488 = (((b == null))?y:b);
var G__22489 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__22487,G__22488,G__22489) : f.call(null,G__22487,G__22488,G__22489));
});
var G__22501__4 = (function() { 
var G__22502__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),c,ds);
};
var G__22502 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__22503__i = 0, G__22503__a = new Array(arguments.length -  3);
while (G__22503__i < G__22503__a.length) {G__22503__a[G__22503__i] = arguments[G__22503__i + 3]; ++G__22503__i;}
  ds = new cljs.core.IndexedSeq(G__22503__a,0);
} 
return G__22502__delegate.call(this,a,b,c,ds);};
G__22502.cljs$lang$maxFixedArity = 3;
G__22502.cljs$lang$applyTo = (function (arglist__22504){
var a = cljs.core.first(arglist__22504);
arglist__22504 = cljs.core.next(arglist__22504);
var b = cljs.core.first(arglist__22504);
arglist__22504 = cljs.core.next(arglist__22504);
var c = cljs.core.first(arglist__22504);
var ds = cljs.core.rest(arglist__22504);
return G__22502__delegate(a,b,c,ds);
});
G__22502.cljs$core$IFn$_invoke$arity$variadic = G__22502__delegate;
return G__22502;
})()
;
G__22501 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__22501__2.call(this,a,b);
case 3:
return G__22501__3.call(this,a,b,c);
default:
var G__22505 = null;
if (arguments.length > 3) {
var G__22506__i = 0, G__22506__a = new Array(arguments.length -  3);
while (G__22506__i < G__22506__a.length) {G__22506__a[G__22506__i] = arguments[G__22506__i + 3]; ++G__22506__i;}
G__22505 = new cljs.core.IndexedSeq(G__22506__a,0);
}
return G__22501__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__22505);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22501.cljs$lang$maxFixedArity = 3;
G__22501.cljs$lang$applyTo = G__22501__4.cljs$lang$applyTo;
G__22501.cljs$core$IFn$_invoke$arity$2 = G__22501__2;
G__22501.cljs$core$IFn$_invoke$arity$3 = G__22501__3;
G__22501.cljs$core$IFn$_invoke$arity$variadic = G__22501__4.cljs$core$IFn$_invoke$arity$variadic;
return G__22501;
})()
});
var fnil__4 = (function (f,x,y,z){
return (function() {
var G__22507 = null;
var G__22507__2 = (function (a,b){
var G__22490 = (((a == null))?x:a);
var G__22491 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22490,G__22491) : f.call(null,G__22490,G__22491));
});
var G__22507__3 = (function (a,b,c){
var G__22492 = (((a == null))?x:a);
var G__22493 = (((b == null))?y:b);
var G__22494 = (((c == null))?z:c);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__22492,G__22493,G__22494) : f.call(null,G__22492,G__22493,G__22494));
});
var G__22507__4 = (function() { 
var G__22508__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),(((c == null))?z:c),ds);
};
var G__22508 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__22509__i = 0, G__22509__a = new Array(arguments.length -  3);
while (G__22509__i < G__22509__a.length) {G__22509__a[G__22509__i] = arguments[G__22509__i + 3]; ++G__22509__i;}
  ds = new cljs.core.IndexedSeq(G__22509__a,0);
} 
return G__22508__delegate.call(this,a,b,c,ds);};
G__22508.cljs$lang$maxFixedArity = 3;
G__22508.cljs$lang$applyTo = (function (arglist__22510){
var a = cljs.core.first(arglist__22510);
arglist__22510 = cljs.core.next(arglist__22510);
var b = cljs.core.first(arglist__22510);
arglist__22510 = cljs.core.next(arglist__22510);
var c = cljs.core.first(arglist__22510);
var ds = cljs.core.rest(arglist__22510);
return G__22508__delegate(a,b,c,ds);
});
G__22508.cljs$core$IFn$_invoke$arity$variadic = G__22508__delegate;
return G__22508;
})()
;
G__22507 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__22507__2.call(this,a,b);
case 3:
return G__22507__3.call(this,a,b,c);
default:
var G__22511 = null;
if (arguments.length > 3) {
var G__22512__i = 0, G__22512__a = new Array(arguments.length -  3);
while (G__22512__i < G__22512__a.length) {G__22512__a[G__22512__i] = arguments[G__22512__i + 3]; ++G__22512__i;}
G__22511 = new cljs.core.IndexedSeq(G__22512__a,0);
}
return G__22507__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__22511);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22507.cljs$lang$maxFixedArity = 3;
G__22507.cljs$lang$applyTo = G__22507__4.cljs$lang$applyTo;
G__22507.cljs$core$IFn$_invoke$arity$2 = G__22507__2;
G__22507.cljs$core$IFn$_invoke$arity$3 = G__22507__3;
G__22507.cljs$core$IFn$_invoke$arity$variadic = G__22507__4.cljs$core$IFn$_invoke$arity$variadic;
return G__22507;
})()
});
fnil = function(f,x,y,z){
switch(arguments.length){
case 2:
return fnil__2.call(this,f,x);
case 3:
return fnil__3.call(this,f,x,y);
case 4:
return fnil__4.call(this,f,x,y,z);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
return fnil;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to 0
* and the first item of coll, followed by applying f to 1 and the second
* item in coll, etc, until coll is exhausted. Thus function f should
* accept 2 arguments, index and item.
*/
cljs.core.map_indexed = (function() {
var map_indexed = null;
var map_indexed__1 = (function (f){
return (function (rf){
var i = (function (){var G__22543 = (-1);
return (cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1 ? cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1(G__22543) : cljs.core.volatile_BANG_.call(null,G__22543));
})();
return ((function (i){
return (function() {
var G__22573 = null;
var G__22573__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__22573__1 = (function (result){
var G__22544 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__22544) : rf.call(null,G__22544));
});
var G__22573__2 = (function (result,input){
var G__22545 = result;
var G__22546 = (function (){var G__22547 = cljs.core._vreset_BANG_(i,(cljs.core._deref(i) + (1)));
var G__22548 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22547,G__22548) : f.call(null,G__22547,G__22548));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__22545,G__22546) : rf.call(null,G__22545,G__22546));
});
G__22573 = function(result,input){
switch(arguments.length){
case 0:
return G__22573__0.call(this);
case 1:
return G__22573__1.call(this,result);
case 2:
return G__22573__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22573.cljs$core$IFn$_invoke$arity$0 = G__22573__0;
G__22573.cljs$core$IFn$_invoke$arity$1 = G__22573__1;
G__22573.cljs$core$IFn$_invoke$arity$2 = G__22573__2;
return G__22573;
})()
;})(i))
});
});
var map_indexed__2 = (function (f,coll){
var mapi = (function mapi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__12487__auto___22574 = size;
var i_22575 = (0);
while(true){
if((i_22575 < n__12487__auto___22574)){
cljs.core.chunk_append(b,(function (){var G__22569 = (idx + i_22575);
var G__22570 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_22575);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22569,G__22570) : f.call(null,G__22569,G__22570));
})());

var G__22576 = (i_22575 + (1));
i_22575 = G__22576;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),mapi((idx + size),cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__22571 = idx;
var G__22572 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22571,G__22572) : f.call(null,G__22571,G__22572));
})(),mapi((idx + (1)),cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
return mapi((0),coll);
});
map_indexed = function(f,coll){
switch(arguments.length){
case 1:
return map_indexed__1.call(this,f);
case 2:
return map_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map_indexed.cljs$core$IFn$_invoke$arity$1 = map_indexed__1;
map_indexed.cljs$core$IFn$_invoke$arity$2 = map_indexed__2;
return map_indexed;
})()
;
/**
* Returns a lazy sequence of the non-nil results of (f item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a transducer when no collection is provided.
*/
cljs.core.keep = (function() {
var keep = null;
var keep__1 = (function (f){
return (function (rf){
return (function() {
var G__22595 = null;
var G__22595__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__22595__1 = (function (result){
var G__22589 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__22589) : rf.call(null,G__22589));
});
var G__22595__2 = (function (result,input){
var v = (function (){var G__22590 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22590) : f.call(null,G__22590));
})();
if((v == null)){
return result;
} else {
var G__22591 = result;
var G__22592 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__22591,G__22592) : rf.call(null,G__22591,G__22592));
}
});
G__22595 = function(result,input){
switch(arguments.length){
case 0:
return G__22595__0.call(this);
case 1:
return G__22595__1.call(this,result);
case 2:
return G__22595__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22595.cljs$core$IFn$_invoke$arity$0 = G__22595__0;
G__22595.cljs$core$IFn$_invoke$arity$1 = G__22595__1;
G__22595.cljs$core$IFn$_invoke$arity$2 = G__22595__2;
return G__22595;
})()
});
});
var keep__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__12487__auto___22596 = size;
var i_22597 = (0);
while(true){
if((i_22597 < n__12487__auto___22596)){
var x_22598 = (function (){var G__22593 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_22597);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22593) : f.call(null,G__22593));
})();
if((x_22598 == null)){
} else {
cljs.core.chunk_append(b,x_22598);
}

var G__22599 = (i_22597 + (1));
i_22597 = G__22599;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__22594 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22594) : f.call(null,G__22594));
})();
if((x == null)){
return keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s));
} else {
return cljs.core.cons(x,keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
keep = function(f,coll){
switch(arguments.length){
case 1:
return keep__1.call(this,f);
case 2:
return keep__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep.cljs$core$IFn$_invoke$arity$1 = keep__1;
keep.cljs$core$IFn$_invoke$arity$2 = keep__2;
return keep;
})()
;

/**
* @constructor
*/
cljs.core.Atom = (function (state,meta,validator,watches){
this.state = state;
this.meta = meta;
this.validator = validator;
this.watches = watches;
this.cljs$lang$protocol_mask$partition0$ = 6455296;
this.cljs$lang$protocol_mask$partition1$ = 16386;
})
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__22600 = this$__$1;
return goog.getUid(G__22600);
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,oldval,newval){
var self__ = this;
var this$__$1 = this;
var seq__22601 = cljs.core.seq(self__.watches);
var chunk__22602 = null;
var count__22603 = (0);
var i__22604 = (0);
while(true){
if((i__22604 < count__22603)){
var vec__22605 = chunk__22602.cljs$core$IIndexed$_nth$arity$2(null,i__22604);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22605,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22605,(1),null);
var G__22606_22615 = key;
var G__22607_22616 = this$__$1;
var G__22608_22617 = oldval;
var G__22609_22618 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__22606_22615,G__22607_22616,G__22608_22617,G__22609_22618) : f.call(null,G__22606_22615,G__22607_22616,G__22608_22617,G__22609_22618));

var G__22619 = seq__22601;
var G__22620 = chunk__22602;
var G__22621 = count__22603;
var G__22622 = (i__22604 + (1));
seq__22601 = G__22619;
chunk__22602 = G__22620;
count__22603 = G__22621;
i__22604 = G__22622;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__22601);
if(temp__4126__auto__){
var seq__22601__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__22601__$1)){
var c__12387__auto__ = cljs.core.chunk_first(seq__22601__$1);
var G__22623 = cljs.core.chunk_rest(seq__22601__$1);
var G__22624 = c__12387__auto__;
var G__22625 = cljs.core.count(c__12387__auto__);
var G__22626 = (0);
seq__22601 = G__22623;
chunk__22602 = G__22624;
count__22603 = G__22625;
i__22604 = G__22626;
continue;
} else {
var vec__22610 = cljs.core.first(seq__22601__$1);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22610,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22610,(1),null);
var G__22611_22627 = key;
var G__22612_22628 = this$__$1;
var G__22613_22629 = oldval;
var G__22614_22630 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__22611_22627,G__22612_22628,G__22613_22629,G__22614_22630) : f.call(null,G__22611_22627,G__22612_22628,G__22613_22629,G__22614_22630));

var G__22631 = cljs.core.next(seq__22601__$1);
var G__22632 = null;
var G__22633 = (0);
var G__22634 = (0);
seq__22601 = G__22631;
chunk__22602 = G__22632;
count__22603 = G__22633;
i__22604 = G__22634;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){
var self__ = this;
var this$__$1 = this;
this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches,key,f);

return this$__$1;
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){
var self__ = this;
var this$__$1 = this;
return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches,key);
});

cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return (o__$1 === other);
});

cljs.core.Atom.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Atom.cljs$lang$type = true;

cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";

cljs.core.Atom.cljs$lang$ctorPrWriter = (function (this__12187__auto__,writer__12188__auto__,opt__12189__auto__){
return cljs.core._write(writer__12188__auto__,"cljs.core/Atom");
});

cljs.core.__GT_Atom = (function __GT_Atom(state,meta,validator,watches){
return (new cljs.core.Atom(state,meta,validator,watches));
});

/**
* Creates and returns an Atom with an initial value of x and zero or
* more options (in any order):
* 
* :meta metadata-map
* 
* :validator validate-fn
* 
* If metadata-map is supplied, it will be come the metadata on the
* atom. validate-fn must be nil or a side-effect-free fn of one
* argument, which will be passed the intended new state on any state
* change. If the new state is unacceptable, the validate-fn should
* return false or throw an Error.  If either of these error conditions
* occur, then the value of the atom will not change.
* @param {...*} var_args
*/
cljs.core.atom = (function() {
var atom = null;
var atom__1 = (function (x){
return (new cljs.core.Atom(x,null,null,null));
});
var atom__2 = (function() { 
var G__22638__delegate = function (x,p__22635){
var map__22637 = p__22635;
var map__22637__$1 = ((cljs.core.seq_QMARK_(map__22637))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__22637):map__22637);
var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22637__$1,new cljs.core.Keyword(null,"validator","validator",-1966190681));
var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22637__$1,new cljs.core.Keyword(null,"meta","meta",1499536964));
return (new cljs.core.Atom(x,meta,validator,null));
};
var G__22638 = function (x,var_args){
var p__22635 = null;
if (arguments.length > 1) {
var G__22639__i = 0, G__22639__a = new Array(arguments.length -  1);
while (G__22639__i < G__22639__a.length) {G__22639__a[G__22639__i] = arguments[G__22639__i + 1]; ++G__22639__i;}
  p__22635 = new cljs.core.IndexedSeq(G__22639__a,0);
} 
return G__22638__delegate.call(this,x,p__22635);};
G__22638.cljs$lang$maxFixedArity = 1;
G__22638.cljs$lang$applyTo = (function (arglist__22640){
var x = cljs.core.first(arglist__22640);
var p__22635 = cljs.core.rest(arglist__22640);
return G__22638__delegate(x,p__22635);
});
G__22638.cljs$core$IFn$_invoke$arity$variadic = G__22638__delegate;
return G__22638;
})()
;
atom = function(x,var_args){
var p__22635 = var_args;
switch(arguments.length){
case 1:
return atom__1.call(this,x);
default:
var G__22641 = null;
if (arguments.length > 1) {
var G__22642__i = 0, G__22642__a = new Array(arguments.length -  1);
while (G__22642__i < G__22642__a.length) {G__22642__a[G__22642__i] = arguments[G__22642__i + 1]; ++G__22642__i;}
G__22641 = new cljs.core.IndexedSeq(G__22642__a,0);
}
return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, G__22641);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
atom.cljs$lang$maxFixedArity = 1;
atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
return atom;
})()
;
/**
* Sets the value of atom to newval without regard for the
* current value. Returns newval.
*/
cljs.core.reset_BANG_ = (function reset_BANG_(a,new_value){
if((a instanceof cljs.core.Atom)){
var validate = a.validator;
if((validate == null)){
} else {
if(cljs.core.truth_((function (){var G__22645 = new_value;
return (validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(G__22645) : validate.call(null,G__22645));
})())){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str("Validator rejected reference state"),cljs.core.str("\n"),cljs.core.str((function (){var G__22646 = cljs.core.list(new cljs.core.Symbol(null,"validate","validate",1439230700,null),new cljs.core.Symbol(null,"new-value","new-value",-1567397401,null));
return (cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__22646) : cljs.core.pr_str.call(null,G__22646));
})())].join('')));
}
}

var old_value = a.state;
a.state = new_value;

if((a.watches == null)){
} else {
cljs.core._notify_watches(a,old_value,new_value);
}

return new_value;
} else {
return cljs.core._reset_BANG_(a,new_value);
}
});
/**
* Atomically swaps the value of atom to be:
* (apply f current-value-of-atom args). Note that f may be called
* multiple times, and thus should be free of side effects.  Returns
* the value that was swapped in.
* @param {...*} var_args
*/
cljs.core.swap_BANG_ = (function() {
var swap_BANG_ = null;
var swap_BANG___2 = (function (a,f){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__22653 = a.state;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22653) : f.call(null,G__22653));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a,f);
}
});
var swap_BANG___3 = (function (a,f,x){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__22654 = a.state;
var G__22655 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22654,G__22655) : f.call(null,G__22654,G__22655));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a,f,x);
}
});
var swap_BANG___4 = (function (a,f,x,y){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__22656 = a.state;
var G__22657 = x;
var G__22658 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__22656,G__22657,G__22658) : f.call(null,G__22656,G__22657,G__22658));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a,f,x,y);
}
});
var swap_BANG___5 = (function() { 
var G__22659__delegate = function (a,f,x,y,more){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,a.state,x,y,more));
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a,f,x,y,more);
}
};
var G__22659 = function (a,f,x,y,var_args){
var more = null;
if (arguments.length > 4) {
var G__22660__i = 0, G__22660__a = new Array(arguments.length -  4);
while (G__22660__i < G__22660__a.length) {G__22660__a[G__22660__i] = arguments[G__22660__i + 4]; ++G__22660__i;}
  more = new cljs.core.IndexedSeq(G__22660__a,0);
} 
return G__22659__delegate.call(this,a,f,x,y,more);};
G__22659.cljs$lang$maxFixedArity = 4;
G__22659.cljs$lang$applyTo = (function (arglist__22661){
var a = cljs.core.first(arglist__22661);
arglist__22661 = cljs.core.next(arglist__22661);
var f = cljs.core.first(arglist__22661);
arglist__22661 = cljs.core.next(arglist__22661);
var x = cljs.core.first(arglist__22661);
arglist__22661 = cljs.core.next(arglist__22661);
var y = cljs.core.first(arglist__22661);
var more = cljs.core.rest(arglist__22661);
return G__22659__delegate(a,f,x,y,more);
});
G__22659.cljs$core$IFn$_invoke$arity$variadic = G__22659__delegate;
return G__22659;
})()
;
swap_BANG_ = function(a,f,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return swap_BANG___2.call(this,a,f);
case 3:
return swap_BANG___3.call(this,a,f,x);
case 4:
return swap_BANG___4.call(this,a,f,x,y);
default:
var G__22662 = null;
if (arguments.length > 4) {
var G__22663__i = 0, G__22663__a = new Array(arguments.length -  4);
while (G__22663__i < G__22663__a.length) {G__22663__a[G__22663__i] = arguments[G__22663__i + 4]; ++G__22663__i;}
G__22662 = new cljs.core.IndexedSeq(G__22663__a,0);
}
return swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a,f,x,y, G__22662);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
swap_BANG_.cljs$lang$maxFixedArity = 4;
swap_BANG_.cljs$lang$applyTo = swap_BANG___5.cljs$lang$applyTo;
swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
return swap_BANG_;
})()
;
/**
* Atomically sets the value of atom to newval if and only if the
* current value of the atom is equal to oldval. Returns true if
* set happened, else false.
*/
cljs.core.compare_and_set_BANG_ = (function compare_and_set_BANG_(a,oldval,newval){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null),oldval)){
cljs.core.reset_BANG_(a,newval);

return true;
} else {
return false;
}
});
/**
* Sets the validator-fn for an atom. validator-fn must be nil or a
* side-effect-free fn of one argument, which will be passed the intended
* new state on any state change. If the new state is unacceptable, the
* validator-fn should return false or throw an Error. If the current state
* is not acceptable to the new validator, an Error will be thrown and the
* validator will not be changed.
*/
cljs.core.set_validator_BANG_ = (function set_validator_BANG_(iref,val){
return iref.validator = val;
});
/**
* Gets the validator-fn for a var/ref/agent/atom.
*/
cljs.core.get_validator = (function get_validator(iref){
return iref.validator;
});

/**
* @constructor
*/
cljs.core.Volatile = (function (state){
this.state = state;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;

cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = (function (_,new_state){
var self__ = this;
var ___$1 = this;
return self__.state = new_state;
});

cljs.core.Volatile.cljs$lang$type = true;

cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";

cljs.core.Volatile.cljs$lang$ctorPrWriter = (function (this__12187__auto__,writer__12188__auto__,opt__12189__auto__){
return cljs.core._write(writer__12188__auto__,"cljs.core/Volatile");
});

cljs.core.__GT_Volatile = (function __GT_Volatile(state){
return (new cljs.core.Volatile(state));
});

/**
* Creates and returns a Volatile with an initial value of val.
*/
cljs.core.volatile_BANG_ = (function volatile_BANG_(val){
return (new cljs.core.Volatile(val));
});
/**
* Returns true if x is a volatile.
*/
cljs.core.volatile_QMARK_ = (function volatile_QMARK_(x){
return (x instanceof cljs.core.Volatile);
});
/**
* Sets the value of volatile to newval without regard for the
* current value. Returns newval.
*/
cljs.core.vreset_BANG_ = (function vreset_BANG_(vol,newval){
return cljs.core._vreset_BANG_(vol,newval);
});
/**
* Returns a lazy sequence of the non-nil results of (f index item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a stateful transducer when no collection is
* provided.
*/
cljs.core.keep_indexed = (function() {
var keep_indexed = null;
var keep_indexed__1 = (function (f){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__22730 = null;
var G__22730__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__22730__1 = (function (result){
var G__22697 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__22697) : rf.call(null,G__22697));
});
var G__22730__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
var v = (function (){var G__22698 = i;
var G__22699 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22698,G__22699) : f.call(null,G__22698,G__22699));
})();
if((v == null)){
return result;
} else {
var G__22700 = result;
var G__22701 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__22700,G__22701) : rf.call(null,G__22700,G__22701));
}
});
G__22730 = function(result,input){
switch(arguments.length){
case 0:
return G__22730__0.call(this);
case 1:
return G__22730__1.call(this,result);
case 2:
return G__22730__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22730.cljs$core$IFn$_invoke$arity$0 = G__22730__0;
G__22730.cljs$core$IFn$_invoke$arity$1 = G__22730__1;
G__22730.cljs$core$IFn$_invoke$arity$2 = G__22730__2;
return G__22730;
})()
;})(ia))
});
});
var keep_indexed__2 = (function (f,coll){
var keepi = (function keepi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__12487__auto___22731 = size;
var i_22732 = (0);
while(true){
if((i_22732 < n__12487__auto___22731)){
var x_22733 = (function (){var G__22726 = (idx + i_22732);
var G__22727 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_22732);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22726,G__22727) : f.call(null,G__22726,G__22727));
})();
if((x_22733 == null)){
} else {
cljs.core.chunk_append(b,x_22733);
}

var G__22734 = (i_22732 + (1));
i_22732 = G__22734;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keepi((idx + size),cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__22728 = idx;
var G__22729 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22728,G__22729) : f.call(null,G__22728,G__22729));
})();
if((x == null)){
return keepi((idx + (1)),cljs.core.rest(s));
} else {
return cljs.core.cons(x,keepi((idx + (1)),cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
return keepi((0),coll);
});
keep_indexed = function(f,coll){
switch(arguments.length){
case 1:
return keep_indexed__1.call(this,f);
case 2:
return keep_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep_indexed.cljs$core$IFn$_invoke$arity$1 = keep_indexed__1;
keep_indexed.cljs$core$IFn$_invoke$arity$2 = keep_indexed__2;
return keep_indexed;
})()
;
/**
* Takes a set of predicates and returns a function f that returns true if all of its
* composing predicates return a logical true value against all of its arguments, else it returns
* false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical false result against the original predicates.
* @param {...*} var_args
*/
cljs.core.every_pred = (function() {
var every_pred = null;
var every_pred__1 = (function (p){
return (function() {
var ep1 = null;
var ep1__0 = (function (){
return true;
});
var ep1__1 = (function (x){
return cljs.core.boolean$((function (){var G__22948 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__22948) : p.call(null,G__22948));
})());
});
var ep1__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__11588__auto__ = (function (){var G__22950 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__22950) : p.call(null,G__22950));
})();
if(cljs.core.truth_(and__11588__auto__)){
var G__22951 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__22951) : p.call(null,G__22951));
} else {
return and__11588__auto__;
}
})());
});
var ep1__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__11588__auto__ = (function (){var G__22953 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__22953) : p.call(null,G__22953));
})();
if(cljs.core.truth_(and__11588__auto__)){
var and__11588__auto____$1 = (function (){var G__22955 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__22955) : p.call(null,G__22955));
})();
if(cljs.core.truth_(and__11588__auto____$1)){
var G__22956 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__22956) : p.call(null,G__22956));
} else {
return and__11588__auto____$1;
}
} else {
return and__11588__auto__;
}
})());
});
var ep1__4 = (function() { 
var G__23125__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep1.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(p,args)));
};
var G__23125 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__23126__i = 0, G__23126__a = new Array(arguments.length -  3);
while (G__23126__i < G__23126__a.length) {G__23126__a[G__23126__i] = arguments[G__23126__i + 3]; ++G__23126__i;}
  args = new cljs.core.IndexedSeq(G__23126__a,0);
} 
return G__23125__delegate.call(this,x,y,z,args);};
G__23125.cljs$lang$maxFixedArity = 3;
G__23125.cljs$lang$applyTo = (function (arglist__23127){
var x = cljs.core.first(arglist__23127);
arglist__23127 = cljs.core.next(arglist__23127);
var y = cljs.core.first(arglist__23127);
arglist__23127 = cljs.core.next(arglist__23127);
var z = cljs.core.first(arglist__23127);
var args = cljs.core.rest(arglist__23127);
return G__23125__delegate(x,y,z,args);
});
G__23125.cljs$core$IFn$_invoke$arity$variadic = G__23125__delegate;
return G__23125;
})()
;
ep1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep1__0.call(this);
case 1:
return ep1__1.call(this,x);
case 2:
return ep1__2.call(this,x,y);
case 3:
return ep1__3.call(this,x,y,z);
default:
var G__23128 = null;
if (arguments.length > 3) {
var G__23129__i = 0, G__23129__a = new Array(arguments.length -  3);
while (G__23129__i < G__23129__a.length) {G__23129__a[G__23129__i] = arguments[G__23129__i + 3]; ++G__23129__i;}
G__23128 = new cljs.core.IndexedSeq(G__23129__a,0);
}
return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__23128);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep1.cljs$lang$maxFixedArity = 3;
ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
return ep1;
})()
});
var every_pred__2 = (function (p1,p2){
return (function() {
var ep2 = null;
var ep2__0 = (function (){
return true;
});
var ep2__1 = (function (x){
return cljs.core.boolean$((function (){var and__11588__auto__ = (function (){var G__22988 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__22988) : p1.call(null,G__22988));
})();
if(cljs.core.truth_(and__11588__auto__)){
var G__22989 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__22989) : p2.call(null,G__22989));
} else {
return and__11588__auto__;
}
})());
});
var ep2__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__11588__auto__ = (function (){var G__22991 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__22991) : p1.call(null,G__22991));
})();
if(cljs.core.truth_(and__11588__auto__)){
var and__11588__auto____$1 = (function (){var G__22993 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__22993) : p1.call(null,G__22993));
})();
if(cljs.core.truth_(and__11588__auto____$1)){
var and__11588__auto____$2 = (function (){var G__22995 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__22995) : p2.call(null,G__22995));
})();
if(cljs.core.truth_(and__11588__auto____$2)){
var G__22996 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__22996) : p2.call(null,G__22996));
} else {
return and__11588__auto____$2;
}
} else {
return and__11588__auto____$1;
}
} else {
return and__11588__auto__;
}
})());
});
var ep2__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__11588__auto__ = (function (){var G__22998 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__22998) : p1.call(null,G__22998));
})();
if(cljs.core.truth_(and__11588__auto__)){
var and__11588__auto____$1 = (function (){var G__23000 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__23000) : p1.call(null,G__23000));
})();
if(cljs.core.truth_(and__11588__auto____$1)){
var and__11588__auto____$2 = (function (){var G__23002 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__23002) : p1.call(null,G__23002));
})();
if(cljs.core.truth_(and__11588__auto____$2)){
var and__11588__auto____$3 = (function (){var G__23004 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__23004) : p2.call(null,G__23004));
})();
if(cljs.core.truth_(and__11588__auto____$3)){
var and__11588__auto____$4 = (function (){var G__23006 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__23006) : p2.call(null,G__23006));
})();
if(cljs.core.truth_(and__11588__auto____$4)){
var G__23007 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__23007) : p2.call(null,G__23007));
} else {
return and__11588__auto____$4;
}
} else {
return and__11588__auto____$3;
}
} else {
return and__11588__auto____$2;
}
} else {
return and__11588__auto____$1;
}
} else {
return and__11588__auto__;
}
})());
});
var ep2__4 = (function() { 
var G__23130__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep2.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__22735_SHARP_){
var and__11588__auto__ = (function (){var G__23012 = p1__22735_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__23012) : p1.call(null,G__23012));
})();
if(cljs.core.truth_(and__11588__auto__)){
var G__23013 = p1__22735_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__23013) : p2.call(null,G__23013));
} else {
return and__11588__auto__;
}
}),args)));
};
var G__23130 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__23131__i = 0, G__23131__a = new Array(arguments.length -  3);
while (G__23131__i < G__23131__a.length) {G__23131__a[G__23131__i] = arguments[G__23131__i + 3]; ++G__23131__i;}
  args = new cljs.core.IndexedSeq(G__23131__a,0);
} 
return G__23130__delegate.call(this,x,y,z,args);};
G__23130.cljs$lang$maxFixedArity = 3;
G__23130.cljs$lang$applyTo = (function (arglist__23132){
var x = cljs.core.first(arglist__23132);
arglist__23132 = cljs.core.next(arglist__23132);
var y = cljs.core.first(arglist__23132);
arglist__23132 = cljs.core.next(arglist__23132);
var z = cljs.core.first(arglist__23132);
var args = cljs.core.rest(arglist__23132);
return G__23130__delegate(x,y,z,args);
});
G__23130.cljs$core$IFn$_invoke$arity$variadic = G__23130__delegate;
return G__23130;
})()
;
ep2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep2__0.call(this);
case 1:
return ep2__1.call(this,x);
case 2:
return ep2__2.call(this,x,y);
case 3:
return ep2__3.call(this,x,y,z);
default:
var G__23133 = null;
if (arguments.length > 3) {
var G__23134__i = 0, G__23134__a = new Array(arguments.length -  3);
while (G__23134__i < G__23134__a.length) {G__23134__a[G__23134__i] = arguments[G__23134__i + 3]; ++G__23134__i;}
G__23133 = new cljs.core.IndexedSeq(G__23134__a,0);
}
return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__23133);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep2.cljs$lang$maxFixedArity = 3;
ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
return ep2;
})()
});
var every_pred__3 = (function (p1,p2,p3){
return (function() {
var ep3 = null;
var ep3__0 = (function (){
return true;
});
var ep3__1 = (function (x){
return cljs.core.boolean$((function (){var and__11588__auto__ = (function (){var G__23059 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__23059) : p1.call(null,G__23059));
})();
if(cljs.core.truth_(and__11588__auto__)){
var and__11588__auto____$1 = (function (){var G__23061 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__23061) : p2.call(null,G__23061));
})();
if(cljs.core.truth_(and__11588__auto____$1)){
var G__23062 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__23062) : p3.call(null,G__23062));
} else {
return and__11588__auto____$1;
}
} else {
return and__11588__auto__;
}
})());
});
var ep3__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__11588__auto__ = (function (){var G__23064 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__23064) : p1.call(null,G__23064));
})();
if(cljs.core.truth_(and__11588__auto__)){
var and__11588__auto____$1 = (function (){var G__23066 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__23066) : p2.call(null,G__23066));
})();
if(cljs.core.truth_(and__11588__auto____$1)){
var and__11588__auto____$2 = (function (){var G__23068 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__23068) : p3.call(null,G__23068));
})();
if(cljs.core.truth_(and__11588__auto____$2)){
var and__11588__auto____$3 = (function (){var G__23070 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__23070) : p1.call(null,G__23070));
})();
if(cljs.core.truth_(and__11588__auto____$3)){
var and__11588__auto____$4 = (function (){var G__23072 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__23072) : p2.call(null,G__23072));
})();
if(cljs.core.truth_(and__11588__auto____$4)){
var G__23073 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__23073) : p3.call(null,G__23073));
} else {
return and__11588__auto____$4;
}
} else {
return and__11588__auto____$3;
}
} else {
return and__11588__auto____$2;
}
} else {
return and__11588__auto____$1;
}
} else {
return and__11588__auto__;
}
})());
});
var ep3__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__11588__auto__ = (function (){var G__23075 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__23075) : p1.call(null,G__23075));
})();
if(cljs.core.truth_(and__11588__auto__)){
var and__11588__auto____$1 = (function (){var G__23077 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__23077) : p2.call(null,G__23077));
})();
if(cljs.core.truth_(and__11588__auto____$1)){
var and__11588__auto____$2 = (function (){var G__23079 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__23079) : p3.call(null,G__23079));
})();
if(cljs.core.truth_(and__11588__auto____$2)){
var and__11588__auto____$3 = (function (){var G__23081 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__23081) : p1.call(null,G__23081));
})();
if(cljs.core.truth_(and__11588__auto____$3)){
var and__11588__auto____$4 = (function (){var G__23083 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__23083) : p2.call(null,G__23083));
})();
if(cljs.core.truth_(and__11588__auto____$4)){
var and__11588__auto____$5 = (function (){var G__23085 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__23085) : p3.call(null,G__23085));
})();
if(cljs.core.truth_(and__11588__auto____$5)){
var and__11588__auto____$6 = (function (){var G__23087 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__23087) : p1.call(null,G__23087));
})();
if(cljs.core.truth_(and__11588__auto____$6)){
var and__11588__auto____$7 = (function (){var G__23089 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__23089) : p2.call(null,G__23089));
})();
if(cljs.core.truth_(and__11588__auto____$7)){
var G__23090 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__23090) : p3.call(null,G__23090));
} else {
return and__11588__auto____$7;
}
} else {
return and__11588__auto____$6;
}
} else {
return and__11588__auto____$5;
}
} else {
return and__11588__auto____$4;
}
} else {
return and__11588__auto____$3;
}
} else {
return and__11588__auto____$2;
}
} else {
return and__11588__auto____$1;
}
} else {
return and__11588__auto__;
}
})());
});
var ep3__4 = (function() { 
var G__23135__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep3.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__22736_SHARP_){
var and__11588__auto__ = (function (){var G__23097 = p1__22736_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__23097) : p1.call(null,G__23097));
})();
if(cljs.core.truth_(and__11588__auto__)){
var and__11588__auto____$1 = (function (){var G__23099 = p1__22736_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__23099) : p2.call(null,G__23099));
})();
if(cljs.core.truth_(and__11588__auto____$1)){
var G__23100 = p1__22736_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__23100) : p3.call(null,G__23100));
} else {
return and__11588__auto____$1;
}
} else {
return and__11588__auto__;
}
}),args)));
};
var G__23135 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__23136__i = 0, G__23136__a = new Array(arguments.length -  3);
while (G__23136__i < G__23136__a.length) {G__23136__a[G__23136__i] = arguments[G__23136__i + 3]; ++G__23136__i;}
  args = new cljs.core.IndexedSeq(G__23136__a,0);
} 
return G__23135__delegate.call(this,x,y,z,args);};
G__23135.cljs$lang$maxFixedArity = 3;
G__23135.cljs$lang$applyTo = (function (arglist__23137){
var x = cljs.core.first(arglist__23137);
arglist__23137 = cljs.core.next(arglist__23137);
var y = cljs.core.first(arglist__23137);
arglist__23137 = cljs.core.next(arglist__23137);
var z = cljs.core.first(arglist__23137);
var args = cljs.core.rest(arglist__23137);
return G__23135__delegate(x,y,z,args);
});
G__23135.cljs$core$IFn$_invoke$arity$variadic = G__23135__delegate;
return G__23135;
})()
;
ep3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep3__0.call(this);
case 1:
return ep3__1.call(this,x);
case 2:
return ep3__2.call(this,x,y);
case 3:
return ep3__3.call(this,x,y,z);
default:
var G__23138 = null;
if (arguments.length > 3) {
var G__23139__i = 0, G__23139__a = new Array(arguments.length -  3);
while (G__23139__i < G__23139__a.length) {G__23139__a[G__23139__i] = arguments[G__23139__i + 3]; ++G__23139__i;}
G__23138 = new cljs.core.IndexedSeq(G__23139__a,0);
}
return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__23138);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep3.cljs$lang$maxFixedArity = 3;
ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
return ep3;
})()
});
var every_pred__4 = (function() { 
var G__23140__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var epn = null;
var epn__0 = (function (){
return true;
});
var epn__1 = (function (x){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__22737_SHARP_){
var G__23116 = x;
return (p1__22737_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__22737_SHARP_.cljs$core$IFn$_invoke$arity$1(G__23116) : p1__22737_SHARP_.call(null,G__23116));
});})(ps__$1))
,ps__$1);
});
var epn__2 = (function (x,y){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__22738_SHARP_){
var and__11588__auto__ = (function (){var G__23118 = x;
return (p1__22738_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__22738_SHARP_.cljs$core$IFn$_invoke$arity$1(G__23118) : p1__22738_SHARP_.call(null,G__23118));
})();
if(cljs.core.truth_(and__11588__auto__)){
var G__23119 = y;
return (p1__22738_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__22738_SHARP_.cljs$core$IFn$_invoke$arity$1(G__23119) : p1__22738_SHARP_.call(null,G__23119));
} else {
return and__11588__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__3 = (function (x,y,z){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__22739_SHARP_){
var and__11588__auto__ = (function (){var G__23121 = x;
return (p1__22739_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__22739_SHARP_.cljs$core$IFn$_invoke$arity$1(G__23121) : p1__22739_SHARP_.call(null,G__23121));
})();
if(cljs.core.truth_(and__11588__auto__)){
var and__11588__auto____$1 = (function (){var G__23123 = y;
return (p1__22739_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__22739_SHARP_.cljs$core$IFn$_invoke$arity$1(G__23123) : p1__22739_SHARP_.call(null,G__23123));
})();
if(cljs.core.truth_(and__11588__auto____$1)){
var G__23124 = z;
return (p1__22739_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__22739_SHARP_.cljs$core$IFn$_invoke$arity$1(G__23124) : p1__22739_SHARP_.call(null,G__23124));
} else {
return and__11588__auto____$1;
}
} else {
return and__11588__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__4 = (function() { 
var G__23141__delegate = function (x,y,z,args){
return cljs.core.boolean$((epn.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__22740_SHARP_){
return cljs.core.every_QMARK_(p1__22740_SHARP_,args);
});})(ps__$1))
,ps__$1)));
};
var G__23141 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__23142__i = 0, G__23142__a = new Array(arguments.length -  3);
while (G__23142__i < G__23142__a.length) {G__23142__a[G__23142__i] = arguments[G__23142__i + 3]; ++G__23142__i;}
  args = new cljs.core.IndexedSeq(G__23142__a,0);
} 
return G__23141__delegate.call(this,x,y,z,args);};
G__23141.cljs$lang$maxFixedArity = 3;
G__23141.cljs$lang$applyTo = (function (arglist__23143){
var x = cljs.core.first(arglist__23143);
arglist__23143 = cljs.core.next(arglist__23143);
var y = cljs.core.first(arglist__23143);
arglist__23143 = cljs.core.next(arglist__23143);
var z = cljs.core.first(arglist__23143);
var args = cljs.core.rest(arglist__23143);
return G__23141__delegate(x,y,z,args);
});
G__23141.cljs$core$IFn$_invoke$arity$variadic = G__23141__delegate;
return G__23141;
})()
;
epn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return epn__0.call(this);
case 1:
return epn__1.call(this,x);
case 2:
return epn__2.call(this,x,y);
case 3:
return epn__3.call(this,x,y,z);
default:
var G__23144 = null;
if (arguments.length > 3) {
var G__23145__i = 0, G__23145__a = new Array(arguments.length -  3);
while (G__23145__i < G__23145__a.length) {G__23145__a[G__23145__i] = arguments[G__23145__i + 3]; ++G__23145__i;}
G__23144 = new cljs.core.IndexedSeq(G__23145__a,0);
}
return epn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__23144);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
epn.cljs$lang$maxFixedArity = 3;
epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
return epn;
})()
;})(ps__$1))
};
var G__23140 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__23146__i = 0, G__23146__a = new Array(arguments.length -  3);
while (G__23146__i < G__23146__a.length) {G__23146__a[G__23146__i] = arguments[G__23146__i + 3]; ++G__23146__i;}
  ps = new cljs.core.IndexedSeq(G__23146__a,0);
} 
return G__23140__delegate.call(this,p1,p2,p3,ps);};
G__23140.cljs$lang$maxFixedArity = 3;
G__23140.cljs$lang$applyTo = (function (arglist__23147){
var p1 = cljs.core.first(arglist__23147);
arglist__23147 = cljs.core.next(arglist__23147);
var p2 = cljs.core.first(arglist__23147);
arglist__23147 = cljs.core.next(arglist__23147);
var p3 = cljs.core.first(arglist__23147);
var ps = cljs.core.rest(arglist__23147);
return G__23140__delegate(p1,p2,p3,ps);
});
G__23140.cljs$core$IFn$_invoke$arity$variadic = G__23140__delegate;
return G__23140;
})()
;
every_pred = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return every_pred__1.call(this,p1);
case 2:
return every_pred__2.call(this,p1,p2);
case 3:
return every_pred__3.call(this,p1,p2,p3);
default:
var G__23148 = null;
if (arguments.length > 3) {
var G__23149__i = 0, G__23149__a = new Array(arguments.length -  3);
while (G__23149__i < G__23149__a.length) {G__23149__a[G__23149__i] = arguments[G__23149__i + 3]; ++G__23149__i;}
G__23148 = new cljs.core.IndexedSeq(G__23149__a,0);
}
return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__23148);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
every_pred.cljs$lang$maxFixedArity = 3;
every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
return every_pred;
})()
;
/**
* Takes a set of predicates and returns a function f that returns the first logical true value
* returned by one of its composing predicates against any of its arguments, else it returns
* logical false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical true result against the original predicates.
* @param {...*} var_args
*/
cljs.core.some_fn = (function() {
var some_fn = null;
var some_fn__1 = (function (p){
return (function() {
var sp1 = null;
var sp1__0 = (function (){
return null;
});
var sp1__1 = (function (x){
var G__23355 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__23355) : p.call(null,G__23355));
});
var sp1__2 = (function (x,y){
var or__11600__auto__ = (function (){var G__23357 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__23357) : p.call(null,G__23357));
})();
if(cljs.core.truth_(or__11600__auto__)){
return or__11600__auto__;
} else {
var G__23358 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__23358) : p.call(null,G__23358));
}
});
var sp1__3 = (function (x,y,z){
var or__11600__auto__ = (function (){var G__23360 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__23360) : p.call(null,G__23360));
})();
if(cljs.core.truth_(or__11600__auto__)){
return or__11600__auto__;
} else {
var or__11600__auto____$1 = (function (){var G__23362 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__23362) : p.call(null,G__23362));
})();
if(cljs.core.truth_(or__11600__auto____$1)){
return or__11600__auto____$1;
} else {
var G__23363 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__23363) : p.call(null,G__23363));
}
}
});
var sp1__4 = (function() { 
var G__23524__delegate = function (x,y,z,args){
var or__11600__auto__ = sp1.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__11600__auto__)){
return or__11600__auto__;
} else {
return cljs.core.some(p,args);
}
};
var G__23524 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__23525__i = 0, G__23525__a = new Array(arguments.length -  3);
while (G__23525__i < G__23525__a.length) {G__23525__a[G__23525__i] = arguments[G__23525__i + 3]; ++G__23525__i;}
  args = new cljs.core.IndexedSeq(G__23525__a,0);
} 
return G__23524__delegate.call(this,x,y,z,args);};
G__23524.cljs$lang$maxFixedArity = 3;
G__23524.cljs$lang$applyTo = (function (arglist__23526){
var x = cljs.core.first(arglist__23526);
arglist__23526 = cljs.core.next(arglist__23526);
var y = cljs.core.first(arglist__23526);
arglist__23526 = cljs.core.next(arglist__23526);
var z = cljs.core.first(arglist__23526);
var args = cljs.core.rest(arglist__23526);
return G__23524__delegate(x,y,z,args);
});
G__23524.cljs$core$IFn$_invoke$arity$variadic = G__23524__delegate;
return G__23524;
})()
;
sp1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp1__0.call(this);
case 1:
return sp1__1.call(this,x);
case 2:
return sp1__2.call(this,x,y);
case 3:
return sp1__3.call(this,x,y,z);
default:
var G__23527 = null;
if (arguments.length > 3) {
var G__23528__i = 0, G__23528__a = new Array(arguments.length -  3);
while (G__23528__i < G__23528__a.length) {G__23528__a[G__23528__i] = arguments[G__23528__i + 3]; ++G__23528__i;}
G__23527 = new cljs.core.IndexedSeq(G__23528__a,0);
}
return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__23527);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp1.cljs$lang$maxFixedArity = 3;
sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
return sp1;
})()
});
var some_fn__2 = (function (p1,p2){
return (function() {
var sp2 = null;
var sp2__0 = (function (){
return null;
});
var sp2__1 = (function (x){
var or__11600__auto__ = (function (){var G__23395 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__23395) : p1.call(null,G__23395));
})();
if(cljs.core.truth_(or__11600__auto__)){
return or__11600__auto__;
} else {
var G__23396 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__23396) : p2.call(null,G__23396));
}
});
var sp2__2 = (function (x,y){
var or__11600__auto__ = (function (){var G__23398 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__23398) : p1.call(null,G__23398));
})();
if(cljs.core.truth_(or__11600__auto__)){
return or__11600__auto__;
} else {
var or__11600__auto____$1 = (function (){var G__23400 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__23400) : p1.call(null,G__23400));
})();
if(cljs.core.truth_(or__11600__auto____$1)){
return or__11600__auto____$1;
} else {
var or__11600__auto____$2 = (function (){var G__23402 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__23402) : p2.call(null,G__23402));
})();
if(cljs.core.truth_(or__11600__auto____$2)){
return or__11600__auto____$2;
} else {
var G__23403 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__23403) : p2.call(null,G__23403));
}
}
}
});
var sp2__3 = (function (x,y,z){
var or__11600__auto__ = (function (){var G__23405 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__23405) : p1.call(null,G__23405));
})();
if(cljs.core.truth_(or__11600__auto__)){
return or__11600__auto__;
} else {
var or__11600__auto____$1 = (function (){var G__23407 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__23407) : p1.call(null,G__23407));
})();
if(cljs.core.truth_(or__11600__auto____$1)){
return or__11600__auto____$1;
} else {
var or__11600__auto____$2 = (function (){var G__23409 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__23409) : p1.call(null,G__23409));
})();
if(cljs.core.truth_(or__11600__auto____$2)){
return or__11600__auto____$2;
} else {
var or__11600__auto____$3 = (function (){var G__23411 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__23411) : p2.call(null,G__23411));
})();
if(cljs.core.truth_(or__11600__auto____$3)){
return or__11600__auto____$3;
} else {
var or__11600__auto____$4 = (function (){var G__23413 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__23413) : p2.call(null,G__23413));
})();
if(cljs.core.truth_(or__11600__auto____$4)){
return or__11600__auto____$4;
} else {
var G__23414 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__23414) : p2.call(null,G__23414));
}
}
}
}
}
});
var sp2__4 = (function() { 
var G__23529__delegate = function (x,y,z,args){
var or__11600__auto__ = sp2.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__11600__auto__)){
return or__11600__auto__;
} else {
return cljs.core.some(((function (or__11600__auto__){
return (function (p1__23150_SHARP_){
var or__11600__auto____$1 = (function (){var G__23416 = p1__23150_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__23416) : p1.call(null,G__23416));
})();
if(cljs.core.truth_(or__11600__auto____$1)){
return or__11600__auto____$1;
} else {
var G__23417 = p1__23150_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__23417) : p2.call(null,G__23417));
}
});})(or__11600__auto__))
,args);
}
};
var G__23529 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__23530__i = 0, G__23530__a = new Array(arguments.length -  3);
while (G__23530__i < G__23530__a.length) {G__23530__a[G__23530__i] = arguments[G__23530__i + 3]; ++G__23530__i;}
  args = new cljs.core.IndexedSeq(G__23530__a,0);
} 
return G__23529__delegate.call(this,x,y,z,args);};
G__23529.cljs$lang$maxFixedArity = 3;
G__23529.cljs$lang$applyTo = (function (arglist__23531){
var x = cljs.core.first(arglist__23531);
arglist__23531 = cljs.core.next(arglist__23531);
var y = cljs.core.first(arglist__23531);
arglist__23531 = cljs.core.next(arglist__23531);
var z = cljs.core.first(arglist__23531);
var args = cljs.core.rest(arglist__23531);
return G__23529__delegate(x,y,z,args);
});
G__23529.cljs$core$IFn$_invoke$arity$variadic = G__23529__delegate;
return G__23529;
})()
;
sp2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp2__0.call(this);
case 1:
return sp2__1.call(this,x);
case 2:
return sp2__2.call(this,x,y);
case 3:
return sp2__3.call(this,x,y,z);
default:
var G__23532 = null;
if (arguments.length > 3) {
var G__23533__i = 0, G__23533__a = new Array(arguments.length -  3);
while (G__23533__i < G__23533__a.length) {G__23533__a[G__23533__i] = arguments[G__23533__i + 3]; ++G__23533__i;}
G__23532 = new cljs.core.IndexedSeq(G__23533__a,0);
}
return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__23532);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp2.cljs$lang$maxFixedArity = 3;
sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
return sp2;
})()
});
var some_fn__3 = (function (p1,p2,p3){
return (function() {
var sp3 = null;
var sp3__0 = (function (){
return null;
});
var sp3__1 = (function (x){
var or__11600__auto__ = (function (){var G__23463 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__23463) : p1.call(null,G__23463));
})();
if(cljs.core.truth_(or__11600__auto__)){
return or__11600__auto__;
} else {
var or__11600__auto____$1 = (function (){var G__23465 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__23465) : p2.call(null,G__23465));
})();
if(cljs.core.truth_(or__11600__auto____$1)){
return or__11600__auto____$1;
} else {
var G__23466 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__23466) : p3.call(null,G__23466));
}
}
});
var sp3__2 = (function (x,y){
var or__11600__auto__ = (function (){var G__23468 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__23468) : p1.call(null,G__23468));
})();
if(cljs.core.truth_(or__11600__auto__)){
return or__11600__auto__;
} else {
var or__11600__auto____$1 = (function (){var G__23470 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__23470) : p2.call(null,G__23470));
})();
if(cljs.core.truth_(or__11600__auto____$1)){
return or__11600__auto____$1;
} else {
var or__11600__auto____$2 = (function (){var G__23472 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__23472) : p3.call(null,G__23472));
})();
if(cljs.core.truth_(or__11600__auto____$2)){
return or__11600__auto____$2;
} else {
var or__11600__auto____$3 = (function (){var G__23474 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__23474) : p1.call(null,G__23474));
})();
if(cljs.core.truth_(or__11600__auto____$3)){
return or__11600__auto____$3;
} else {
var or__11600__auto____$4 = (function (){var G__23476 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__23476) : p2.call(null,G__23476));
})();
if(cljs.core.truth_(or__11600__auto____$4)){
return or__11600__auto____$4;
} else {
var G__23477 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__23477) : p3.call(null,G__23477));
}
}
}
}
}
});
var sp3__3 = (function (x,y,z){
var or__11600__auto__ = (function (){var G__23479 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__23479) : p1.call(null,G__23479));
})();
if(cljs.core.truth_(or__11600__auto__)){
return or__11600__auto__;
} else {
var or__11600__auto____$1 = (function (){var G__23481 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__23481) : p2.call(null,G__23481));
})();
if(cljs.core.truth_(or__11600__auto____$1)){
return or__11600__auto____$1;
} else {
var or__11600__auto____$2 = (function (){var G__23483 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__23483) : p3.call(null,G__23483));
})();
if(cljs.core.truth_(or__11600__auto____$2)){
return or__11600__auto____$2;
} else {
var or__11600__auto____$3 = (function (){var G__23485 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__23485) : p1.call(null,G__23485));
})();
if(cljs.core.truth_(or__11600__auto____$3)){
return or__11600__auto____$3;
} else {
var or__11600__auto____$4 = (function (){var G__23487 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__23487) : p2.call(null,G__23487));
})();
if(cljs.core.truth_(or__11600__auto____$4)){
return or__11600__auto____$4;
} else {
var or__11600__auto____$5 = (function (){var G__23489 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__23489) : p3.call(null,G__23489));
})();
if(cljs.core.truth_(or__11600__auto____$5)){
return or__11600__auto____$5;
} else {
var or__11600__auto____$6 = (function (){var G__23491 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__23491) : p1.call(null,G__23491));
})();
if(cljs.core.truth_(or__11600__auto____$6)){
return or__11600__auto____$6;
} else {
var or__11600__auto____$7 = (function (){var G__23493 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__23493) : p2.call(null,G__23493));
})();
if(cljs.core.truth_(or__11600__auto____$7)){
return or__11600__auto____$7;
} else {
var G__23494 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__23494) : p3.call(null,G__23494));
}
}
}
}
}
}
}
}
});
var sp3__4 = (function() { 
var G__23534__delegate = function (x,y,z,args){
var or__11600__auto__ = sp3.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__11600__auto__)){
return or__11600__auto__;
} else {
return cljs.core.some(((function (or__11600__auto__){
return (function (p1__23151_SHARP_){
var or__11600__auto____$1 = (function (){var G__23496 = p1__23151_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__23496) : p1.call(null,G__23496));
})();
if(cljs.core.truth_(or__11600__auto____$1)){
return or__11600__auto____$1;
} else {
var or__11600__auto____$2 = (function (){var G__23498 = p1__23151_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__23498) : p2.call(null,G__23498));
})();
if(cljs.core.truth_(or__11600__auto____$2)){
return or__11600__auto____$2;
} else {
var G__23499 = p1__23151_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__23499) : p3.call(null,G__23499));
}
}
});})(or__11600__auto__))
,args);
}
};
var G__23534 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__23535__i = 0, G__23535__a = new Array(arguments.length -  3);
while (G__23535__i < G__23535__a.length) {G__23535__a[G__23535__i] = arguments[G__23535__i + 3]; ++G__23535__i;}
  args = new cljs.core.IndexedSeq(G__23535__a,0);
} 
return G__23534__delegate.call(this,x,y,z,args);};
G__23534.cljs$lang$maxFixedArity = 3;
G__23534.cljs$lang$applyTo = (function (arglist__23536){
var x = cljs.core.first(arglist__23536);
arglist__23536 = cljs.core.next(arglist__23536);
var y = cljs.core.first(arglist__23536);
arglist__23536 = cljs.core.next(arglist__23536);
var z = cljs.core.first(arglist__23536);
var args = cljs.core.rest(arglist__23536);
return G__23534__delegate(x,y,z,args);
});
G__23534.cljs$core$IFn$_invoke$arity$variadic = G__23534__delegate;
return G__23534;
})()
;
sp3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp3__0.call(this);
case 1:
return sp3__1.call(this,x);
case 2:
return sp3__2.call(this,x,y);
case 3:
return sp3__3.call(this,x,y,z);
default:
var G__23537 = null;
if (arguments.length > 3) {
var G__23538__i = 0, G__23538__a = new Array(arguments.length -  3);
while (G__23538__i < G__23538__a.length) {G__23538__a[G__23538__i] = arguments[G__23538__i + 3]; ++G__23538__i;}
G__23537 = new cljs.core.IndexedSeq(G__23538__a,0);
}
return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__23537);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp3.cljs$lang$maxFixedArity = 3;
sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
return sp3;
})()
});
var some_fn__4 = (function() { 
var G__23539__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var spn = null;
var spn__0 = (function (){
return null;
});
var spn__1 = (function (x){
return cljs.core.some(((function (ps__$1){
return (function (p1__23152_SHARP_){
var G__23515 = x;
return (p1__23152_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__23152_SHARP_.cljs$core$IFn$_invoke$arity$1(G__23515) : p1__23152_SHARP_.call(null,G__23515));
});})(ps__$1))
,ps__$1);
});
var spn__2 = (function (x,y){
return cljs.core.some(((function (ps__$1){
return (function (p1__23153_SHARP_){
var or__11600__auto__ = (function (){var G__23517 = x;
return (p1__23153_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__23153_SHARP_.cljs$core$IFn$_invoke$arity$1(G__23517) : p1__23153_SHARP_.call(null,G__23517));
})();
if(cljs.core.truth_(or__11600__auto__)){
return or__11600__auto__;
} else {
var G__23518 = y;
return (p1__23153_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__23153_SHARP_.cljs$core$IFn$_invoke$arity$1(G__23518) : p1__23153_SHARP_.call(null,G__23518));
}
});})(ps__$1))
,ps__$1);
});
var spn__3 = (function (x,y,z){
return cljs.core.some(((function (ps__$1){
return (function (p1__23154_SHARP_){
var or__11600__auto__ = (function (){var G__23520 = x;
return (p1__23154_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__23154_SHARP_.cljs$core$IFn$_invoke$arity$1(G__23520) : p1__23154_SHARP_.call(null,G__23520));
})();
if(cljs.core.truth_(or__11600__auto__)){
return or__11600__auto__;
} else {
var or__11600__auto____$1 = (function (){var G__23522 = y;
return (p1__23154_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__23154_SHARP_.cljs$core$IFn$_invoke$arity$1(G__23522) : p1__23154_SHARP_.call(null,G__23522));
})();
if(cljs.core.truth_(or__11600__auto____$1)){
return or__11600__auto____$1;
} else {
var G__23523 = z;
return (p1__23154_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__23154_SHARP_.cljs$core$IFn$_invoke$arity$1(G__23523) : p1__23154_SHARP_.call(null,G__23523));
}
}
});})(ps__$1))
,ps__$1);
});
var spn__4 = (function() { 
var G__23540__delegate = function (x,y,z,args){
var or__11600__auto__ = spn.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__11600__auto__)){
return or__11600__auto__;
} else {
return cljs.core.some(((function (or__11600__auto__,ps__$1){
return (function (p1__23155_SHARP_){
return cljs.core.some(p1__23155_SHARP_,args);
});})(or__11600__auto__,ps__$1))
,ps__$1);
}
};
var G__23540 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__23541__i = 0, G__23541__a = new Array(arguments.length -  3);
while (G__23541__i < G__23541__a.length) {G__23541__a[G__23541__i] = arguments[G__23541__i + 3]; ++G__23541__i;}
  args = new cljs.core.IndexedSeq(G__23541__a,0);
} 
return G__23540__delegate.call(this,x,y,z,args);};
G__23540.cljs$lang$maxFixedArity = 3;
G__23540.cljs$lang$applyTo = (function (arglist__23542){
var x = cljs.core.first(arglist__23542);
arglist__23542 = cljs.core.next(arglist__23542);
var y = cljs.core.first(arglist__23542);
arglist__23542 = cljs.core.next(arglist__23542);
var z = cljs.core.first(arglist__23542);
var args = cljs.core.rest(arglist__23542);
return G__23540__delegate(x,y,z,args);
});
G__23540.cljs$core$IFn$_invoke$arity$variadic = G__23540__delegate;
return G__23540;
})()
;
spn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return spn__0.call(this);
case 1:
return spn__1.call(this,x);
case 2:
return spn__2.call(this,x,y);
case 3:
return spn__3.call(this,x,y,z);
default:
var G__23543 = null;
if (arguments.length > 3) {
var G__23544__i = 0, G__23544__a = new Array(arguments.length -  3);
while (G__23544__i < G__23544__a.length) {G__23544__a[G__23544__i] = arguments[G__23544__i + 3]; ++G__23544__i;}
G__23543 = new cljs.core.IndexedSeq(G__23544__a,0);
}
return spn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__23543);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
spn.cljs$lang$maxFixedArity = 3;
spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
return spn;
})()
;})(ps__$1))
};
var G__23539 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__23545__i = 0, G__23545__a = new Array(arguments.length -  3);
while (G__23545__i < G__23545__a.length) {G__23545__a[G__23545__i] = arguments[G__23545__i + 3]; ++G__23545__i;}
  ps = new cljs.core.IndexedSeq(G__23545__a,0);
} 
return G__23539__delegate.call(this,p1,p2,p3,ps);};
G__23539.cljs$lang$maxFixedArity = 3;
G__23539.cljs$lang$applyTo = (function (arglist__23546){
var p1 = cljs.core.first(arglist__23546);
arglist__23546 = cljs.core.next(arglist__23546);
var p2 = cljs.core.first(arglist__23546);
arglist__23546 = cljs.core.next(arglist__23546);
var p3 = cljs.core.first(arglist__23546);
var ps = cljs.core.rest(arglist__23546);
return G__23539__delegate(p1,p2,p3,ps);
});
G__23539.cljs$core$IFn$_invoke$arity$variadic = G__23539__delegate;
return G__23539;
})()
;
some_fn = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return some_fn__1.call(this,p1);
case 2:
return some_fn__2.call(this,p1,p2);
case 3:
return some_fn__3.call(this,p1,p2,p3);
default:
var G__23547 = null;
if (arguments.length > 3) {
var G__23548__i = 0, G__23548__a = new Array(arguments.length -  3);
while (G__23548__i < G__23548__a.length) {G__23548__a[G__23548__i] = arguments[G__23548__i + 3]; ++G__23548__i;}
G__23547 = new cljs.core.IndexedSeq(G__23548__a,0);
}
return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__23547);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
some_fn.cljs$lang$maxFixedArity = 3;
some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
return some_fn;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to
* the set of first items of each coll, followed by applying f to the
* set of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments. Returns a transducer when
* no collection is provided.
* @param {...*} var_args
*/
cljs.core.map = (function() {
var map = null;
var map__1 = (function (f){
return (function (rf){
return (function() {
var G__23603 = null;
var G__23603__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__23603__1 = (function (result){
var G__23589 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__23589) : rf.call(null,G__23589));
});
var G__23603__2 = (function (result,input){
var G__23590 = result;
var G__23591 = (function (){var G__23592 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23592) : f.call(null,G__23592));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__23590,G__23591) : rf.call(null,G__23590,G__23591));
});
var G__23603__3 = (function() { 
var G__23604__delegate = function (result,input,inputs){
var G__23593 = result;
var G__23594 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,input,inputs);
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__23593,G__23594) : rf.call(null,G__23593,G__23594));
};
var G__23604 = function (result,input,var_args){
var inputs = null;
if (arguments.length > 2) {
var G__23605__i = 0, G__23605__a = new Array(arguments.length -  2);
while (G__23605__i < G__23605__a.length) {G__23605__a[G__23605__i] = arguments[G__23605__i + 2]; ++G__23605__i;}
  inputs = new cljs.core.IndexedSeq(G__23605__a,0);
} 
return G__23604__delegate.call(this,result,input,inputs);};
G__23604.cljs$lang$maxFixedArity = 2;
G__23604.cljs$lang$applyTo = (function (arglist__23606){
var result = cljs.core.first(arglist__23606);
arglist__23606 = cljs.core.next(arglist__23606);
var input = cljs.core.first(arglist__23606);
var inputs = cljs.core.rest(arglist__23606);
return G__23604__delegate(result,input,inputs);
});
G__23604.cljs$core$IFn$_invoke$arity$variadic = G__23604__delegate;
return G__23604;
})()
;
G__23603 = function(result,input,var_args){
var inputs = var_args;
switch(arguments.length){
case 0:
return G__23603__0.call(this);
case 1:
return G__23603__1.call(this,result);
case 2:
return G__23603__2.call(this,result,input);
default:
var G__23607 = null;
if (arguments.length > 2) {
var G__23608__i = 0, G__23608__a = new Array(arguments.length -  2);
while (G__23608__i < G__23608__a.length) {G__23608__a[G__23608__i] = arguments[G__23608__i + 2]; ++G__23608__i;}
G__23607 = new cljs.core.IndexedSeq(G__23608__a,0);
}
return G__23603__3.cljs$core$IFn$_invoke$arity$variadic(result,input, G__23607);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23603.cljs$lang$maxFixedArity = 2;
G__23603.cljs$lang$applyTo = G__23603__3.cljs$lang$applyTo;
G__23603.cljs$core$IFn$_invoke$arity$0 = G__23603__0;
G__23603.cljs$core$IFn$_invoke$arity$1 = G__23603__1;
G__23603.cljs$core$IFn$_invoke$arity$2 = G__23603__2;
G__23603.cljs$core$IFn$_invoke$arity$variadic = G__23603__3.cljs$core$IFn$_invoke$arity$variadic;
return G__23603;
})()
});
});
var map__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__12487__auto___23609 = size;
var i_23610 = (0);
while(true){
if((i_23610 < n__12487__auto___23609)){
cljs.core.chunk_append(b,(function (){var G__23595 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_23610);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23595) : f.call(null,G__23595));
})());

var G__23611 = (i_23610 + (1));
i_23610 = G__23611;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__23596 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23596) : f.call(null,G__23596));
})(),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
var map__3 = (function (f,c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons((function (){var G__23597 = cljs.core.first(s1);
var G__23598 = cljs.core.first(s2);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23597,G__23598) : f.call(null,G__23597,G__23598));
})(),map.cljs$core$IFn$_invoke$arity$3(f,cljs.core.rest(s1),cljs.core.rest(s2)));
} else {
return null;
}
}),null,null));
});
var map__4 = (function (f,c1,c2,c3){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
var s3 = cljs.core.seq(c3);
if((s1) && (s2) && (s3)){
return cljs.core.cons((function (){var G__23599 = cljs.core.first(s1);
var G__23600 = cljs.core.first(s2);
var G__23601 = cljs.core.first(s3);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__23599,G__23600,G__23601) : f.call(null,G__23599,G__23600,G__23601));
})(),map.cljs$core$IFn$_invoke$arity$4(f,cljs.core.rest(s1),cljs.core.rest(s2),cljs.core.rest(s3)));
} else {
return null;
}
}),null,null));
});
var map__5 = (function() { 
var G__23612__delegate = function (f,c1,c2,c3,colls){
var step = (function step(cs){
return (new cljs.core.LazySeq(null,(function (){
var ss = map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cs);
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.cons(map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),step(map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
});
return map.cljs$core$IFn$_invoke$arity$2(((function (step){
return (function (p1__23549_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,p1__23549_SHARP_);
});})(step))
,step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c3,cljs.core.array_seq([c2,c1], 0))));
};
var G__23612 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__23613__i = 0, G__23613__a = new Array(arguments.length -  4);
while (G__23613__i < G__23613__a.length) {G__23613__a[G__23613__i] = arguments[G__23613__i + 4]; ++G__23613__i;}
  colls = new cljs.core.IndexedSeq(G__23613__a,0);
} 
return G__23612__delegate.call(this,f,c1,c2,c3,colls);};
G__23612.cljs$lang$maxFixedArity = 4;
G__23612.cljs$lang$applyTo = (function (arglist__23614){
var f = cljs.core.first(arglist__23614);
arglist__23614 = cljs.core.next(arglist__23614);
var c1 = cljs.core.first(arglist__23614);
arglist__23614 = cljs.core.next(arglist__23614);
var c2 = cljs.core.first(arglist__23614);
arglist__23614 = cljs.core.next(arglist__23614);
var c3 = cljs.core.first(arglist__23614);
var colls = cljs.core.rest(arglist__23614);
return G__23612__delegate(f,c1,c2,c3,colls);
});
G__23612.cljs$core$IFn$_invoke$arity$variadic = G__23612__delegate;
return G__23612;
})()
;
map = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return map__1.call(this,f);
case 2:
return map__2.call(this,f,c1);
case 3:
return map__3.call(this,f,c1,c2);
case 4:
return map__4.call(this,f,c1,c2,c3);
default:
var G__23615 = null;
if (arguments.length > 4) {
var G__23616__i = 0, G__23616__a = new Array(arguments.length -  4);
while (G__23616__i < G__23616__a.length) {G__23616__a[G__23616__i] = arguments[G__23616__i + 4]; ++G__23616__i;}
G__23615 = new cljs.core.IndexedSeq(G__23616__a,0);
}
return map__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__23615);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map.cljs$lang$maxFixedArity = 4;
map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
map.cljs$core$IFn$_invoke$arity$1 = map__1;
map.cljs$core$IFn$_invoke$arity$2 = map__2;
map.cljs$core$IFn$_invoke$arity$3 = map__3;
map.cljs$core$IFn$_invoke$arity$4 = map__4;
map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
return map;
})()
;
/**
* Returns a lazy sequence of the first n items in coll, or all items if
* there are fewer than n.  Returns a stateful transducer when
* no collection is provided.
*/
cljs.core.take = (function() {
var take = null;
var take__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__23625 = null;
var G__23625__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__23625__1 = (function (result){
var G__23622 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__23622) : rf.call(null,G__23622));
});
var G__23625__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
var nn = na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));
var result__$1 = (((n__$1 > (0)))?(function (){var G__23623 = result;
var G__23624 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__23623,G__23624) : rf.call(null,G__23623,G__23624));
})():result);
if(!((nn > (0)))){
return cljs.core.ensure_reduced(result__$1);
} else {
return result__$1;
}
});
G__23625 = function(result,input){
switch(arguments.length){
case 0:
return G__23625__0.call(this);
case 1:
return G__23625__1.call(this,result);
case 2:
return G__23625__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23625.cljs$core$IFn$_invoke$arity$0 = G__23625__0;
G__23625.cljs$core$IFn$_invoke$arity$1 = G__23625__1;
G__23625.cljs$core$IFn$_invoke$arity$2 = G__23625__2;
return G__23625;
})()
;})(na))
});
});
var take__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
if((n > (0))){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take.cljs$core$IFn$_invoke$arity$2((n - (1)),cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take = function(n,coll){
switch(arguments.length){
case 1:
return take__1.call(this,n);
case 2:
return take__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take.cljs$core$IFn$_invoke$arity$1 = take__1;
take.cljs$core$IFn$_invoke$arity$2 = take__2;
return take;
})()
;
/**
* Returns a lazy sequence of all but the first n items in coll.
* Returns a stateful transducer when no collection is provided.
*/
cljs.core.drop = (function() {
var drop = null;
var drop__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__23632 = null;
var G__23632__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__23632__1 = (function (result){
var G__23629 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__23629) : rf.call(null,G__23629));
});
var G__23632__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));

if((n__$1 > (0))){
return result;
} else {
var G__23630 = result;
var G__23631 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__23630,G__23631) : rf.call(null,G__23630,G__23631));
}
});
G__23632 = function(result,input){
switch(arguments.length){
case 0:
return G__23632__0.call(this);
case 1:
return G__23632__1.call(this,result);
case 2:
return G__23632__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23632.cljs$core$IFn$_invoke$arity$0 = G__23632__0;
G__23632.cljs$core$IFn$_invoke$arity$1 = G__23632__1;
G__23632.cljs$core$IFn$_invoke$arity$2 = G__23632__2;
return G__23632;
})()
;})(na))
});
});
var drop__2 = (function (n,coll){
var step = (function (n__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(((n__$1 > (0))) && (s)){
var G__23633 = (n__$1 - (1));
var G__23634 = cljs.core.rest(s);
n__$1 = G__23633;
coll__$1 = G__23634;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(n,coll);
});})(step))
,null,null));
});
drop = function(n,coll){
switch(arguments.length){
case 1:
return drop__1.call(this,n);
case 2:
return drop__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop.cljs$core$IFn$_invoke$arity$1 = drop__1;
drop.cljs$core$IFn$_invoke$arity$2 = drop__2;
return drop;
})()
;
/**
* Return a lazy sequence of all but the last n (default 1) items in coll
*/
cljs.core.drop_last = (function() {
var drop_last = null;
var drop_last__1 = (function (s){
return drop_last.cljs$core$IFn$_invoke$arity$2((1),s);
});
var drop_last__2 = (function (n,s){
return cljs.core.map.cljs$core$IFn$_invoke$arity$3((function (x,_){
return x;
}),s,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s));
});
drop_last = function(n,s){
switch(arguments.length){
case 1:
return drop_last__1.call(this,n);
case 2:
return drop_last__2.call(this,n,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
return drop_last;
})()
;
/**
* Returns a seq of the last n items in coll.  Depending on the type
* of coll may be no better than linear time.  For vectors, see also subvec.
*/
cljs.core.take_last = (function take_last(n,coll){
var s = cljs.core.seq(coll);
var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll));
while(true){
if(lead){
var G__23637 = cljs.core.next(s);
var G__23638 = cljs.core.next(lead);
s = G__23637;
lead = G__23638;
continue;
} else {
return s;
}
break;
}
});
/**
* Returns a lazy sequence of the items in coll starting from the
* first item for which (pred item) returns logical false.  Returns a
* stateful transducer when no collection is provided.
*/
cljs.core.drop_while = (function() {
var drop_while = null;
var drop_while__1 = (function (pred){
return (function (rf){
var da = cljs.core.volatile_BANG_(true);
return ((function (da){
return (function() {
var G__23651 = null;
var G__23651__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__23651__1 = (function (result){
var G__23645 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__23645) : rf.call(null,G__23645));
});
var G__23651__2 = (function (result,input){
var drop_QMARK_ = cljs.core.deref(da);
if(cljs.core.truth_((function (){var and__11588__auto__ = drop_QMARK_;
if(cljs.core.truth_(and__11588__auto__)){
var G__23646 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__23646) : pred.call(null,G__23646));
} else {
return and__11588__auto__;
}
})())){
return result;
} else {
cljs.core.vreset_BANG_(da,null);

var G__23647 = result;
var G__23648 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__23647,G__23648) : rf.call(null,G__23647,G__23648));
}
});
G__23651 = function(result,input){
switch(arguments.length){
case 0:
return G__23651__0.call(this);
case 1:
return G__23651__1.call(this,result);
case 2:
return G__23651__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23651.cljs$core$IFn$_invoke$arity$0 = G__23651__0;
G__23651.cljs$core$IFn$_invoke$arity$1 = G__23651__1;
G__23651.cljs$core$IFn$_invoke$arity$2 = G__23651__2;
return G__23651;
})()
;})(da))
});
});
var drop_while__2 = (function (pred,coll){
var step = (function (pred__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(cljs.core.truth_((function (){var and__11588__auto__ = s;
if(and__11588__auto__){
var G__23650 = cljs.core.first(s);
return (pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__23650) : pred__$1.call(null,G__23650));
} else {
return and__11588__auto__;
}
})())){
var G__23652 = pred__$1;
var G__23653 = cljs.core.rest(s);
pred__$1 = G__23652;
coll__$1 = G__23653;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(pred,coll);
});})(step))
,null,null));
});
drop_while = function(pred,coll){
switch(arguments.length){
case 1:
return drop_while__1.call(this,pred);
case 2:
return drop_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_while.cljs$core$IFn$_invoke$arity$1 = drop_while__1;
drop_while.cljs$core$IFn$_invoke$arity$2 = drop_while__2;
return drop_while;
})()
;
/**
* Returns a lazy (infinite!) sequence of repetitions of the items in coll.
*/
cljs.core.cycle = (function cycle(coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s,cycle(s));
} else {
return null;
}
}),null,null));
});
/**
* Returns a vector of [(take n coll) (drop n coll)]
*/
cljs.core.split_at = (function split_at(n,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,coll),cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll)], null);
});
/**
* Returns a lazy (infinite!, or length n if supplied) sequence of xs.
*/
cljs.core.repeat = (function() {
var repeat = null;
var repeat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(x,repeat.cljs$core$IFn$_invoke$arity$1(x));
}),null,null));
});
var repeat__2 = (function (n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeat.cljs$core$IFn$_invoke$arity$1(x));
});
repeat = function(n,x){
switch(arguments.length){
case 1:
return repeat__1.call(this,n);
case 2:
return repeat__2.call(this,n,x);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
return repeat;
})()
;
/**
* Returns a lazy seq of n xs.
*/
cljs.core.replicate = (function replicate(n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
});
/**
* Takes a function of no args, presumably with side effects, and
* returns an infinite (or length n if supplied) lazy sequence of calls
* to it
*/
cljs.core.repeatedly = (function() {
var repeatedly = null;
var repeatedly__1 = (function (f){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),repeatedly.cljs$core$IFn$_invoke$arity$1(f));
}),null,null));
});
var repeatedly__2 = (function (n,f){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeatedly.cljs$core$IFn$_invoke$arity$1(f));
});
repeatedly = function(n,f){
switch(arguments.length){
case 1:
return repeatedly__1.call(this,n);
case 2:
return repeatedly__2.call(this,n,f);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
return repeatedly;
})()
;
/**
* Returns a lazy sequence of x, (f x), (f (f x)) etc. f must be free of side-effects
*/
cljs.core.iterate = (function iterate(f,x){
return cljs.core.cons(x,(new cljs.core.LazySeq(null,(function (){
return iterate(f,(function (){var G__23662 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23662) : f.call(null,G__23662));
})());
}),null,null)));
});
/**
* Returns a lazy seq of the first item in each coll, then the second etc.
* @param {...*} var_args
*/
cljs.core.interleave = (function() {
var interleave = null;
var interleave__2 = (function (c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons(cljs.core.first(s1),cljs.core.cons(cljs.core.first(s2),interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1),cljs.core.rest(s2))));
} else {
return null;
}
}),null,null));
});
var interleave__3 = (function() { 
var G__23665__delegate = function (c1,c2,colls){
return (new cljs.core.LazySeq(null,(function (){
var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c2,cljs.core.array_seq([c1], 0)));
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),cljs.core.apply.cljs$core$IFn$_invoke$arity$2(interleave,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
};
var G__23665 = function (c1,c2,var_args){
var colls = null;
if (arguments.length > 2) {
var G__23666__i = 0, G__23666__a = new Array(arguments.length -  2);
while (G__23666__i < G__23666__a.length) {G__23666__a[G__23666__i] = arguments[G__23666__i + 2]; ++G__23666__i;}
  colls = new cljs.core.IndexedSeq(G__23666__a,0);
} 
return G__23665__delegate.call(this,c1,c2,colls);};
G__23665.cljs$lang$maxFixedArity = 2;
G__23665.cljs$lang$applyTo = (function (arglist__23667){
var c1 = cljs.core.first(arglist__23667);
arglist__23667 = cljs.core.next(arglist__23667);
var c2 = cljs.core.first(arglist__23667);
var colls = cljs.core.rest(arglist__23667);
return G__23665__delegate(c1,c2,colls);
});
G__23665.cljs$core$IFn$_invoke$arity$variadic = G__23665__delegate;
return G__23665;
})()
;
interleave = function(c1,c2,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return interleave__2.call(this,c1,c2);
default:
var G__23668 = null;
if (arguments.length > 2) {
var G__23669__i = 0, G__23669__a = new Array(arguments.length -  2);
while (G__23669__i < G__23669__a.length) {G__23669__a[G__23669__i] = arguments[G__23669__i + 2]; ++G__23669__i;}
G__23668 = new cljs.core.IndexedSeq(G__23669__a,0);
}
return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1,c2, G__23668);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interleave.cljs$lang$maxFixedArity = 2;
interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
return interleave;
})()
;
/**
* Returns a lazy seq of the elements of coll separated by sep
*/
cljs.core.interpose = (function() {
var interpose = null;
var interpose__1 = (function (sep){
return (function (rf){
var started = cljs.core.volatile_BANG_(false);
return ((function (started){
return (function() {
var G__23684 = null;
var G__23684__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__23684__1 = (function (result){
var G__23677 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__23677) : rf.call(null,G__23677));
});
var G__23684__2 = (function (result,input){
if(cljs.core.truth_(cljs.core.deref(started))){
var sepr = (function (){var G__23678 = result;
var G__23679 = sep;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__23678,G__23679) : rf.call(null,G__23678,G__23679));
})();
if(cljs.core.reduced_QMARK_(sepr)){
return sepr;
} else {
var G__23680 = sepr;
var G__23681 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__23680,G__23681) : rf.call(null,G__23680,G__23681));
}
} else {
cljs.core.vreset_BANG_(started,true);

var G__23682 = result;
var G__23683 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__23682,G__23683) : rf.call(null,G__23682,G__23683));
}
});
G__23684 = function(result,input){
switch(arguments.length){
case 0:
return G__23684__0.call(this);
case 1:
return G__23684__1.call(this,result);
case 2:
return G__23684__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23684.cljs$core$IFn$_invoke$arity$0 = G__23684__0;
G__23684.cljs$core$IFn$_invoke$arity$1 = G__23684__1;
G__23684.cljs$core$IFn$_invoke$arity$2 = G__23684__2;
return G__23684;
})()
;})(started))
});
});
var interpose__2 = (function (sep,coll){
return cljs.core.drop.cljs$core$IFn$_invoke$arity$2((1),cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep),coll));
});
interpose = function(sep,coll){
switch(arguments.length){
case 1:
return interpose__1.call(this,sep);
case 2:
return interpose__2.call(this,sep,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interpose.cljs$core$IFn$_invoke$arity$1 = interpose__1;
interpose.cljs$core$IFn$_invoke$arity$2 = interpose__2;
return interpose;
})()
;
/**
* Take a collection of collections, and return a lazy seq
* of items from the inner collection
*/
cljs.core.flatten1 = (function flatten1(colls){
var cat = (function cat(coll,colls__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var coll__$1 = temp__4124__auto__;
return cljs.core.cons(cljs.core.first(coll__$1),cat(cljs.core.rest(coll__$1),colls__$1));
} else {
if(cljs.core.seq(colls__$1)){
return cat(cljs.core.first(colls__$1),cljs.core.rest(colls__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(null,colls);
});
/**
* Returns the result of applying concat to the result of applying map
* to f and colls.  Thus function f should return a collection. Returns
* a transducer when no collections are provided
* @param {...*} var_args
*/
cljs.core.mapcat = (function() {
var mapcat = null;
var mapcat__1 = (function (f){
return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f),cljs.core.cat);
});
var mapcat__2 = (function() { 
var G__23693__delegate = function (f,colls){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat,cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map,f,colls));
};
var G__23693 = function (f,var_args){
var colls = null;
if (arguments.length > 1) {
var G__23694__i = 0, G__23694__a = new Array(arguments.length -  1);
while (G__23694__i < G__23694__a.length) {G__23694__a[G__23694__i] = arguments[G__23694__i + 1]; ++G__23694__i;}
  colls = new cljs.core.IndexedSeq(G__23694__a,0);
} 
return G__23693__delegate.call(this,f,colls);};
G__23693.cljs$lang$maxFixedArity = 1;
G__23693.cljs$lang$applyTo = (function (arglist__23695){
var f = cljs.core.first(arglist__23695);
var colls = cljs.core.rest(arglist__23695);
return G__23693__delegate(f,colls);
});
G__23693.cljs$core$IFn$_invoke$arity$variadic = G__23693__delegate;
return G__23693;
})()
;
mapcat = function(f,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return mapcat__1.call(this,f);
default:
var G__23696 = null;
if (arguments.length > 1) {
var G__23697__i = 0, G__23697__a = new Array(arguments.length -  1);
while (G__23697__i < G__23697__a.length) {G__23697__a[G__23697__i] = arguments[G__23697__i + 1]; ++G__23697__i;}
G__23696 = new cljs.core.IndexedSeq(G__23697__a,0);
}
return mapcat__2.cljs$core$IFn$_invoke$arity$variadic(f, G__23696);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapcat.cljs$lang$maxFixedArity = 1;
mapcat.cljs$lang$applyTo = mapcat__2.cljs$lang$applyTo;
mapcat.cljs$core$IFn$_invoke$arity$1 = mapcat__1;
mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__2.cljs$core$IFn$_invoke$arity$variadic;
return mapcat;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.filter = (function() {
var filter = null;
var filter__1 = (function (pred){
return (function (rf){
return (function() {
var G__23716 = null;
var G__23716__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__23716__1 = (function (result){
var G__23710 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__23710) : rf.call(null,G__23710));
});
var G__23716__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__23711 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__23711) : pred.call(null,G__23711));
})())){
var G__23712 = result;
var G__23713 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__23712,G__23713) : rf.call(null,G__23712,G__23713));
} else {
return result;
}
});
G__23716 = function(result,input){
switch(arguments.length){
case 0:
return G__23716__0.call(this);
case 1:
return G__23716__1.call(this,result);
case 2:
return G__23716__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23716.cljs$core$IFn$_invoke$arity$0 = G__23716__0;
G__23716.cljs$core$IFn$_invoke$arity$1 = G__23716__1;
G__23716.cljs$core$IFn$_invoke$arity$2 = G__23716__2;
return G__23716;
})()
});
});
var filter__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__12487__auto___23717 = size;
var i_23718 = (0);
while(true){
if((i_23718 < n__12487__auto___23717)){
if(cljs.core.truth_((function (){var G__23714 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_23718);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__23714) : pred.call(null,G__23714));
})())){
cljs.core.chunk_append(b,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_23718));
} else {
}

var G__23719 = (i_23718 + (1));
i_23718 = G__23719;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),filter.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.chunk_rest(s)));
} else {
var f = cljs.core.first(s);
var r = cljs.core.rest(s);
if(cljs.core.truth_((function (){var G__23715 = f;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__23715) : pred.call(null,G__23715));
})())){
return cljs.core.cons(f,filter.cljs$core$IFn$_invoke$arity$2(pred,r));
} else {
return filter.cljs$core$IFn$_invoke$arity$2(pred,r);
}
}
} else {
return null;
}
}),null,null));
});
filter = function(pred,coll){
switch(arguments.length){
case 1:
return filter__1.call(this,pred);
case 2:
return filter__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
filter.cljs$core$IFn$_invoke$arity$1 = filter__1;
filter.cljs$core$IFn$_invoke$arity$2 = filter__2;
return filter;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns false. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.remove = (function() {
var remove = null;
var remove__1 = (function (pred){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
});
var remove__2 = (function (pred,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred),coll);
});
remove = function(pred,coll){
switch(arguments.length){
case 1:
return remove__1.call(this,pred);
case 2:
return remove__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
remove.cljs$core$IFn$_invoke$arity$1 = remove__1;
remove.cljs$core$IFn$_invoke$arity$2 = remove__2;
return remove;
})()
;
/**
* Returns a lazy sequence of the nodes in a tree, via a depth-first walk.
* branch? must be a fn of one arg that returns true if passed a node
* that can have children (but may not).  children must be a fn of one
* arg that returns a sequence of the children. Will only be called on
* nodes for which branch? returns true. Root is the root node of the
* tree.
*/
cljs.core.tree_seq = (function tree_seq(branch_QMARK_,children,root){
var walk = (function walk(node){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(node,(cljs.core.truth_((function (){var G__23726 = node;
return (branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(G__23726) : branch_QMARK_.call(null,G__23726));
})())?cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(walk,cljs.core.array_seq([(function (){var G__23727 = node;
return (children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(G__23727) : children.call(null,G__23727));
})()], 0)):null));
}),null,null));
});
return walk(root);
});
/**
* Takes any nested combination of sequential things (lists, vectors,
* etc.) and returns their contents as a single, flat sequence.
* (flatten nil) returns nil.
*/
cljs.core.flatten = (function flatten(x){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p1__23728_SHARP_){
return !(cljs.core.sequential_QMARK_(p1__23728_SHARP_));
}),cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_,cljs.core.seq,x)));
});
/**
* Returns a new coll consisting of to-coll with all of the items of
* from-coll conjoined. A transducer may be supplied.
*/
cljs.core.into = (function() {
var into = null;
var into__2 = (function (to,from){
if(!((to == null))){
if((function (){var G__23731 = to;
if(G__23731){
var bit__12274__auto__ = (G__23731.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__12274__auto__) || (G__23731.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,to,from);
}
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,from);
}
});
var into__3 = (function (to,xform,from){
if((function (){var G__23732 = to;
if(G__23732){
var bit__12274__auto__ = (G__23732.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__12274__auto__) || (G__23732.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj,to,from);
}
});
into = function(to,xform,from){
switch(arguments.length){
case 2:
return into__2.call(this,to,xform);
case 3:
return into__3.call(this,to,xform,from);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into.cljs$core$IFn$_invoke$arity$2 = into__2;
into.cljs$core$IFn$_invoke$arity$3 = into__3;
return into;
})()
;
/**
* Returns a vector consisting of the result of applying f to the
* set of first items of each coll, followed by applying f to the set
* of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments.
* @param {...*} var_args
*/
cljs.core.mapv = (function() {
var mapv = null;
var mapv__2 = (function (f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,(function (){var G__23734 = o;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23734) : f.call(null,G__23734));
})());
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
var mapv__3 = (function (f,c1,c2){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$3(f,c1,c2));
});
var mapv__4 = (function (f,c1,c2,c3){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$4(f,c1,c2,c3));
});
var mapv__5 = (function() { 
var G__23735__delegate = function (f,c1,c2,c3,colls){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map,f,c1,c2,c3,cljs.core.array_seq([colls], 0)));
};
var G__23735 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__23736__i = 0, G__23736__a = new Array(arguments.length -  4);
while (G__23736__i < G__23736__a.length) {G__23736__a[G__23736__i] = arguments[G__23736__i + 4]; ++G__23736__i;}
  colls = new cljs.core.IndexedSeq(G__23736__a,0);
} 
return G__23735__delegate.call(this,f,c1,c2,c3,colls);};
G__23735.cljs$lang$maxFixedArity = 4;
G__23735.cljs$lang$applyTo = (function (arglist__23737){
var f = cljs.core.first(arglist__23737);
arglist__23737 = cljs.core.next(arglist__23737);
var c1 = cljs.core.first(arglist__23737);
arglist__23737 = cljs.core.next(arglist__23737);
var c2 = cljs.core.first(arglist__23737);
arglist__23737 = cljs.core.next(arglist__23737);
var c3 = cljs.core.first(arglist__23737);
var colls = cljs.core.rest(arglist__23737);
return G__23735__delegate(f,c1,c2,c3,colls);
});
G__23735.cljs$core$IFn$_invoke$arity$variadic = G__23735__delegate;
return G__23735;
})()
;
mapv = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return mapv__2.call(this,f,c1);
case 3:
return mapv__3.call(this,f,c1,c2);
case 4:
return mapv__4.call(this,f,c1,c2,c3);
default:
var G__23738 = null;
if (arguments.length > 4) {
var G__23739__i = 0, G__23739__a = new Array(arguments.length -  4);
while (G__23739__i < G__23739__a.length) {G__23739__a[G__23739__i] = arguments[G__23739__i + 4]; ++G__23739__i;}
G__23738 = new cljs.core.IndexedSeq(G__23739__a,0);
}
return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__23738);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapv.cljs$lang$maxFixedArity = 4;
mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
return mapv;
})()
;
/**
* Returns a vector of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
*/
cljs.core.filterv = (function filterv(pred,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
if(cljs.core.truth_((function (){var G__23741 = o;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__23741) : pred.call(null,G__23741));
})())){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,o);
} else {
return v;
}
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
/**
* Returns a lazy sequence of lists of n items each, at offsets step
* apart. If step is not supplied, defaults to n, i.e. the partitions
* do not overlap. If a pad collection is supplied, use its elements as
* necessary to complete last partition up to n items. In case there are
* not enough padding elements, return a partition with less than n items.
*/
cljs.core.partition = (function() {
var partition = null;
var partition__2 = (function (n,coll){
return partition.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
var partition__4 = (function (n,step,pad,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$4(n,step,pad,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p,pad)));
}
} else {
return null;
}
}),null,null));
});
partition = function(n,step,pad,coll){
switch(arguments.length){
case 2:
return partition__2.call(this,n,step);
case 3:
return partition__3.call(this,n,step,pad);
case 4:
return partition__4.call(this,n,step,pad,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
return partition;
})()
;
/**
* Returns the value in a nested associative structure,
* where ks is a sequence of keys. Returns nil if the key is not present,
* or the not-found value if supplied.
*/
cljs.core.get_in = (function() {
var get_in = null;
var get_in__2 = (function (m,ks){
return get_in.cljs$core$IFn$_invoke$arity$3(m,ks,null);
});
var get_in__3 = (function (m,ks,not_found){
var sentinel = cljs.core.lookup_sentinel;
var m__$1 = m;
var ks__$1 = cljs.core.seq(ks);
while(true){
if(ks__$1){
if(!((function (){var G__23756 = m__$1;
if(G__23756){
var bit__12281__auto__ = (G__23756.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__12281__auto__) || (G__23756.cljs$core$ILookup$)){
return true;
} else {
if((!G__23756.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__23756);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__23756);
}
})())){
return not_found;
} else {
var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1,cljs.core.first(ks__$1),sentinel);
if((sentinel === m__$2)){
return not_found;
} else {
var G__23757 = sentinel;
var G__23758 = m__$2;
var G__23759 = cljs.core.next(ks__$1);
sentinel = G__23757;
m__$1 = G__23758;
ks__$1 = G__23759;
continue;
}
}
} else {
return m__$1;
}
break;
}
});
get_in = function(m,ks,not_found){
switch(arguments.length){
case 2:
return get_in__2.call(this,m,ks);
case 3:
return get_in__3.call(this,m,ks,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
return get_in;
})()
;
/**
* Associates a value in a nested associative structure, where ks is a
* sequence of keys and v is the new value and returns a new nested structure.
* If any levels do not exist, hash-maps will be created.
*/
cljs.core.assoc_in = (function assoc_in(m,p__23760,v){
var vec__23765 = p__23760;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23765,(0),null);
var ks = cljs.core.nthnext(vec__23765,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,v));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
/**
* 'Updates' a value in a nested associative structure, where ks is a
* sequence of keys and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* nested structure.  If any levels do not exist, hash-maps will be
* created.
* @param {...*} var_args
*/
cljs.core.update_in = (function() {
var update_in = null;
var update_in__3 = (function (m,p__23766,f){
var vec__23804 = p__23766;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23804,(0),null);
var ks = cljs.core.nthnext(vec__23804,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__23805 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23805) : f.call(null,G__23805));
})());
}
});
var update_in__4 = (function (m,p__23767,f,a){
var vec__23806 = p__23767;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23806,(0),null);
var ks = cljs.core.nthnext(vec__23806,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__23807 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__23808 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23807,G__23808) : f.call(null,G__23807,G__23808));
})());
}
});
var update_in__5 = (function (m,p__23768,f,a,b){
var vec__23809 = p__23768;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23809,(0),null);
var ks = cljs.core.nthnext(vec__23809,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__23810 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__23811 = a;
var G__23812 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__23810,G__23811,G__23812) : f.call(null,G__23810,G__23811,G__23812));
})());
}
});
var update_in__6 = (function (m,p__23769,f,a,b,c){
var vec__23813 = p__23769;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23813,(0),null);
var ks = cljs.core.nthnext(vec__23813,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b,c));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__23814 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__23815 = a;
var G__23816 = b;
var G__23817 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__23814,G__23815,G__23816,G__23817) : f.call(null,G__23814,G__23815,G__23816,G__23817));
})());
}
});
var update_in__7 = (function() { 
var G__23819__delegate = function (m,p__23770,f,a,b,c,args){
var vec__23818 = p__23770;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23818,(0),null);
var ks = cljs.core.nthnext(vec__23818,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(update_in,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,cljs.core.array_seq([b,c,args], 0)));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),a,b,c,cljs.core.array_seq([args], 0)));
}
};
var G__23819 = function (m,p__23770,f,a,b,c,var_args){
var args = null;
if (arguments.length > 6) {
var G__23820__i = 0, G__23820__a = new Array(arguments.length -  6);
while (G__23820__i < G__23820__a.length) {G__23820__a[G__23820__i] = arguments[G__23820__i + 6]; ++G__23820__i;}
  args = new cljs.core.IndexedSeq(G__23820__a,0);
} 
return G__23819__delegate.call(this,m,p__23770,f,a,b,c,args);};
G__23819.cljs$lang$maxFixedArity = 6;
G__23819.cljs$lang$applyTo = (function (arglist__23821){
var m = cljs.core.first(arglist__23821);
arglist__23821 = cljs.core.next(arglist__23821);
var p__23770 = cljs.core.first(arglist__23821);
arglist__23821 = cljs.core.next(arglist__23821);
var f = cljs.core.first(arglist__23821);
arglist__23821 = cljs.core.next(arglist__23821);
var a = cljs.core.first(arglist__23821);
arglist__23821 = cljs.core.next(arglist__23821);
var b = cljs.core.first(arglist__23821);
arglist__23821 = cljs.core.next(arglist__23821);
var c = cljs.core.first(arglist__23821);
var args = cljs.core.rest(arglist__23821);
return G__23819__delegate(m,p__23770,f,a,b,c,args);
});
G__23819.cljs$core$IFn$_invoke$arity$variadic = G__23819__delegate;
return G__23819;
})()
;
update_in = function(m,p__23770,f,a,b,c,var_args){
var args = var_args;
switch(arguments.length){
case 3:
return update_in__3.call(this,m,p__23770,f);
case 4:
return update_in__4.call(this,m,p__23770,f,a);
case 5:
return update_in__5.call(this,m,p__23770,f,a,b);
case 6:
return update_in__6.call(this,m,p__23770,f,a,b,c);
default:
var G__23822 = null;
if (arguments.length > 6) {
var G__23823__i = 0, G__23823__a = new Array(arguments.length -  6);
while (G__23823__i < G__23823__a.length) {G__23823__a[G__23823__i] = arguments[G__23823__i + 6]; ++G__23823__i;}
G__23822 = new cljs.core.IndexedSeq(G__23823__a,0);
}
return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m,p__23770,f,a,b,c, G__23822);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update_in.cljs$lang$maxFixedArity = 6;
update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
return update_in;
})()
;
/**
* 'Updates' a value in an associative structure, where k is a
* key and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* structure.  If the key does not exist, nil is passed as the old value.
* @param {...*} var_args
*/
cljs.core.update = (function() {
var update = null;
var update__3 = (function (m,k,f){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__23834 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23834) : f.call(null,G__23834));
})());
});
var update__4 = (function (m,k,f,x){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__23835 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__23836 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23835,G__23836) : f.call(null,G__23835,G__23836));
})());
});
var update__5 = (function (m,k,f,x,y){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__23837 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__23838 = x;
var G__23839 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__23837,G__23838,G__23839) : f.call(null,G__23837,G__23838,G__23839));
})());
});
var update__6 = (function (m,k,f,x,y,z){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__23840 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__23841 = x;
var G__23842 = y;
var G__23843 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__23840,G__23841,G__23842,G__23843) : f.call(null,G__23840,G__23841,G__23842,G__23843));
})());
});
var update__7 = (function() { 
var G__23844__delegate = function (m,k,f,x,y,z,more){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),x,y,z,cljs.core.array_seq([more], 0)));
};
var G__23844 = function (m,k,f,x,y,z,var_args){
var more = null;
if (arguments.length > 6) {
var G__23845__i = 0, G__23845__a = new Array(arguments.length -  6);
while (G__23845__i < G__23845__a.length) {G__23845__a[G__23845__i] = arguments[G__23845__i + 6]; ++G__23845__i;}
  more = new cljs.core.IndexedSeq(G__23845__a,0);
} 
return G__23844__delegate.call(this,m,k,f,x,y,z,more);};
G__23844.cljs$lang$maxFixedArity = 6;
G__23844.cljs$lang$applyTo = (function (arglist__23846){
var m = cljs.core.first(arglist__23846);
arglist__23846 = cljs.core.next(arglist__23846);
var k = cljs.core.first(arglist__23846);
arglist__23846 = cljs.core.next(arglist__23846);
var f = cljs.core.first(arglist__23846);
arglist__23846 = cljs.core.next(arglist__23846);
var x = cljs.core.first(arglist__23846);
arglist__23846 = cljs.core.next(arglist__23846);
var y = cljs.core.first(arglist__23846);
arglist__23846 = cljs.core.next(arglist__23846);
var z = cljs.core.first(arglist__23846);
var more = cljs.core.rest(arglist__23846);
return G__23844__delegate(m,k,f,x,y,z,more);
});
G__23844.cljs$core$IFn$_invoke$arity$variadic = G__23844__delegate;
return G__23844;
})()
;
update = function(m,k,f,x,y,z,var_args){
var more = var_args;
switch(arguments.length){
case 3:
return update__3.call(this,m,k,f);
case 4:
return update__4.call(this,m,k,f,x);
case 5:
return update__5.call(this,m,k,f,x,y);
case 6:
return update__6.call(this,m,k,f,x,y,z);
default:
var G__23847 = null;
if (arguments.length > 6) {
var G__23848__i = 0, G__23848__a = new Array(arguments.length -  6);
while (G__23848__i < G__23848__a.length) {G__23848__a[G__23848__i] = arguments[G__23848__i + 6]; ++G__23848__i;}
G__23847 = new cljs.core.IndexedSeq(G__23848__a,0);
}
return update__7.cljs$core$IFn$_invoke$arity$variadic(m,k,f,x,y,z, G__23847);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update.cljs$lang$maxFixedArity = 6;
update.cljs$lang$applyTo = update__7.cljs$lang$applyTo;
update.cljs$core$IFn$_invoke$arity$3 = update__3;
update.cljs$core$IFn$_invoke$arity$4 = update__4;
update.cljs$core$IFn$_invoke$arity$5 = update__5;
update.cljs$core$IFn$_invoke$arity$6 = update__6;
update.cljs$core$IFn$_invoke$arity$variadic = update__7.cljs$core$IFn$_invoke$arity$variadic;
return update;
})()
;

/**
* @constructor
*/
cljs.core.VectorNode = (function (edit,arr){
this.edit = edit;
this.arr = arr;
})

cljs.core.VectorNode.cljs$lang$type = true;

cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";

cljs.core.VectorNode.cljs$lang$ctorPrWriter = (function (this__12187__auto__,writer__12188__auto__,opt__12189__auto__){
return cljs.core._write(writer__12188__auto__,"cljs.core/VectorNode");
});

cljs.core.__GT_VectorNode = (function __GT_VectorNode(edit,arr){
return (new cljs.core.VectorNode(edit,arr));
});

cljs.core.pv_fresh_node = (function pv_fresh_node(edit){
return (new cljs.core.VectorNode(edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
});
cljs.core.pv_aget = (function pv_aget(node,idx){
return (node.arr[idx]);
});
cljs.core.pv_aset = (function pv_aset(node,idx,val){
return (node.arr[idx] = val);
});
cljs.core.pv_clone_node = (function pv_clone_node(node){
return (new cljs.core.VectorNode(node.edit,cljs.core.aclone(node.arr)));
});
cljs.core.tail_off = (function tail_off(pv){
var cnt = pv.cnt;
if((cnt < (32))){
return (0);
} else {
return (((cnt - (1)) >>> (5)) << (5));
}
});
cljs.core.new_path = (function new_path(edit,level,node){
var ll = level;
var ret = node;
while(true){
if((ll === (0))){
return ret;
} else {
var embed = ret;
var r = cljs.core.pv_fresh_node(edit);
var _ = cljs.core.pv_aset(r,(0),embed);
var G__23849 = (ll - (5));
var G__23850 = r;
ll = G__23849;
ret = G__23850;
continue;
}
break;
}
});
cljs.core.push_tail = (function push_tail(pv,level,parent,tailnode){
var ret = cljs.core.pv_clone_node(parent);
var subidx = (((pv.cnt - (1)) >>> level) & (31));
if(((5) === level)){
cljs.core.pv_aset(ret,subidx,tailnode);

return ret;
} else {
var child = cljs.core.pv_aget(parent,subidx);
if(!((child == null))){
var node_to_insert = push_tail(pv,(level - (5)),child,tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
} else {
var node_to_insert = cljs.core.new_path(null,(level - (5)),tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
}
}
});
cljs.core.vector_index_out_of_bounds = (function vector_index_out_of_bounds(i,cnt){
throw (new Error([cljs.core.str("No item "),cljs.core.str(i),cljs.core.str(" in vector of length "),cljs.core.str(cnt)].join('')));
});
cljs.core.first_array_for_longvec = (function first_array_for_longvec(pv){
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__23855 = cljs.core.pv_aget(node,(0));
var G__23856 = (level - (5));
node = G__23855;
level = G__23856;
continue;
} else {
return node.arr;
}
break;
}
});
cljs.core.unchecked_array_for = (function unchecked_array_for(pv,i){
if((i >= cljs.core.tail_off(pv))){
return pv.tail;
} else {
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__23857 = cljs.core.pv_aget(node,((i >>> level) & (31)));
var G__23858 = (level - (5));
node = G__23857;
level = G__23858;
continue;
} else {
return node.arr;
}
break;
}
}
});
cljs.core.array_for = (function array_for(pv,i){
if((((0) <= i)) && ((i < pv.cnt))){
return cljs.core.unchecked_array_for(pv,i);
} else {
return cljs.core.vector_index_out_of_bounds(i,pv.cnt);
}
});
cljs.core.do_assoc = (function do_assoc(pv,level,node,i,val){
var ret = cljs.core.pv_clone_node(node);
if((level === (0))){
cljs.core.pv_aset(ret,(i & (31)),val);

return ret;
} else {
var subidx = ((i >>> level) & (31));
cljs.core.pv_aset(ret,subidx,do_assoc(pv,(level - (5)),cljs.core.pv_aget(node,subidx),i,val));

return ret;
}
});
cljs.core.pop_tail = (function pop_tail(pv,level,node){
var subidx = (((pv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = pop_tail(pv,(level - (5)),cljs.core.pv_aget(node,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,new_child);

return ret;
}
} else {
if((subidx === (0))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,null);

return ret;

}
}
});

/**
* @constructor
*/
cljs.core.RangedIterator = (function (i,base,arr,v,start,end){
this.i = i;
this.base = base;
this.arr = arr;
this.v = v;
this.start = start;
this.end = end;
})
cljs.core.RangedIterator.prototype.hasNext = (function (){
var self__ = this;
var this$ = this;
return (self__.i < self__.end);
});

cljs.core.RangedIterator.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(((self__.i - self__.base) === (32))){
self__.arr = cljs.core.unchecked_array_for(self__.v,self__.i);

self__.base = (self__.base + (32));
} else {
}

var ret = (self__.arr[(self__.i & (31))]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.RangedIterator.cljs$lang$type = true;

cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";

cljs.core.RangedIterator.cljs$lang$ctorPrWriter = (function (this__12187__auto__,writer__12188__auto__,opt__12189__auto__){
return cljs.core._write(writer__12188__auto__,"cljs.core/RangedIterator");
});

cljs.core.__GT_RangedIterator = (function __GT_RangedIterator(i,base,arr,v,start,end){
return (new cljs.core.RangedIterator(i,base,arr,v,start,end));
});

cljs.core.ranged_iterator = (function ranged_iterator(v,start,end){
var i = start;
return (new cljs.core.RangedIterator(i,(i - (i % (32))),(((start < cljs.core.count(v)))?cljs.core.unchecked_array_for(v,i):null),v,start,end));
});







/**
* @constructor
*/
cljs.core.PersistentVector = (function (meta,cnt,shift,root,tail,__hash){
this.meta = meta;
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 167668511;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentVector.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentVector.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__23868 = init__$2;
var G__23869 = (j + i);
var G__23870 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__23868,G__23869,G__23870) : f.call(null,G__23868,G__23869,G__23870));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__23881 = (j + (1));
var G__23882 = init__$3;
j = G__23881;
init__$2 = G__23882;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__23871 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23871) : cljs.core.deref.call(null,G__23871));
} else {
var G__23883 = (i + len);
var G__23884 = init__$2;
i = G__23883;
init__$1 = G__23884;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return (cljs.core.unchecked_array_for(coll__$1,n)[(n & (31))]);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(coll__$1) <= n)){
var new_tail = cljs.core.aclone(self__.tail);
(new_tail[(n & (31))] = val);

return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,cljs.core.do_assoc(coll__$1,self__.shift,self__.root,n,val),self__.tail,null));
}
} else {
if((n === self__.cnt)){
return cljs.core._conj(coll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds  [0,"),cljs.core.str(self__.cnt),cljs.core.str("]")].join('')));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.ranged_iterator(this$__$1,(0),self__.cnt);
});

cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(0));
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(1));
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(self__.cnt - (1)));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
} else {
if(((1) < (self__.cnt - cljs.core.tail_off(coll__$1)))){
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt - (1)),self__.shift,self__.root,self__.tail.slice((0),(-1)),null));
} else {
var new_tail = cljs.core.unchecked_array_for(coll__$1,(self__.cnt - (2)));
var nr = cljs.core.pop_tail(coll__$1,self__.shift,self__.root);
var new_root = (((nr == null))?cljs.core.PersistentVector.EMPTY_NODE:nr);
var cnt_1 = (self__.cnt - (1));
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
return (new cljs.core.PersistentVector(self__.meta,cnt_1,(self__.shift - (5)),cljs.core.pv_aget(new_root,(0)),new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,cnt_1,self__.shift,new_root,new_tail,null));
}

}
}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return (new cljs.core.RSeq(coll__$1,(self__.cnt - (1)),null));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__12021__auto__ = self__.__hash;
if(!((h__12021__auto__ == null))){
return h__12021__auto__;
} else {
var h__12021__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__12021__auto____$1;

return h__12021__auto____$1;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((other instanceof cljs.core.PersistentVector)){
if((self__.cnt === cljs.core.count(other))){
var me_iter = cljs.core._iterator(coll__$1);
var you_iter = cljs.core._iterator(other);
while(true){
if(cljs.core.truth_(me_iter.hasNext())){
var x = me_iter.next();
var y = you_iter.next();
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
continue;
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_sequential(coll__$1,other);
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientVector(self__.cnt,self__.shift,(function (){var G__23872 = self__.root;
return (cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(G__23872) : cljs.core.tv_editable_root.call(null,G__23872));
})(),(function (){var G__23873 = self__.tail;
return (cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(G__23873) : cljs.core.tv_editable_tail.call(null,G__23873));
})()));
});

cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (v,f){
var self__ = this;
var v__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1,f);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__23874 = init__$2;
var G__23875 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23874,G__23875) : f.call(null,G__23874,G__23875));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__23885 = (j + (1));
var G__23886 = init__$3;
j = G__23885;
init__$2 = G__23886;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__23876 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23876) : cljs.core.deref.call(null,G__23876));
} else {
var G__23887 = (i + len);
var G__23888 = init__$2;
i = G__23887;
init__$1 = G__23888;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._assoc_n(coll__$1,k,v);
} else {
throw (new Error("Vector's key for assoc must be a number."));
}
});

cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
return null;
} else {
if((self__.cnt <= (32))){
return (new cljs.core.IndexedSeq(self__.tail,(0)));
} else {
var G__23877 = coll__$1;
var G__23878 = cljs.core.first_array_for_longvec(coll__$1);
var G__23879 = (0);
var G__23880 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__23877,G__23878,G__23879,G__23880) : cljs.core.chunked_seq.call(null,G__23877,G__23878,G__23879,G__23880));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentVector(meta__$1,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(((self__.cnt - cljs.core.tail_off(coll__$1)) < (32))){
var len = self__.tail.length;
var new_tail = (new Array((len + (1))));
var n__12487__auto___23889 = len;
var i_23890 = (0);
while(true){
if((i_23890 < n__12487__auto___23889)){
(new_tail[i_23890] = (self__.tail[i_23890]));

var G__23891 = (i_23890 + (1));
i_23890 = G__23891;
continue;
} else {
}
break;
}

(new_tail[len] = o);

return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),self__.shift,self__.root,new_tail,null));
} else {
var root_overflow_QMARK_ = ((self__.cnt >>> (5)) > ((1) << self__.shift));
var new_shift = ((root_overflow_QMARK_)?(self__.shift + (5)):self__.shift);
var new_root = ((root_overflow_QMARK_)?(function (){var n_r = cljs.core.pv_fresh_node(null);
cljs.core.pv_aset(n_r,(0),self__.root);

cljs.core.pv_aset(n_r,(1),cljs.core.new_path(null,self__.shift,(new cljs.core.VectorNode(null,self__.tail))));

return n_r;
})():cljs.core.push_tail(coll__$1,self__.shift,self__.root,(new cljs.core.VectorNode(null,self__.tail))));
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),new_shift,new_root,[o],null));
}
});

cljs.core.PersistentVector.prototype.call = (function() {
var G__23892 = null;
var G__23892__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__23892__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__23892 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__23892__2.call(this,self__,k);
case 3:
return G__23892__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23892.cljs$core$IFn$_invoke$arity$2 = G__23892__2;
G__23892.cljs$core$IFn$_invoke$arity$3 = G__23892__3;
return G__23892;
})()
;

cljs.core.PersistentVector.prototype.apply = (function (self__,args23867){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args23867)));
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.PersistentVector.cljs$lang$type = true;

cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";

cljs.core.PersistentVector.cljs$lang$ctorPrWriter = (function (this__12187__auto__,writer__12188__auto__,opt__12189__auto__){
return cljs.core._write(writer__12188__auto__,"cljs.core/PersistentVector");
});

cljs.core.__GT_PersistentVector = (function __GT_PersistentVector(meta,cnt,shift,root,tail,__hash){
return (new cljs.core.PersistentVector(meta,cnt,shift,root,tail,__hash));
});

cljs.core.PersistentVector.EMPTY_NODE = (new cljs.core.VectorNode(null,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
cljs.core.PersistentVector.EMPTY = (new cljs.core.PersistentVector(null,(0),(5),cljs.core.PersistentVector.EMPTY_NODE,[],cljs.core.empty_ordered_hash));
cljs.core.PersistentVector.fromArray = (function (xs,no_clone){
var l = xs.length;
var xs__$1 = ((no_clone)?xs:cljs.core.aclone(xs));
if((l < (32))){
return (new cljs.core.PersistentVector(null,l,(5),cljs.core.PersistentVector.EMPTY_NODE,xs__$1,null));
} else {
var node = xs__$1.slice((0),(32));
var v = (new cljs.core.PersistentVector(null,(32),(5),cljs.core.PersistentVector.EMPTY_NODE,node,null));
var i = (32);
var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
while(true){
if((i < l)){
var G__23893 = (i + (1));
var G__23894 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out,(xs__$1[i]));
i = G__23893;
out = G__23894;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__12578__auto__ = this;
return cljs.core.es6_iterator(this__12578__auto__);
}));
cljs.core.vec = (function vec(coll){
if(coll instanceof Array){
return cljs.core.PersistentVector.fromArray(coll,true);
} else {
return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core._as_transient(cljs.core.PersistentVector.EMPTY),coll));
}
});
/**
* @param {...*} var_args
*/
cljs.core.vector = (function() { 
var vector__delegate = function (args){
if(((args instanceof cljs.core.IndexedSeq)) && ((args.i === (0)))){
return cljs.core.PersistentVector.fromArray(args.arr,true);
} else {
return cljs.core.vec(args);
}
};
var vector = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__23895__i = 0, G__23895__a = new Array(arguments.length -  0);
while (G__23895__i < G__23895__a.length) {G__23895__a[G__23895__i] = arguments[G__23895__i + 0]; ++G__23895__i;}
  args = new cljs.core.IndexedSeq(G__23895__a,0);
} 
return vector__delegate.call(this,args);};
vector.cljs$lang$maxFixedArity = 0;
vector.cljs$lang$applyTo = (function (arglist__23896){
var args = cljs.core.seq(arglist__23896);
return vector__delegate(args);
});
vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
return vector;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedSeq = (function (vec,node,i,off,meta,__hash){
this.vec = vec;
this.node = node;
this.i = i;
this.off = off;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375020;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__23897 = self__.vec;
var G__23898 = self__.node;
var G__23899 = self__.i;
var G__23900 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__23897,G__23898,G__23899,G__23900) : cljs.core.chunked_seq.call(null,G__23897,G__23898,G__23899,G__23900));
})();
if((s == null)){
return null;
} else {
return s;
}
} else {
return cljs.core._chunked_next(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__12021__auto__ = self__.__hash;
if(!((h__12021__auto__ == null))){
return h__12021__auto__;
} else {
var h__12021__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__12021__auto____$1;

return h__12021__auto____$1;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2((function (){var G__23901 = self__.vec;
var G__23902 = (self__.i + self__.off);
var G__23903 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__23901,G__23902,G__23903) : cljs.core.subvec.call(null,G__23901,G__23902,G__23903));
})(),f);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3((function (){var G__23904 = self__.vec;
var G__23905 = (self__.i + self__.off);
var G__23906 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__23904,G__23905,G__23906) : cljs.core.subvec.call(null,G__23904,G__23905,G__23906));
})(),f,start);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.node[self__.off]);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__23907 = self__.vec;
var G__23908 = self__.node;
var G__23909 = self__.i;
var G__23910 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__23907,G__23908,G__23909,G__23910) : cljs.core.chunked_seq.call(null,G__23907,G__23908,G__23909,G__23910));
})();
if((s == null)){
return cljs.core.List.EMPTY;
} else {
return s;
}
} else {
return cljs.core._chunked_rest(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node,self__.off);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__23911 = self__.vec;
var G__23912 = cljs.core.unchecked_array_for(self__.vec,end);
var G__23913 = end;
var G__23914 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__23911,G__23912,G__23913,G__23914) : cljs.core.chunked_seq.call(null,G__23911,G__23912,G__23913,G__23914));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
var G__23915 = self__.vec;
var G__23916 = self__.node;
var G__23917 = self__.i;
var G__23918 = self__.off;
var G__23919 = m;
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(G__23915,G__23916,G__23917,G__23918,G__23919) : cljs.core.chunked_seq.call(null,G__23915,G__23916,G__23917,G__23918,G__23919));
});

cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__23920 = self__.vec;
var G__23921 = cljs.core.unchecked_array_for(self__.vec,end);
var G__23922 = end;
var G__23923 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__23920,G__23921,G__23922,G__23923) : cljs.core.chunked_seq.call(null,G__23920,G__23921,G__23922,G__23923));
} else {
return null;
}
});

cljs.core.ChunkedSeq.cljs$lang$type = true;

cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";

cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = (function (this__12187__auto__,writer__12188__auto__,opt__12189__auto__){
return cljs.core._write(writer__12188__auto__,"cljs.core/ChunkedSeq");
});

cljs.core.__GT_ChunkedSeq = (function __GT_ChunkedSeq(vec,node,i,off,meta,__hash){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,__hash));
});

(cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__12578__auto__ = this;
return cljs.core.es6_iterator(this__12578__auto__);
}));
cljs.core.chunked_seq = (function() {
var chunked_seq = null;
var chunked_seq__3 = (function (vec,i,off){
return (new cljs.core.ChunkedSeq(vec,cljs.core.array_for(vec,i),i,off,null,null));
});
var chunked_seq__4 = (function (vec,node,i,off){
return (new cljs.core.ChunkedSeq(vec,node,i,off,null,null));
});
var chunked_seq__5 = (function (vec,node,i,off,meta){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,null));
});
chunked_seq = function(vec,node,i,off,meta){
switch(arguments.length){
case 3:
return chunked_seq__3.call(this,vec,node,i);
case 4:
return chunked_seq__4.call(this,vec,node,i,off);
case 5:
return chunked_seq__5.call(this,vec,node,i,off,meta);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
return chunked_seq;
})()
;

/**
* @constructor
*/
cljs.core.Subvec = (function (meta,v,start,end,__hash){
this.meta = meta;
this.v = v;
this.start = start;
this.end = end;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 166617887;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Subvec.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Subvec.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return cljs.core.vector_index_out_of_bounds(n,(self__.end - self__.start));
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.start + n));
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return not_found;
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v,(self__.start + n),not_found);
}
});

cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
var v_pos = (self__.start + n);
var G__23925 = self__.meta;
var G__23926 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v,v_pos,val);
var G__23927 = self__.start;
var G__23928 = (function (){var x__11917__auto__ = self__.end;
var y__11918__auto__ = (v_pos + (1));
return ((x__11917__auto__ > y__11918__auto__) ? x__11917__auto__ : y__11918__auto__);
})();
var G__23929 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__23925,G__23926,G__23927,G__23928,G__23929) : cljs.core.build_subvec.call(null,G__23925,G__23926,G__23927,G__23928,G__23929));
});

cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Subvec(self__.meta,self__.v,self__.start,self__.end,self__.__hash));
});

cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.end - self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.end - (1)));
});

cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.start === self__.end)){
throw (new Error("Can't pop empty vector"));
} else {
var G__23930 = self__.meta;
var G__23931 = self__.v;
var G__23932 = self__.start;
var G__23933 = (self__.end - (1));
var G__23934 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__23930,G__23931,G__23932,G__23933,G__23934) : cljs.core.build_subvec.call(null,G__23930,G__23931,G__23932,G__23933,G__23934));
}
});

cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(!((self__.start === self__.end))){
return (new cljs.core.RSeq(coll__$1,((self__.end - self__.start) - (1)),null));
} else {
return null;
}
});

cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__12021__auto__ = self__.__hash;
if(!((h__12021__auto__ == null))){
return h__12021__auto__;
} else {
var h__12021__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__12021__auto____$1;

return h__12021__auto____$1;
}
});

cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1,f);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start__$1){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1,f,start__$1);
});

cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,key,val){
var self__ = this;
var coll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n(coll__$1,key,val);
} else {
throw (new Error("Subvec's key for assoc must be a number."));
}
});

cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var subvec_seq = ((function (coll__$1){
return (function subvec_seq(i){
if((i === self__.end)){
return null;
} else {
return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,i),(new cljs.core.LazySeq(null,((function (coll__$1){
return (function (){
return subvec_seq((i + (1)));
});})(coll__$1))
,null,null)));
}
});})(coll__$1))
;
return subvec_seq(self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
var G__23936 = meta__$1;
var G__23937 = self__.v;
var G__23938 = self__.start;
var G__23939 = self__.end;
var G__23940 = self__.__hash;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__23936,G__23937,G__23938,G__23939,G__23940) : cljs.core.build_subvec.call(null,G__23936,G__23937,G__23938,G__23939,G__23940));
});

cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__23941 = self__.meta;
var G__23942 = cljs.core._assoc_n(self__.v,self__.end,o);
var G__23943 = self__.start;
var G__23944 = (self__.end + (1));
var G__23945 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__23941,G__23942,G__23943,G__23944,G__23945) : cljs.core.build_subvec.call(null,G__23941,G__23942,G__23943,G__23944,G__23945));
});

cljs.core.Subvec.prototype.call = (function() {
var G__23946 = null;
var G__23946__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__23946__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__23946 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__23946__2.call(this,self__,k);
case 3:
return G__23946__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23946.cljs$core$IFn$_invoke$arity$2 = G__23946__2;
G__23946.cljs$core$IFn$_invoke$arity$3 = G__23946__3;
return G__23946;
})()
;

cljs.core.Subvec.prototype.apply = (function (self__,args23924){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args23924)));
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.Subvec.cljs$lang$type = true;

cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";

cljs.core.Subvec.cljs$lang$ctorPrWriter = (function (this__12187__auto__,writer__12188__auto__,opt__12189__auto__){
return cljs.core._write(writer__12188__auto__,"cljs.core/Subvec");
});

cljs.core.__GT_Subvec = (function __GT_Subvec(meta,v,start,end,__hash){
return (new cljs.core.Subvec(meta,v,start,end,__hash));
});

(cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__12578__auto__ = this;
return cljs.core.es6_iterator(this__12578__auto__);
}));
cljs.core.build_subvec = (function build_subvec(meta,v,start,end,__hash){
while(true){
if((v instanceof cljs.core.Subvec)){
var G__23947 = meta;
var G__23948 = v.v;
var G__23949 = (v.start + start);
var G__23950 = (v.start + end);
var G__23951 = __hash;
meta = G__23947;
v = G__23948;
start = G__23949;
end = G__23950;
__hash = G__23951;
continue;
} else {
var c = cljs.core.count(v);
if(((start < (0))) || ((end < (0))) || ((start > c)) || ((end > c))){
throw (new Error("Index out of bounds"));
} else {
}

return (new cljs.core.Subvec(meta,v,start,end,__hash));
}
break;
}
});
/**
* Returns a persistent vector of the items in vector from
* start (inclusive) to end (exclusive).  If end is not supplied,
* defaults to (count vector). This operation is O(1) and very fast, as
* the resulting vector shares structure with the original and no
* trimming is done.
*/
cljs.core.subvec = (function() {
var subvec = null;
var subvec__2 = (function (v,start){
return subvec.cljs$core$IFn$_invoke$arity$3(v,start,cljs.core.count(v));
});
var subvec__3 = (function (v,start,end){
return cljs.core.build_subvec(null,v,start,end,null);
});
subvec = function(v,start,end){
switch(arguments.length){
case 2:
return subvec__2.call(this,v,start);
case 3:
return subvec__3.call(this,v,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
return subvec;
})()
;
cljs.core.tv_ensure_editable = (function tv_ensure_editable(edit,node){
if((edit === node.edit)){
return node;
} else {
return (new cljs.core.VectorNode(edit,cljs.core.aclone(node.arr)));
}
});
cljs.core.tv_editable_root = (function tv_editable_root(node){
return (new cljs.core.VectorNode((function (){var obj23958 = {};
return obj23958;
})(),cljs.core.aclone(node.arr)));
});
cljs.core.tv_editable_tail = (function tv_editable_tail(tl){
var ret = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
cljs.core.array_copy(tl,(0),ret,(0),tl.length);

return ret;
});
cljs.core.tv_push_tail = (function tv_push_tail(tv,level,parent,tail_node){
var ret = cljs.core.tv_ensure_editable(tv.root.edit,parent);
var subidx = (((tv.cnt - (1)) >>> level) & (31));
cljs.core.pv_aset(ret,subidx,(((level === (5)))?tail_node:(function (){var child = cljs.core.pv_aget(ret,subidx);
if(!((child == null))){
return tv_push_tail(tv,(level - (5)),child,tail_node);
} else {
return cljs.core.new_path(tv.root.edit,(level - (5)),tail_node);
}
})()));

return ret;
});
cljs.core.tv_pop_tail = (function tv_pop_tail(tv,level,node){
var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit,node);
var subidx = (((tv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = tv_pop_tail(tv,(level - (5)),cljs.core.pv_aget(node__$1,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,new_child);

return node__$1;
}
} else {
if((subidx === (0))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,null);

return node__$1;

}
}
});
cljs.core.unchecked_editable_array_for = (function unchecked_editable_array_for(tv,i){
if((i >= cljs.core.tail_off(tv))){
return tv.tail;
} else {
var root = tv.root;
var node = root;
var level = tv.shift;
while(true){
if((level > (0))){
var G__23966 = cljs.core.tv_ensure_editable(root.edit,cljs.core.pv_aget(node,((i >>> level) & (31))));
var G__23967 = (level - (5));
node = G__23966;
level = G__23967;
continue;
} else {
return node.arr;
}
break;
}
}
});

/**
* @constructor
*/
cljs.core.TransientVector = (function (cnt,shift,root,tail){
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.cljs$lang$protocol_mask$partition0$ = 275;
this.cljs$lang$protocol_mask$partition1$ = 88;
})
cljs.core.TransientVector.prototype.call = (function() {
var G__23971 = null;
var G__23971__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__23971__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__23971 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__23971__2.call(this,self__,k);
case 3:
return G__23971__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23971.cljs$core$IFn$_invoke$arity$2 = G__23971__2;
G__23971.cljs$core$IFn$_invoke$arity$3 = G__23971__3;
return G__23971;
})()
;

cljs.core.TransientVector.prototype.apply = (function (self__,args23968){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args23968)));
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
} else {
throw (new Error("nth after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,n);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return self__.cnt;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = (function (tcoll,n,val){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(tcoll__$1) <= n)){
(self__.tail[(n & (31))] = val);

return tcoll__$1;
} else {
var new_root = ((function (tcoll__$1){
return (function go(level,node){
var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit,node);
if((level === (0))){
cljs.core.pv_aset(node__$1,(n & (31)),val);

return node__$1;
} else {
var subidx = ((n >>> level) & (31));
cljs.core.pv_aset(node__$1,subidx,go((level - (5)),cljs.core.pv_aget(node__$1,subidx)));

return node__$1;
}
});})(tcoll__$1))
.call(null,self__.shift,self__.root);
self__.root = new_root;

return tcoll__$1;
}
} else {
if((n === self__.cnt)){
return cljs.core._conj_BANG_(tcoll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds for TransientVector of length"),cljs.core.str(self__.cnt)].join('')));

}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
self__.cnt = (0);

return tcoll__$1;
} else {
if((((self__.cnt - (1)) & (31)) > (0))){
self__.cnt = (self__.cnt - (1));

return tcoll__$1;
} else {
var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1,(self__.cnt - (2)));
var new_root = (function (){var nr = cljs.core.tv_pop_tail(tcoll__$1,self__.shift,self__.root);
if(!((nr == null))){
return nr;
} else {
return (new cljs.core.VectorNode(self__.root.edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
}
})();
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit,cljs.core.pv_aget(new_root,(0)));
self__.root = new_root__$1;

self__.shift = (self__.shift - (5));

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
} else {
self__.root = new_root;

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
}

}
}
}
} else {
throw (new Error("pop! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n_BANG_(tcoll__$1,key,val);
} else {
throw (new Error("TransientVector's key for assoc! must be a number."));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if(((self__.cnt - cljs.core.tail_off(tcoll__$1)) < (32))){
(self__.tail[(self__.cnt & (31))] = o);

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var tail_node = (new cljs.core.VectorNode(self__.root.edit,self__.tail));
var new_tail = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
(new_tail[(0)] = o);

self__.tail = new_tail;

if(((self__.cnt >>> (5)) > ((1) << self__.shift))){
var new_root_array = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var new_shift = (self__.shift + (5));
(new_root_array[(0)] = self__.root);

(new_root_array[(1)] = cljs.core.new_path(self__.root.edit,self__.shift,tail_node));

self__.root = (new cljs.core.VectorNode(self__.root.edit,new_root_array));

self__.shift = new_shift;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var new_root = cljs.core.tv_push_tail(tcoll__$1,self__.shift,self__.root,tail_node);
self__.root = new_root;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
self__.root.edit = null;

var len = (self__.cnt - cljs.core.tail_off(tcoll__$1));
var trimmed_tail = (new Array(len));
cljs.core.array_copy(self__.tail,(0),trimmed_tail,(0),len);

return (new cljs.core.PersistentVector(null,self__.cnt,self__.shift,self__.root,trimmed_tail,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientVector.cljs$lang$type = true;

cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";

cljs.core.TransientVector.cljs$lang$ctorPrWriter = (function (this__12187__auto__,writer__12188__auto__,opt__12189__auto__){
return cljs.core._write(writer__12188__auto__,"cljs.core/TransientVector");
});

cljs.core.__GT_TransientVector = (function __GT_TransientVector(cnt,shift,root,tail){
return (new cljs.core.TransientVector(cnt,shift,root,tail));
});


/**
* @constructor
*/
cljs.core.PersistentQueueSeq = (function (meta,front,rear,__hash){
this.meta = meta;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31850572;
})
cljs.core.PersistentQueueSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueueSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__12021__auto__ = self__.__hash;
if(!((h__12021__auto__ == null))){
return h__12021__auto__;
} else {
var h__12021__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__12021__auto____$1;

return h__12021__auto____$1;
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueueSeq(self__.meta,f1,self__.rear,null));
} else {
if((self__.rear == null)){
return cljs.core._empty(coll__$1);
} else {
return (new cljs.core.PersistentQueueSeq(self__.meta,self__.rear,null,null));
}
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueueSeq(meta__$1,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentQueueSeq.cljs$lang$type = true;

cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";

cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = (function (this__12187__auto__,writer__12188__auto__,opt__12189__auto__){
return cljs.core._write(writer__12188__auto__,"cljs.core/PersistentQueueSeq");
});

cljs.core.__GT_PersistentQueueSeq = (function __GT_PersistentQueueSeq(meta,front,rear,__hash){
return (new cljs.core.PersistentQueueSeq(meta,front,rear,__hash));
});

(cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__12578__auto__ = this;
return cljs.core.es6_iterator(this__12578__auto__);
}));

/**
* @constructor
*/
cljs.core.PersistentQueue = (function (meta,count,front,rear,__hash){
this.meta = meta;
this.count = count;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31858766;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentQueue.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueue.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(self__.meta,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),f1,self__.rear,null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),cljs.core.seq(self__.rear),cljs.core.PersistentVector.EMPTY,null));
}
} else {
return coll__$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__12021__auto__ = self__.__hash;
if(!((h__12021__auto__ == null))){
return h__12021__auto__;
} else {
var h__12021__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__12021__auto____$1;

return h__12021__auto____$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY,self__.meta);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.rest(cljs.core.seq(coll__$1));
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var rear__$1 = cljs.core.seq(self__.rear);
if(cljs.core.truth_((function (){var or__11600__auto__ = self__.front;
if(cljs.core.truth_(or__11600__auto__)){
return or__11600__auto__;
} else {
return rear__$1;
}
})())){
return (new cljs.core.PersistentQueueSeq(null,self__.front,cljs.core.seq(rear__$1),null));
} else {
return null;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(meta__$1,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),self__.front,cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__11600__auto__ = self__.rear;
if(cljs.core.truth_(or__11600__auto__)){
return or__11600__auto__;
} else {
return cljs.core.PersistentVector.EMPTY;
}
})(),o),null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front,o),cljs.core.PersistentVector.EMPTY,null));
}
});

cljs.core.PersistentQueue.cljs$lang$type = true;

cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";

cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = (function (this__12187__auto__,writer__12188__auto__,opt__12189__auto__){
return cljs.core._write(writer__12188__auto__,"cljs.core/PersistentQueue");
});

cljs.core.__GT_PersistentQueue = (function __GT_PersistentQueue(meta,count,front,rear,__hash){
return (new cljs.core.PersistentQueue(meta,count,front,rear,__hash));
});

cljs.core.PersistentQueue.EMPTY = (new cljs.core.PersistentQueue(null,(0),null,cljs.core.PersistentVector.EMPTY,cljs.core.empty_ordered_hash));
(cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__12578__auto__ = this;
return cljs.core.es6_iterator(this__12578__auto__);
}));

/**
* @constructor
*/
cljs.core.NeverEquiv = (function (){
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2097152;
})
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return false;
});

cljs.core.NeverEquiv.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NeverEquiv.cljs$lang$type = true;

cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";

cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = (function (this__12187__auto__,writer__12188__auto__,opt__12189__auto__){
return cljs.core._write(writer__12188__auto__,"cljs.core/NeverEquiv");
});

cljs.core.__GT_NeverEquiv = (function __GT_NeverEquiv(){
return (new cljs.core.NeverEquiv());
});

cljs.core.never_equiv = (new cljs.core.NeverEquiv());
/**
* Assumes y is a map. Returns true if x equals y, otherwise returns
* false.
*/
cljs.core.equiv_map = (function equiv_map(x,y){
return cljs.core.boolean$(((cljs.core.map_QMARK_(y))?(((cljs.core.count(x) === cljs.core.count(y)))?cljs.core.every_QMARK_(cljs.core.identity,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (xkv){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y,cljs.core.first(xkv),cljs.core.never_equiv),cljs.core.second(xkv));
}),x)):null):null));
});
cljs.core.scan_array = (function scan_array(incr,k,array){
var len = array.length;
var i = (0);
while(true){
if((i < len)){
if((k === (array[i]))){
return i;
} else {
var G__23972 = (i + incr);
i = G__23972;
continue;
}
} else {
return null;
}
break;
}
});
cljs.core.obj_map_compare_keys = (function obj_map_compare_keys(a,b){
var a__$1 = cljs.core.hash(a);
var b__$1 = cljs.core.hash(b);
if((a__$1 < b__$1)){
return (-1);
} else {
if((a__$1 > b__$1)){
return (1);
} else {
return (0);

}
}
});
cljs.core.obj_map__GT_hash_map = (function obj_map__GT_hash_map(m,k,v){
var ks = m.keys;
var len = ks.length;
var so = m.strobj;
var mm = cljs.core.meta(m);
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var k__$1 = (ks[i]);
var G__23973 = (i + (1));
var G__23974 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k__$1,(so[k__$1]));
i = G__23973;
out = G__23974;
continue;
} else {
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k,v)),mm);
}
break;
}
});
cljs.core.obj_clone = (function obj_clone(obj,ks){
var new_obj = (function (){var obj23978 = {};
return obj23978;
})();
var l = ks.length;
var i_23979 = (0);
while(true){
if((i_23979 < l)){
var k_23980 = (ks[i_23979]);
(new_obj[k_23980] = (obj[k_23980]));

var G__23981 = (i_23979 + (1));
i_23979 = G__23981;
continue;
} else {
}
break;
}

return new_obj;
});

/**
* @constructor
*/
cljs.core.ObjMap = (function (meta,keys,strobj,update_count,__hash){
this.meta = meta;
this.keys = keys;
this.strobj = strobj;
this.update_count = update_count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 4;
})
cljs.core.ObjMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ObjMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__11588__auto__ = (function (){var G__23985 = k;
return goog.isString(G__23985);
})();
if(cljs.core.truth_(and__11588__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__11588__auto__;
}
})())){
return (self__.strobj[k]);
} else {
return not_found;
}
});

cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.keys.length;
var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
var init__$1 = init;
while(true){
if(cljs.core.seq(keys__$1)){
var k = cljs.core.first(keys__$1);
var init__$2 = (function (){var G__23986 = init__$1;
var G__23987 = k;
var G__23988 = (self__.strobj[k]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__23986,G__23987,G__23988) : f.call(null,G__23986,G__23987,G__23988));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__23989 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23989) : cljs.core.deref.call(null,G__23989));
} else {
var G__23995 = cljs.core.rest(keys__$1);
var G__23996 = init__$2;
keys__$1 = G__23995;
init__$1 = G__23996;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.keys.length;
});

cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__12021__auto__ = self__.__hash;
if(!((h__12021__auto__ == null))){
return h__12021__auto__;
} else {
var h__12021__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__12021__auto____$1;

return h__12021__auto____$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1));
});

cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.ObjMap.EMPTY,self__.meta);
});

cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__11588__auto__ = (function (){var G__23991 = k;
return goog.isString(G__23991);
})();
if(cljs.core.truth_(and__11588__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__11588__auto__;
}
})())){
var new_keys = cljs.core.aclone(self__.keys);
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
new_keys.splice(cljs.core.scan_array((1),k,new_keys),(1));

delete new_strobj[k];

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
} else {
return coll__$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var G__23992 = k;
return goog.isString(G__23992);
})())){
if(((self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD)) || ((self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD))){
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
} else {
if(!((cljs.core.scan_array((1),k,self__.keys) == null))){
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
(new_strobj[k] = v);

return (new cljs.core.ObjMap(self__.meta,self__.keys,new_strobj,(self__.update_count + (1)),null));
} else {
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
var new_keys = cljs.core.aclone(self__.keys);
(new_strobj[k] = v);

new_keys.push(k);

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
}
}
} else {
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__11588__auto__ = (function (){var G__23994 = k;
return goog.isString(G__23994);
})();
if(cljs.core.truth_(and__11588__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__11588__auto__;
}
})())){
return true;
} else {
return false;
}
});

cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.keys.length > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (coll__$1){
return (function (p1__23982_SHARP_){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[p1__23982_SHARP_,(self__.strobj[p1__23982_SHARP_])],null));
});})(coll__$1))
,self__.keys.sort(cljs.core.obj_map_compare_keys));
} else {
return null;
}
});

cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ObjMap(meta__$1,self__.keys,self__.strobj,self__.update_count,self__.__hash));
});

cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,coll__$1,entry);
}
});

cljs.core.ObjMap.prototype.call = (function() {
var G__23997 = null;
var G__23997__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__23997__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__23997 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__23997__2.call(this,self__,k);
case 3:
return G__23997__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23997.cljs$core$IFn$_invoke$arity$2 = G__23997__2;
G__23997.cljs$core$IFn$_invoke$arity$3 = G__23997__3;
return G__23997;
})()
;

cljs.core.ObjMap.prototype.apply = (function (self__,args23983){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args23983)));
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.ObjMap.cljs$lang$type = true;

cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";

cljs.core.ObjMap.cljs$lang$ctorPrWriter = (function (this__12187__auto__,writer__12188__auto__,opt__12189__auto__){
return cljs.core._write(writer__12188__auto__,"cljs.core/ObjMap");
});

cljs.core.__GT_ObjMap = (function __GT_ObjMap(meta,keys,strobj,update_count,__hash){
return (new cljs.core.ObjMap(meta,keys,strobj,update_count,__hash));
});

cljs.core.ObjMap.EMPTY = (new cljs.core.ObjMap(null,[],(function (){var obj23999 = {};
return obj23999;
})(),(0),cljs.core.empty_unordered_hash));
cljs.core.ObjMap.HASHMAP_THRESHOLD = (8);
cljs.core.ObjMap.fromObject = (function (ks,obj){
return (new cljs.core.ObjMap(null,ks,obj,(0),null));
});

/**
* @constructor
*/
cljs.core.ES6EntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6EntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var vec__24000 = cljs.core.first(self__.s);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24000,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24000,(1),null);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [k,v]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6EntriesIterator.cljs$lang$type = true;

cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";

cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = (function (this__12187__auto__,writer__12188__auto__,opt__12189__auto__){
return cljs.core._write(writer__12188__auto__,"cljs.core/ES6EntriesIterator");
});

cljs.core.__GT_ES6EntriesIterator = (function __GT_ES6EntriesIterator(s){
return (new cljs.core.ES6EntriesIterator(s));
});

cljs.core.es6_entries_iterator = (function es6_entries_iterator(coll){
return (new cljs.core.ES6EntriesIterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6SetEntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6SetEntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [x,x]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = (function (this__12187__auto__,writer__12188__auto__,opt__12189__auto__){
return cljs.core._write(writer__12188__auto__,"cljs.core/ES6SetEntriesIterator");
});

cljs.core.__GT_ES6SetEntriesIterator = (function __GT_ES6SetEntriesIterator(s){
return (new cljs.core.ES6SetEntriesIterator(s));
});

cljs.core.es6_set_entries_iterator = (function es6_set_entries_iterator(coll){
return (new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll)));
});
cljs.core.array_map_index_of_nil_QMARK_ = (function array_map_index_of_nil_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(((arr[i]) == null)){
return i;
} else {
var G__24001 = (i + (2));
i = G__24001;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_keyword_QMARK_ = (function array_map_index_of_keyword_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.fqn;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Keyword)) && ((kstr === k_SINGLEQUOTE_.fqn));
})()){
return i;
} else {
var G__24002 = (i + (2));
i = G__24002;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_symbol_QMARK_ = (function array_map_index_of_symbol_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.str;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Symbol)) && ((kstr === k_SINGLEQUOTE_.str));
})()){
return i;
} else {
var G__24003 = (i + (2));
i = G__24003;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_identical_QMARK_ = (function array_map_index_of_identical_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((k === (arr[i]))){
return i;
} else {
var G__24004 = (i + (2));
i = G__24004;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_equiv_QMARK_ = (function array_map_index_of_equiv_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(arr[i]))){
return i;
} else {
var G__24005 = (i + (2));
i = G__24005;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of = (function array_map_index_of(m,k){
var arr = m.arr;
if((k instanceof cljs.core.Keyword)){
return cljs.core.array_map_index_of_keyword_QMARK_(arr,m,k);
} else {
if(cljs.core.truth_((function (){var or__11600__auto__ = (function (){var G__24009 = k;
return goog.isString(G__24009);
})();
if(cljs.core.truth_(or__11600__auto__)){
return or__11600__auto__;
} else {
return typeof k === 'number';
}
})())){
return cljs.core.array_map_index_of_identical_QMARK_(arr,m,k);
} else {
if((k instanceof cljs.core.Symbol)){
return cljs.core.array_map_index_of_symbol_QMARK_(arr,m,k);
} else {
if((k == null)){
return cljs.core.array_map_index_of_nil_QMARK_(arr,m,k);
} else {
return cljs.core.array_map_index_of_equiv_QMARK_(arr,m,k);

}
}
}
}
});
cljs.core.array_map_extend_kv = (function array_map_extend_kv(m,k,v){
var arr = m.arr;
var l = arr.length;
var narr = (new Array((l + (2))));
var i_24010 = (0);
while(true){
if((i_24010 < l)){
(narr[i_24010] = (arr[i_24010]));

var G__24011 = (i_24010 + (1));
i_24010 = G__24011;
continue;
} else {
}
break;
}

(narr[l] = k);

(narr[(l + (1))] = v);

return narr;
});

/**
* @constructor
*/
cljs.core.PersistentArrayMapSeq = (function (arr,i,_meta){
this.arr = arr;
this.i = i;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
})
cljs.core.PersistentArrayMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return null;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return ((self__.arr.length - self__.i) / (2));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMapSeq(self__.arr,self__.i,new_meta));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = (function (this__12187__auto__,writer__12188__auto__,opt__12189__auto__){
return cljs.core._write(writer__12188__auto__,"cljs.core/PersistentArrayMapSeq");
});

cljs.core.__GT_PersistentArrayMapSeq = (function __GT_PersistentArrayMapSeq(arr,i,_meta){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
});

(cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__12578__auto__ = this;
return cljs.core.es6_iterator(this__12578__auto__);
}));
cljs.core.persistent_array_map_seq = (function persistent_array_map_seq(arr,i,_meta){
if((i <= (arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
} else {
return null;
}
});


/**
* @constructor
*/
cljs.core.PersistentArrayMapIterator = (function (arr,i,cnt){
this.arr = arr;
this.i = i;
this.cnt = cnt;
})
cljs.core.PersistentArrayMapIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.cnt);
});

cljs.core.PersistentArrayMapIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
self__.i = (self__.i + (2));

return ret;
});

cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = (function (this__12187__auto__,writer__12188__auto__,opt__12189__auto__){
return cljs.core._write(writer__12188__auto__,"cljs.core/PersistentArrayMapIterator");
});

cljs.core.__GT_PersistentArrayMapIterator = (function __GT_PersistentArrayMapIterator(arr,i,cnt){
return (new cljs.core.PersistentArrayMapIterator(arr,i,cnt));
});


/**
* @constructor
*/
cljs.core.PersistentArrayMap = (function (meta,cnt,arr,__hash){
this.meta = meta;
this.cnt = cnt;
this.arr = arr;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16647951;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentArrayMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__24013 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__24013) : cljs.core.keys.call(null,G__24013));
})());
});

cljs.core.PersistentArrayMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentArrayMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__24014 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__24014) : cljs.core.vals.call(null,G__24014));
})());
});

cljs.core.PersistentArrayMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentArrayMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__24015 = cljs.core.seq(coll);
var chunk__24016 = null;
var count__24017 = (0);
var i__24018 = (0);
while(true){
if((i__24018 < count__24017)){
var vec__24019 = chunk__24016.cljs$core$IIndexed$_nth$arity$2(null,i__24018);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24019,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24019,(1),null);
var G__24020_24033 = v;
var G__24021_24034 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24020_24033,G__24021_24034) : f.call(null,G__24020_24033,G__24021_24034));

var G__24035 = seq__24015;
var G__24036 = chunk__24016;
var G__24037 = count__24017;
var G__24038 = (i__24018 + (1));
seq__24015 = G__24035;
chunk__24016 = G__24036;
count__24017 = G__24037;
i__24018 = G__24038;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__24015);
if(temp__4126__auto__){
var seq__24015__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__24015__$1)){
var c__12387__auto__ = cljs.core.chunk_first(seq__24015__$1);
var G__24039 = cljs.core.chunk_rest(seq__24015__$1);
var G__24040 = c__12387__auto__;
var G__24041 = cljs.core.count(c__12387__auto__);
var G__24042 = (0);
seq__24015 = G__24039;
chunk__24016 = G__24040;
count__24017 = G__24041;
i__24018 = G__24042;
continue;
} else {
var vec__24022 = cljs.core.first(seq__24015__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24022,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24022,(1),null);
var G__24023_24043 = v;
var G__24024_24044 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24023_24043,G__24024_24044) : f.call(null,G__24023_24043,G__24024_24044));

var G__24045 = cljs.core.next(seq__24015__$1);
var G__24046 = null;
var G__24047 = (0);
var G__24048 = (0);
seq__24015 = G__24045;
chunk__24016 = G__24046;
count__24017 = G__24047;
i__24018 = G__24048;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var G__24025 = init__$1;
var G__24026 = (self__.arr[i]);
var G__24027 = (self__.arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__24025,G__24026,G__24027) : f.call(null,G__24025,G__24026,G__24027));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__24028 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__24028) : cljs.core.deref.call(null,G__24028));
} else {
var G__24049 = (i + (2));
var G__24050 = init__$2;
i = G__24049;
init__$1 = G__24050;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.PersistentArrayMapIterator(self__.arr,(0),(self__.cnt * (2))));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__12021__auto__ = self__.__hash;
if(!((h__12021__auto__ == null))){
return h__12021__auto__;
} else {
var h__12021__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__12021__auto____$1;

return h__12021__auto____$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((function (){var G__24029 = other;
if(G__24029){
var bit__12274__auto__ = (G__24029.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__12274__auto__) || (G__24029.cljs$core$IMap$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
var alen = self__.arr.length;
var other__$1 = other;
if((self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null))){
var i = (0);
while(true){
if((i < alen)){
var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null,(self__.arr[i]),cljs.core.lookup_sentinel);
if(!((v === cljs.core.lookup_sentinel))){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[(i + (1))]),v)){
var G__24051 = (i + (2));
i = G__24051;
continue;
} else {
return false;
}
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_map(coll__$1,other);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientArrayMap((function (){var obj24031 = {};
return obj24031;
})(),self__.arr.length,cljs.core.aclone(self__.arr)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY,self__.meta);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx >= (0))){
var len = self__.arr.length;
var new_len = (len - (2));
if((new_len === (0))){
return cljs.core._empty(coll__$1);
} else {
var new_arr = (new Array(new_len));
var s = (0);
var d = (0);
while(true){
if((s >= len)){
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt - (1)),new_arr,null));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(self__.arr[s]))){
var G__24052 = (s + (2));
var G__24053 = d;
s = G__24052;
d = G__24053;
continue;
} else {
(new_arr[d] = (self__.arr[s]));

(new_arr[(d + (1))] = (self__.arr[(s + (1))]));

var G__24054 = (s + (2));
var G__24055 = (d + (2));
s = G__24054;
d = G__24055;
continue;

}
}
break;
}
}
} else {
return coll__$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
if((self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr__$1 = cljs.core.array_map_extend_kv(coll__$1,k,v);
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt + (1)),arr__$1,null));
} else {
return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1),k,v),self__.meta);
}
} else {
if((v === (self__.arr[(idx + (1))]))){
return coll__$1;
} else {
var arr__$1 = (function (){var G__24032 = cljs.core.aclone(self__.arr);
(G__24032[(idx + (1))] = v);

return G__24032;
})();
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,arr__$1,null));

}
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((cljs.core.array_map_index_of(coll__$1,k) === (-1)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.persistent_array_map_seq(self__.arr,(0),null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMap(meta__$1,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__24056 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__24057 = cljs.core.next(es);
ret = G__24056;
es = G__24057;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentArrayMap.prototype.call = (function() {
var G__24058 = null;
var G__24058__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__24058__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__24058 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__24058__2.call(this,self__,k);
case 3:
return G__24058__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24058.cljs$core$IFn$_invoke$arity$2 = G__24058__2;
G__24058.cljs$core$IFn$_invoke$arity$3 = G__24058__3;
return G__24058;
})()
;

cljs.core.PersistentArrayMap.prototype.apply = (function (self__,args24012){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args24012)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentArrayMap.cljs$lang$type = true;

cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";

cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = (function (this__12187__auto__,writer__12188__auto__,opt__12189__auto__){
return cljs.core._write(writer__12188__auto__,"cljs.core/PersistentArrayMap");
});

cljs.core.__GT_PersistentArrayMap = (function __GT_PersistentArrayMap(meta,cnt,arr,__hash){
return (new cljs.core.PersistentArrayMap(meta,cnt,arr,__hash));
});

cljs.core.PersistentArrayMap.EMPTY = (new cljs.core.PersistentArrayMap(null,(0),[],cljs.core.empty_unordered_hash));
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = (8);
cljs.core.PersistentArrayMap.fromArray = (function (arr,no_clone,no_check){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
if(no_check){
var cnt = (arr__$1.length / (2));
return (new cljs.core.PersistentArrayMap(null,cnt,arr__$1,null));
} else {
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__24059 = (i + (2));
var G__24060 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__24059;
ret = G__24060;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
}
});
(cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__12578__auto__ = this;
return cljs.core.es6_iterator(this__12578__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientArrayMap = (function (editable_QMARK_,len,arr){
this.editable_QMARK_ = editable_QMARK_;
this.len = len;
this.arr = arr;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx >= (0))){
(self__.arr[idx] = (self__.arr[(self__.len - (2))]));

(self__.arr[(idx + (1))] = (self__.arr[(self__.len - (1))]));

var G__24061_24069 = self__.arr;
G__24061_24069.pop();

G__24061_24069.pop();


self__.len = (self__.len - (2));
} else {
}

return tcoll__$1;
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx === (-1))){
if(((self__.len + (2)) <= ((2) * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD))){
self__.len = (self__.len + (2));

self__.arr.push(key);

self__.arr.push(val);

return tcoll__$1;
} else {
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3((function (){var G__24062 = self__.len;
var G__24063 = self__.arr;
return (cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(G__24062,G__24063) : cljs.core.array__GT_transient_hash_map.call(null,G__24062,G__24063));
})(),key,val);
}
} else {
if((val === (self__.arr[(idx + (1))]))){
return tcoll__$1;
} else {
(self__.arr[(idx + (1))] = val);

return tcoll__$1;
}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
if((function (){var G__24064 = o;
if(G__24064){
var bit__12281__auto__ = (G__24064.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__12281__auto__) || (G__24064.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__24064.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__24064);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__24064);
}
})()){
return cljs.core._assoc_BANG_(tcoll__$1,(function (){var G__24065 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__24065) : cljs.core.key.call(null,G__24065));
})(),(function (){var G__24066 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__24066) : cljs.core.val.call(null,G__24066));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$2 = tcoll__$1;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__24070 = cljs.core.next(es);
var G__24071 = cljs.core._assoc_BANG_(tcoll__$2,(function (){var G__24067 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__24067) : cljs.core.key.call(null,G__24067));
})(),(function (){var G__24068 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__24068) : cljs.core.val.call(null,G__24068));
})());
es = G__24070;
tcoll__$2 = G__24071;
continue;
} else {
return tcoll__$2;
}
break;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
self__.editable_QMARK_ = false;

return (new cljs.core.PersistentArrayMap(null,cljs.core.quot(self__.len,(2)),self__.arr,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,k,null);
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
} else {
throw (new Error("lookup after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
return cljs.core.quot(self__.len,(2));
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientArrayMap.cljs$lang$type = true;

cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";

cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = (function (this__12187__auto__,writer__12188__auto__,opt__12189__auto__){
return cljs.core._write(writer__12188__auto__,"cljs.core/TransientArrayMap");
});

cljs.core.__GT_TransientArrayMap = (function __GT_TransientArrayMap(editable_QMARK_,len,arr){
return (new cljs.core.TransientArrayMap(editable_QMARK_,len,arr));
});


cljs.core.array__GT_transient_hash_map = (function array__GT_transient_hash_map(len,arr){
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
var i = (0);
while(true){
if((i < len)){
var G__24072 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,(arr[i]),(arr[(i + (1))]));
var G__24073 = (i + (2));
out = G__24072;
i = G__24073;
continue;
} else {
return out;
}
break;
}
});

/**
* @constructor
*/
cljs.core.Box = (function (val){
this.val = val;
})

cljs.core.Box.cljs$lang$type = true;

cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";

cljs.core.Box.cljs$lang$ctorPrWriter = (function (this__12187__auto__,writer__12188__auto__,opt__12189__auto__){
return cljs.core._write(writer__12188__auto__,"cljs.core/Box");
});

cljs.core.__GT_Box = (function __GT_Box(val){
return (new cljs.core.Box(val));
});






cljs.core.key_test = (function key_test(key,other){
if((key === other)){
return true;
} else {
if(cljs.core.keyword_identical_QMARK_(key,other)){
return true;
} else {
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key,other);

}
}
});
cljs.core.mask = (function mask(hash,shift){
return ((hash >>> shift) & (31));
});
cljs.core.clone_and_set = (function() {
var clone_and_set = null;
var clone_and_set__3 = (function (arr,i,a){
var G__24076 = cljs.core.aclone(arr);
(G__24076[i] = a);

return G__24076;
});
var clone_and_set__5 = (function (arr,i,a,j,b){
var G__24077 = cljs.core.aclone(arr);
(G__24077[i] = a);

(G__24077[j] = b);

return G__24077;
});
clone_and_set = function(arr,i,a,j,b){
switch(arguments.length){
case 3:
return clone_and_set__3.call(this,arr,i,a);
case 5:
return clone_and_set__5.call(this,arr,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
return clone_and_set;
})()
;
cljs.core.remove_pair = (function remove_pair(arr,i){
var new_arr = (new Array((arr.length - (2))));
cljs.core.array_copy(arr,(0),new_arr,(0),((2) * i));

cljs.core.array_copy(arr,((2) * (i + (1))),new_arr,((2) * i),(new_arr.length - ((2) * i)));

return new_arr;
});
cljs.core.bitmap_indexed_node_index = (function bitmap_indexed_node_index(bitmap,bit){
return cljs.core.bit_count((bitmap & (bit - (1))));
});
cljs.core.bitpos = (function bitpos(hash,shift){
return ((1) << ((hash >>> shift) & 0x01f));
});
cljs.core.edit_and_set = (function() {
var edit_and_set = null;
var edit_and_set__4 = (function (inode,edit,i,a){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

return editable;
});
var edit_and_set__6 = (function (inode,edit,i,a,j,b){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

(editable.arr[j] = b);

return editable;
});
edit_and_set = function(inode,edit,i,a,j,b){
switch(arguments.length){
case 4:
return edit_and_set__4.call(this,inode,edit,i,a);
case 6:
return edit_and_set__6.call(this,inode,edit,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
return edit_and_set;
})()
;
cljs.core.inode_kv_reduce = (function inode_kv_reduce(arr,f,init){
var len = arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var k = (arr[i]);
if(!((k == null))){
var G__24082 = init__$1;
var G__24083 = k;
var G__24084 = (arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__24082,G__24083,G__24084) : f.call(null,G__24082,G__24083,G__24084));
} else {
var node = (arr[(i + (1))]);
if(!((node == null))){
return node.kv_reduce(f,init__$1);
} else {
return init__$1;
}
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__24085 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__24085) : cljs.core.deref.call(null,G__24085));
} else {
var G__24086 = (i + (2));
var G__24087 = init__$2;
i = G__24086;
init__$1 = G__24087;
continue;
}
} else {
return init__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.BitmapIndexedNode = (function (edit,bitmap,arr){
this.edit = edit;
this.bitmap = bitmap;
this.arr = arr;
})
cljs.core.BitmapIndexedNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var n = cljs.core.bit_count(self__.bitmap);
var new_arr = (new Array((((n < (0)))?(4):((2) * (n + (1))))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * n));

return (new cljs.core.BitmapIndexedNode(e,self__.bitmap,new_arr));
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
} else {
if((self__.bitmap === bit)){
return null;
} else {
return inode.edit_and_remove_pair(edit__$1,bit,idx);

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
(removed_leaf_QMARK_[(0)] = true);

return inode.edit_and_remove_pair(edit__$1,bit,idx);
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = (function (e,bit,i){
var self__ = this;
var inode = this;
if((self__.bitmap === bit)){
return null;
} else {
var editable = inode.ensure_editable(e);
var earr = editable.arr;
var len = earr.length;
editable.bitmap = (bit ^ editable.bitmap);

cljs.core.array_copy(earr,((2) * (i + (1))),earr,((2) * i),(len - ((2) * (i + (1)))));

(earr[(len - (2))] = null);

(earr[(len - (1))] = null);

return editable;
}
});

cljs.core.BitmapIndexedNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__24088 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__24088) : cljs.core.create_inode_seq.call(null,G__24088));
});

cljs.core.BitmapIndexedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.BitmapIndexedNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return val_or_node;
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((((2) * n) < self__.arr.length)){
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
added_leaf_QMARK_.val = true;

cljs.core.array_copy_downward(earr,((2) * idx),earr,((2) * (idx + (1))),((2) * (n - idx)));

(earr[((2) * idx)] = key);

(earr[(((2) * idx) + (1))] = val);

editable.bitmap = (editable.bitmap | bit);

return editable;
} else {
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_24102 = (0);
var j_24103 = (0);
while(true){
if((i_24102 < (32))){
if((((self__.bitmap >>> i_24102) & (1)) === (0))){
var G__24104 = (i_24102 + (1));
var G__24105 = j_24103;
i_24102 = G__24104;
j_24103 = G__24105;
continue;
} else {
(nodes[i_24102] = ((!(((self__.arr[j_24103]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),cljs.core.hash((self__.arr[j_24103])),(self__.arr[j_24103]),(self__.arr[(j_24103 + (1))]),added_leaf_QMARK_):(self__.arr[(j_24103 + (1))])));

var G__24106 = (i_24102 + (1));
var G__24107 = (j_24103 + (2));
i_24102 = G__24106;
j_24103 = G__24107;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(edit__$1,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (4)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

var editable = inode.ensure_editable(edit__$1);
editable.arr = new_arr;

editable.bitmap = (editable.bitmap | bit);

return editable;

}
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),val);
}
} else {
added_leaf_QMARK_.val = true;

return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__24089 = edit__$1;
var G__24090 = (shift + (5));
var G__24091 = key_or_nil;
var G__24092 = val_or_node;
var G__24093 = hash;
var G__24094 = key;
var G__24095 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__24089,G__24090,G__24091,G__24092,G__24093,G__24094,G__24095) : cljs.core.create_node.call(null,G__24089,G__24090,G__24091,G__24092,G__24093,G__24094,G__24095));
})());

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_24108 = (0);
var j_24109 = (0);
while(true){
if((i_24108 < (32))){
if((((self__.bitmap >>> i_24108) & (1)) === (0))){
var G__24110 = (i_24108 + (1));
var G__24111 = j_24109;
i_24108 = G__24110;
j_24109 = G__24111;
continue;
} else {
(nodes[i_24108] = ((!(((self__.arr[j_24109]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),cljs.core.hash((self__.arr[j_24109])),(self__.arr[j_24109]),(self__.arr[(j_24109 + (1))]),added_leaf_QMARK_):(self__.arr[(j_24109 + (1))])));

var G__24112 = (i_24108 + (1));
var G__24113 = (j_24109 + (2));
i_24108 = G__24112;
j_24109 = G__24113;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(null,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap | bit),new_arr));
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),val)));
}
} else {
added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__24096 = (shift + (5));
var G__24097 = key_or_nil;
var G__24098 = val_or_node;
var G__24099 = hash;
var G__24100 = key;
var G__24101 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__24096,G__24097,G__24098,G__24099,G__24100,G__24101) : cljs.core.create_node.call(null,G__24096,G__24097,G__24098,G__24099,G__24100,G__24101));
})())));

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_find((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil,val_or_node], null);
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without((shift + (5)),hash,key);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
} else {
if((self__.bitmap === bit)){
return null;
} else {
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.cljs$lang$type = true;

cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";

cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = (function (this__12187__auto__,writer__12188__auto__,opt__12189__auto__){
return cljs.core._write(writer__12188__auto__,"cljs.core/BitmapIndexedNode");
});

cljs.core.__GT_BitmapIndexedNode = (function __GT_BitmapIndexedNode(edit,bitmap,arr){
return (new cljs.core.BitmapIndexedNode(edit,bitmap,arr));
});

cljs.core.BitmapIndexedNode.EMPTY = (new cljs.core.BitmapIndexedNode(null,(0),[]));
cljs.core.pack_array_node = (function pack_array_node(array_node,edit,idx){
var arr = array_node.arr;
var len = arr.length;
var new_arr = (new Array(((2) * (array_node.cnt - (1)))));
var i = (0);
var j = (1);
var bitmap = (0);
while(true){
if((i < len)){
if((!((i === idx))) && (!(((arr[i]) == null)))){
(new_arr[j] = (arr[i]));

var G__24114 = (i + (1));
var G__24115 = (j + (2));
var G__24116 = (bitmap | ((1) << i));
i = G__24114;
j = G__24115;
bitmap = G__24116;
continue;
} else {
var G__24117 = (i + (1));
var G__24118 = j;
var G__24119 = bitmap;
i = G__24117;
j = G__24118;
bitmap = G__24119;
continue;
}
} else {
return (new cljs.core.BitmapIndexedNode(edit,bitmap,new_arr));
}
break;
}
});

/**
* @constructor
*/
cljs.core.ArrayNode = (function (edit,cnt,arr){
this.edit = edit;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.ArrayNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
return (new cljs.core.ArrayNode(e,self__.cnt,cljs.core.aclone(self__.arr)));
}
});

cljs.core.ArrayNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return inode;
} else {
var n = node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,edit__$1,idx);
} else {
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
editable.cnt = (editable.cnt - (1));

return editable;
}
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);

}
}
}
});

cljs.core.ArrayNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__24120 = self__.arr;
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(G__24120) : cljs.core.create_array_node_seq.call(null,G__24120));
});

cljs.core.ArrayNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var node = (self__.arr[i]);
if(!((node == null))){
var init__$2 = node.kv_reduce(f,init__$1);
if(cljs.core.reduced_QMARK_(init__$2)){
var G__24121 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__24121) : cljs.core.deref.call(null,G__24121));
} else {
var G__24122 = (i + (1));
var G__24123 = init__$2;
i = G__24122;
init__$1 = G__24123;
continue;
}
} else {
var G__24124 = (i + (1));
var G__24125 = init__$1;
i = G__24124;
init__$1 = G__24125;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ArrayNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));
editable.cnt = (editable.cnt + (1));

return editable;
} else {
var n = node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
}
}
});

cljs.core.ArrayNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return (new cljs.core.ArrayNode(null,(self__.cnt + (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_))));
} else {
var n = node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
}
});

cljs.core.ArrayNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_find((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
var n = node.inode_without((shift + (5)),hash,key);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,null,idx);
} else {
return (new cljs.core.ArrayNode(null,(self__.cnt - (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));

}
}
} else {
return inode;
}
});

cljs.core.ArrayNode.cljs$lang$type = true;

cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";

cljs.core.ArrayNode.cljs$lang$ctorPrWriter = (function (this__12187__auto__,writer__12188__auto__,opt__12189__auto__){
return cljs.core._write(writer__12188__auto__,"cljs.core/ArrayNode");
});

cljs.core.__GT_ArrayNode = (function __GT_ArrayNode(edit,cnt,arr){
return (new cljs.core.ArrayNode(edit,cnt,arr));
});

cljs.core.hash_collision_node_find_index = (function hash_collision_node_find_index(arr,cnt,key){
var lim = ((2) * cnt);
var i = (0);
while(true){
if((i < lim)){
if(cljs.core.key_test(key,(arr[i]))){
return i;
} else {
var G__24126 = (i + (2));
i = G__24126;
continue;
}
} else {
return (-1);
}
break;
}
});

/**
* @constructor
*/
cljs.core.HashCollisionNode = (function (edit,collision_hash,cnt,arr){
this.edit = edit;
this.collision_hash = collision_hash;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.HashCollisionNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var new_arr = (new Array(((2) * (self__.cnt + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * self__.cnt));

return (new cljs.core.HashCollisionNode(e,self__.collision_hash,self__.cnt,new_arr));
}
});

cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
(removed_leaf_QMARK_[(0)] = true);

if((self__.cnt === (1))){
return null;
} else {
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
(earr[idx] = (earr[(((2) * self__.cnt) - (2))]));

(earr[(idx + (1))] = (earr[(((2) * self__.cnt) - (1))]));

(earr[(((2) * self__.cnt) - (1))] = null);

(earr[(((2) * self__.cnt) - (2))] = null);

editable.cnt = (editable.cnt - (1));

return editable;
}
}
});

cljs.core.HashCollisionNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__24127 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__24127) : cljs.core.create_inode_seq.call(null,G__24127));
});

cljs.core.HashCollisionNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.HashCollisionNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return (self__.arr[(idx + (1))]);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
if((self__.arr.length > ((2) * self__.cnt))){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * self__.cnt),key,(((2) * self__.cnt) + (1)),val);
added_leaf_QMARK_.val = true;

editable.cnt = (editable.cnt + (1));

return editable;
} else {
var len = self__.arr.length;
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return inode.ensure_editable_array(edit__$1,(self__.cnt + (1)),new_arr);
}
} else {
if(((self__.arr[(idx + (1))]) === val)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(idx + (1)),val);
}
}
} else {
return (new cljs.core.BitmapIndexedNode(edit__$1,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode,null,null])).inode_assoc_BANG_(edit__$1,shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
var len = ((2) * self__.cnt);
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt + (1)),new_arr));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[idx]),val)){
return inode;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(idx + (1)),val)));
}
}
} else {
return (new cljs.core.BitmapIndexedNode(null,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode])).inode_assoc(shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.ensure_editable_array = (function (e,count,array){
var self__ = this;
var inode = this;
if((e === self__.edit)){
self__.arr = array;

self__.cnt = count;

return inode;
} else {
return (new cljs.core.HashCollisionNode(self__.edit,self__.collision_hash,count,array));
}
});

cljs.core.HashCollisionNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[idx]),(self__.arr[(idx + (1))])], null);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
if((self__.cnt === (1))){
return null;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt - (1)),cljs.core.remove_pair(self__.arr,cljs.core.quot(idx,(2)))));

}
}
});

cljs.core.HashCollisionNode.cljs$lang$type = true;

cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";

cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = (function (this__12187__auto__,writer__12188__auto__,opt__12189__auto__){
return cljs.core._write(writer__12188__auto__,"cljs.core/HashCollisionNode");
});

cljs.core.__GT_HashCollisionNode = (function __GT_HashCollisionNode(edit,collision_hash,cnt,arr){
return (new cljs.core.HashCollisionNode(edit,collision_hash,cnt,arr));
});

cljs.core.create_node = (function() {
var create_node = null;
var create_node__6 = (function (shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc(shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
var create_node__7 = (function (edit,shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit,shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc_BANG_(edit,shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
create_node = function(edit,shift,key1,val1,key2hash,key2,val2){
switch(arguments.length){
case 6:
return create_node__6.call(this,edit,shift,key1,val1,key2hash,key2);
case 7:
return create_node__7.call(this,edit,shift,key1,val1,key2hash,key2,val2);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
return create_node;
})()
;

/**
* @constructor
*/
cljs.core.NodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.NodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.NodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__12021__auto__ = self__.__hash;
if(!((h__12021__auto__ == null))){
return h__12021__auto__;
} else {
var h__12021__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__12021__auto____$1;

return h__12021__auto____$1;
}
});

cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.nodes[self__.i]),(self__.nodes[(self__.i + (1))])], null);
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
var G__24128 = self__.nodes;
var G__24129 = (self__.i + (2));
var G__24130 = null;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__24128,G__24129,G__24130) : cljs.core.create_inode_seq.call(null,G__24128,G__24129,G__24130));
} else {
var G__24131 = self__.nodes;
var G__24132 = self__.i;
var G__24133 = cljs.core.next(self__.s);
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__24131,G__24132,G__24133) : cljs.core.create_inode_seq.call(null,G__24131,G__24132,G__24133));
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.NodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.NodeSeq.cljs$lang$type = true;

cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";

cljs.core.NodeSeq.cljs$lang$ctorPrWriter = (function (this__12187__auto__,writer__12188__auto__,opt__12189__auto__){
return cljs.core._write(writer__12188__auto__,"cljs.core/NodeSeq");
});

cljs.core.__GT_NodeSeq = (function __GT_NodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.NodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__12578__auto__ = this;
return cljs.core.es6_iterator(this__12578__auto__);
}));
cljs.core.create_inode_seq = (function() {
var create_inode_seq = null;
var create_inode_seq__1 = (function (nodes){
return create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes,(0),null);
});
var create_inode_seq__3 = (function (nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
if(!(((nodes[j]) == null))){
return (new cljs.core.NodeSeq(null,nodes,j,null,null));
} else {
var temp__4124__auto__ = (nodes[(j + (1))]);
if(cljs.core.truth_(temp__4124__auto__)){
var node = temp__4124__auto__;
var temp__4124__auto____$1 = node.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var node_seq = temp__4124__auto____$1;
return (new cljs.core.NodeSeq(null,nodes,(j + (2)),node_seq,null));
} else {
var G__24137 = (j + (2));
j = G__24137;
continue;
}
} else {
var G__24138 = (j + (2));
j = G__24138;
continue;
}
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.NodeSeq(null,nodes,i,s,null));
}
});
create_inode_seq = function(nodes,i,s){
switch(arguments.length){
case 1:
return create_inode_seq__1.call(this,nodes);
case 3:
return create_inode_seq__3.call(this,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
return create_inode_seq;
})()
;

/**
* @constructor
*/
cljs.core.ArrayNodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.ArrayNodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ArrayNodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__12021__auto__ = self__.__hash;
if(!((h__12021__auto__ == null))){
return h__12021__auto__;
} else {
var h__12021__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__12021__auto____$1;

return h__12021__auto____$1;
}
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.s);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__24139 = null;
var G__24140 = self__.nodes;
var G__24141 = self__.i;
var G__24142 = cljs.core.next(self__.s);
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__24139,G__24140,G__24141,G__24142) : cljs.core.create_array_node_seq.call(null,G__24139,G__24140,G__24141,G__24142));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ArrayNodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ArrayNodeSeq.cljs$lang$type = true;

cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";

cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = (function (this__12187__auto__,writer__12188__auto__,opt__12189__auto__){
return cljs.core._write(writer__12188__auto__,"cljs.core/ArrayNodeSeq");
});

cljs.core.__GT_ArrayNodeSeq = (function __GT_ArrayNodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__12578__auto__ = this;
return cljs.core.es6_iterator(this__12578__auto__);
}));
cljs.core.create_array_node_seq = (function() {
var create_array_node_seq = null;
var create_array_node_seq__1 = (function (nodes){
return create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null,nodes,(0),null);
});
var create_array_node_seq__4 = (function (meta,nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
var temp__4124__auto__ = (nodes[j]);
if(cljs.core.truth_(temp__4124__auto__)){
var nj = temp__4124__auto__;
var temp__4124__auto____$1 = nj.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var ns = temp__4124__auto____$1;
return (new cljs.core.ArrayNodeSeq(meta,nodes,(j + (1)),ns,null));
} else {
var G__24147 = (j + (1));
j = G__24147;
continue;
}
} else {
var G__24148 = (j + (1));
j = G__24148;
continue;
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,null));
}
});
create_array_node_seq = function(meta,nodes,i,s){
switch(arguments.length){
case 1:
return create_array_node_seq__1.call(this,meta);
case 4:
return create_array_node_seq__4.call(this,meta,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
return create_array_node_seq;
})()
;

/**
* @constructor
*/
cljs.core.PersistentHashMap = (function (meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
this.meta = meta;
this.cnt = cnt;
this.root = root;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__24150 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__24150) : cljs.core.keys.call(null,G__24150));
})());
});

cljs.core.PersistentHashMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__24151 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__24151) : cljs.core.vals.call(null,G__24151));
})());
});

cljs.core.PersistentHashMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__24152 = cljs.core.seq(coll);
var chunk__24153 = null;
var count__24154 = (0);
var i__24155 = (0);
while(true){
if((i__24155 < count__24154)){
var vec__24156 = chunk__24153.cljs$core$IIndexed$_nth$arity$2(null,i__24155);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24156,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24156,(1),null);
var G__24157_24168 = v;
var G__24158_24169 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24157_24168,G__24158_24169) : f.call(null,G__24157_24168,G__24158_24169));

var G__24170 = seq__24152;
var G__24171 = chunk__24153;
var G__24172 = count__24154;
var G__24173 = (i__24155 + (1));
seq__24152 = G__24170;
chunk__24153 = G__24171;
count__24154 = G__24172;
i__24155 = G__24173;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__24152);
if(temp__4126__auto__){
var seq__24152__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__24152__$1)){
var c__12387__auto__ = cljs.core.chunk_first(seq__24152__$1);
var G__24174 = cljs.core.chunk_rest(seq__24152__$1);
var G__24175 = c__12387__auto__;
var G__24176 = cljs.core.count(c__12387__auto__);
var G__24177 = (0);
seq__24152 = G__24174;
chunk__24153 = G__24175;
count__24154 = G__24176;
i__24155 = G__24177;
continue;
} else {
var vec__24159 = cljs.core.first(seq__24152__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24159,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24159,(1),null);
var G__24160_24178 = v;
var G__24161_24179 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24160_24178,G__24161_24179) : f.call(null,G__24160_24178,G__24161_24179));

var G__24180 = cljs.core.next(seq__24152__$1);
var G__24181 = null;
var G__24182 = (0);
var G__24183 = (0);
seq__24152 = G__24180;
chunk__24153 = G__24181;
count__24154 = G__24182;
i__24155 = G__24183;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var init__$1 = ((self__.has_nil_QMARK_)?(function (){var G__24162 = init;
var G__24163 = null;
var G__24164 = self__.nil_val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__24162,G__24163,G__24164) : f.call(null,G__24162,G__24163,G__24164));
})():init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__24165 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__24165) : cljs.core.deref.call(null,G__24165));
} else {
if(!((self__.root == null))){
return self__.root.kv_reduce(f,init__$1);
} else {
return init__$1;

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashMap(self__.meta,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__12021__auto__ = self__.__hash;
if(!((h__12021__auto__ == null))){
return h__12021__auto__;
} else {
var h__12021__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__12021__auto____$1;

return h__12021__auto____$1;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashMap((function (){var obj24167 = {};
return obj24167;
})(),self__.root,self__.cnt,self__.has_nil_QMARK_,self__.nil_val));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY,self__.meta);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),self__.root,false,null,null));
} else {
return coll__$1;
}
} else {
if((self__.root == null)){
return coll__$1;
} else {
var new_root = self__.root.inode_without((0),cljs.core.hash(k),k);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if((self__.has_nil_QMARK_) && ((v === self__.nil_val))){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((self__.has_nil_QMARK_)?self__.cnt:(self__.cnt + (1))),self__.root,true,v,null));
}
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var new_root = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc((0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((added_leaf_QMARK_.val)?(self__.cnt + (1)):self__.cnt),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
return self__.has_nil_QMARK_;
} else {
if((self__.root == null)){
return false;
} else {
return !((self__.root.inode_lookup((0),cljs.core.hash(k),k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel));

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var s = ((!((self__.root == null)))?self__.root.inode_seq():null);
if(self__.has_nil_QMARK_){
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,self__.nil_val], null),s);
} else {
return s;
}
} else {
return null;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashMap(meta__$1,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__24184 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__24185 = cljs.core.next(es);
ret = G__24184;
es = G__24185;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentHashMap.prototype.call = (function() {
var G__24186 = null;
var G__24186__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__24186__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__24186 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__24186__2.call(this,self__,k);
case 3:
return G__24186__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24186.cljs$core$IFn$_invoke$arity$2 = G__24186__2;
G__24186.cljs$core$IFn$_invoke$arity$3 = G__24186__3;
return G__24186;
})()
;

cljs.core.PersistentHashMap.prototype.apply = (function (self__,args24149){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args24149)));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashMap.cljs$lang$type = true;

cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";

cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = (function (this__12187__auto__,writer__12188__auto__,opt__12189__auto__){
return cljs.core._write(writer__12188__auto__,"cljs.core/PersistentHashMap");
});

cljs.core.__GT_PersistentHashMap = (function __GT_PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
return (new cljs.core.PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash));
});

cljs.core.PersistentHashMap.EMPTY = (new cljs.core.PersistentHashMap(null,(0),null,false,null,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashMap.fromArray = (function (arr,no_clone){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__24187 = (i + (2));
var G__24188 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__24187;
ret = G__24188;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
});
cljs.core.PersistentHashMap.fromArrays = (function (ks,vs){
var len = ks.length;
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__24189 = (i + (1));
var G__24190 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null,(ks[i]),(vs[i]));
i = G__24189;
out = G__24190;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
});
(cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__12578__auto__ = this;
return cljs.core.es6_iterator(this__12578__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashMap = (function (edit,root,count,has_nil_QMARK_,nil_val){
this.edit = edit;
this.root = root;
this.count = count;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.without_BANG_(key);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.assoc_BANG_(key,val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.conj_BANG_(val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.persistent_BANG_();
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return null;
}
} else {
if((self__.root == null)){
return null;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.edit){
return self__.count;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.conj_BANG_ = (function (o){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((function (){var G__24191 = o;
if(G__24191){
var bit__12281__auto__ = (G__24191.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__12281__auto__) || (G__24191.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__24191.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__24191);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__24191);
}
})()){
return tcoll.assoc_BANG_((function (){var G__24192 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__24192) : cljs.core.key.call(null,G__24192));
})(),(function (){var G__24193 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__24193) : cljs.core.val.call(null,G__24193));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$1 = tcoll;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__24196 = cljs.core.next(es);
var G__24197 = tcoll__$1.assoc_BANG_((function (){var G__24194 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__24194) : cljs.core.key.call(null,G__24194));
})(),(function (){var G__24195 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__24195) : cljs.core.val.call(null,G__24195));
})());
es = G__24196;
tcoll__$1 = G__24197;
continue;
} else {
return tcoll__$1;
}
break;
}
}
} else {
throw (new Error("conj! after persistent"));
}
});

cljs.core.TransientHashMap.prototype.assoc_BANG_ = (function (k,v){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if((self__.nil_val === v)){
} else {
self__.nil_val = v;
}

if(self__.has_nil_QMARK_){
} else {
self__.count = (self__.count + (1));

self__.has_nil_QMARK_ = true;
}

return tcoll;
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var node = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc_BANG_(self__.edit,(0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(added_leaf_QMARK_.val){
self__.count = (self__.count + (1));
} else {
}

return tcoll;
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.without_BANG_ = (function (k){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if(self__.has_nil_QMARK_){
self__.has_nil_QMARK_ = false;

self__.nil_val = null;

self__.count = (self__.count - (1));

return tcoll;
} else {
return tcoll;
}
} else {
if((self__.root == null)){
return tcoll;
} else {
var removed_leaf_QMARK_ = (new cljs.core.Box(false));
var node = self__.root.inode_without_BANG_(self__.edit,(0),cljs.core.hash(k),k,removed_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(cljs.core.truth_((removed_leaf_QMARK_[(0)]))){
self__.count = (self__.count - (1));
} else {
}

return tcoll;
}
}
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.persistent_BANG_ = (function (){
var self__ = this;
var tcoll = this;
if(self__.edit){
self__.edit = null;

return (new cljs.core.PersistentHashMap(null,self__.count,self__.root,self__.has_nil_QMARK_,self__.nil_val,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientHashMap.cljs$lang$type = true;

cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";

cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = (function (this__12187__auto__,writer__12188__auto__,opt__12189__auto__){
return cljs.core._write(writer__12188__auto__,"cljs.core/TransientHashMap");
});

cljs.core.__GT_TransientHashMap = (function __GT_TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val){
return (new cljs.core.TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val));
});

cljs.core.tree_map_seq_push = (function tree_map_seq_push(node,stack,ascending_QMARK_){
var t = node;
var stack__$1 = stack;
while(true){
if(!((t == null))){
var G__24198 = ((ascending_QMARK_)?t.left:t.right);
var G__24199 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1,t);
t = G__24198;
stack__$1 = G__24199;
continue;
} else {
return stack__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMapSeq = (function (meta,stack,ascending_QMARK_,cnt,__hash){
this.meta = meta;
this.stack = stack;
this.ascending_QMARK_ = ascending_QMARK_;
this.cnt = cnt;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374862;
})
cljs.core.PersistentTreeMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt < (0))){
return (cljs.core.count(cljs.core.next(coll__$1)) + (1));
} else {
return self__.cnt;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__12021__auto__ = self__.__hash;
if(!((h__12021__auto__ == null))){
return h__12021__auto__;
} else {
var h__12021__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__12021__auto____$1;

return h__12021__auto____$1;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.peek(self__.stack);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var t = cljs.core.first(self__.stack);
var next_stack = cljs.core.tree_map_seq_push(((self__.ascending_QMARK_)?t.right:t.left),cljs.core.next(self__.stack),self__.ascending_QMARK_);
if(!((next_stack == null))){
return (new cljs.core.PersistentTreeMapSeq(null,next_stack,self__.ascending_QMARK_,(self__.cnt - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMapSeq(meta__$1,self__.stack,self__.ascending_QMARK_,self__.cnt,self__.__hash));
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = (function (this__12187__auto__,writer__12188__auto__,opt__12189__auto__){
return cljs.core._write(writer__12188__auto__,"cljs.core/PersistentTreeMapSeq");
});

cljs.core.__GT_PersistentTreeMapSeq = (function __GT_PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash){
return (new cljs.core.PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash));
});

(cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__12578__auto__ = this;
return cljs.core.es6_iterator(this__12578__auto__);
}));
cljs.core.create_tree_map_seq = (function create_tree_map_seq(tree,ascending_QMARK_,cnt){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.tree_map_seq_push(tree,null,ascending_QMARK_),ascending_QMARK_,cnt,null));
});

cljs.core.balance_left = (function balance_left(key,val,ins,right){
if((ins instanceof cljs.core.RedNode)){
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,ins.left.blacken(),(new cljs.core.BlackNode(key,val,ins.right,right,null)),null));
} else {
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.right.key,ins.right.val,(new cljs.core.BlackNode(ins.key,ins.val,ins.left,ins.right.left,null)),(new cljs.core.BlackNode(key,val,ins.right.right,right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));
}
});
cljs.core.balance_right = (function balance_right(key,val,left,ins){
if((ins instanceof cljs.core.RedNode)){
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,(new cljs.core.BlackNode(key,val,left,ins.left,null)),ins.right.blacken(),null));
} else {
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.left.key,ins.left.val,(new cljs.core.BlackNode(key,val,left,ins.left.left,null)),(new cljs.core.BlackNode(ins.key,ins.val,ins.left.right,ins.right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));
}
});
cljs.core.balance_left_del = (function balance_left_del(key,val,del,right){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,del.blacken(),right,null));
} else {
if((right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right(key,val,del,right.redden());
} else {
if(((right instanceof cljs.core.RedNode)) && ((right.left instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(right.left.key,right.left.val,(new cljs.core.BlackNode(key,val,del,right.left.left,null)),cljs.core.balance_right(right.key,right.val,right.left.right,right.right.redden()),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.balance_right_del = (function balance_right_del(key,val,left,del){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,left,del.blacken(),null));
} else {
if((left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left(key,val,left.redden(),del);
} else {
if(((left instanceof cljs.core.RedNode)) && ((left.right instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(left.right.key,left.right.val,cljs.core.balance_left(left.key,left.val,left.left.redden(),left.right.left),(new cljs.core.BlackNode(key,val,left.right.right,del,null)),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.tree_map_kv_reduce = (function tree_map_kv_reduce(node,f,init){
var init__$1 = ((!((node.left == null)))?tree_map_kv_reduce(node.left,f,init):init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__24212 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__24212) : cljs.core.deref.call(null,G__24212));
} else {
var init__$2 = (function (){var G__24213 = init__$1;
var G__24214 = node.key;
var G__24215 = node.val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__24213,G__24214,G__24215) : f.call(null,G__24213,G__24214,G__24215));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__24216 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__24216) : cljs.core.deref.call(null,G__24216));
} else {
var init__$3 = ((!((node.right == null)))?tree_map_kv_reduce(node.right,f,init__$2):init__$2);
if(cljs.core.reduced_QMARK_(init__$3)){
var G__24217 = init__$3;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__24217) : cljs.core.deref.call(null,G__24217));
} else {
return init__$3;
}
}
}
});

/**
* @constructor
*/
cljs.core.BlackNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.BlackNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return ins.balance_right(node);
});

cljs.core.BlackNode.prototype.redden = (function (){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.BlackNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return node;
});

cljs.core.BlackNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return ins.balance_left(node);
});

cljs.core.BlackNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.BlackNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));
});

cljs.core.BlackNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));
});

cljs.core.BlackNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_left_del(self__.key,self__.val,del,self__.right);
});

cljs.core.BlackNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.BlackNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_right_del(self__.key,self__.val,self__.left,del);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__12021__auto__ = self__.__hash;
if(!((h__12021__auto__ == null))){
return h__12021__auto__;
} else {
var h__12021__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__12021__auto____$1;

return h__12021__auto____$1;
}
});

cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.BlackNode.prototype.call = (function() {
var G__24219 = null;
var G__24219__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__24219__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__24219 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__24219__2.call(this,self__,k);
case 3:
return G__24219__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24219.cljs$core$IFn$_invoke$arity$2 = G__24219__2;
G__24219.cljs$core$IFn$_invoke$arity$3 = G__24219__3;
return G__24219;
})()
;

cljs.core.BlackNode.prototype.apply = (function (self__,args24218){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args24218)));
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.BlackNode.cljs$lang$type = true;

cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";

cljs.core.BlackNode.cljs$lang$ctorPrWriter = (function (this__12187__auto__,writer__12188__auto__,opt__12189__auto__){
return cljs.core._write(writer__12188__auto__,"cljs.core/BlackNode");
});

cljs.core.__GT_BlackNode = (function __GT_BlackNode(key,val,left,right,__hash){
return (new cljs.core.BlackNode(key,val,left,right,__hash));
});

(cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__12578__auto__ = this;
return cljs.core.es6_iterator(this__12578__auto__);
}));

/**
* @constructor
*/
cljs.core.RedNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.RedNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,ins,null));
});

cljs.core.RedNode.prototype.redden = (function (){
var self__ = this;
var node = this;
throw (new Error("red-black tree invariant violation"));
});

cljs.core.RedNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.RedNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,ins,self__.right,null));
});

cljs.core.RedNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.RedNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,self__.left.blacken(),(new cljs.core.BlackNode(parent.key,parent.val,self__.right,parent.right,null)),null));
} else {
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.right.key,self__.right.val,(new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right.left,null)),(new cljs.core.BlackNode(parent.key,parent.val,self__.right.right,parent.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));

}
}
});

cljs.core.RedNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left,null)),self__.right.blacken(),null));
} else {
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.left.key,self__.left.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left.left,null)),(new cljs.core.BlackNode(self__.key,self__.val,self__.left.right,self__.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));

}
}
});

cljs.core.RedNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,del,self__.right,null));
});

cljs.core.RedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.RedNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,del,null));
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__12021__auto__ = self__.__hash;
if(!((h__12021__auto__ == null))){
return h__12021__auto__;
} else {
var h__12021__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__12021__auto____$1;

return h__12021__auto____$1;
}
});

cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.RedNode.prototype.call = (function() {
var G__24221 = null;
var G__24221__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__24221__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__24221 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__24221__2.call(this,self__,k);
case 3:
return G__24221__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24221.cljs$core$IFn$_invoke$arity$2 = G__24221__2;
G__24221.cljs$core$IFn$_invoke$arity$3 = G__24221__3;
return G__24221;
})()
;

cljs.core.RedNode.prototype.apply = (function (self__,args24220){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args24220)));
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.RedNode.cljs$lang$type = true;

cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";

cljs.core.RedNode.cljs$lang$ctorPrWriter = (function (this__12187__auto__,writer__12188__auto__,opt__12189__auto__){
return cljs.core._write(writer__12188__auto__,"cljs.core/RedNode");
});

cljs.core.__GT_RedNode = (function __GT_RedNode(key,val,left,right,__hash){
return (new cljs.core.RedNode(key,val,left,right,__hash));
});

(cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__12578__auto__ = this;
return cljs.core.es6_iterator(this__12578__auto__);
}));
cljs.core.tree_map_add = (function tree_map_add(comp,tree,k,v,found){
if((tree == null)){
return (new cljs.core.RedNode(k,v,null,null,null));
} else {
var c = (function (){var G__24234 = k;
var G__24235 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__24234,G__24235) : comp.call(null,G__24234,G__24235));
})();
if((c === (0))){
(found[(0)] = tree);

return null;
} else {
if((c < (0))){
var ins = tree_map_add(comp,tree.left,k,v,found);
if(!((ins == null))){
return tree.add_left(ins);
} else {
return null;
}
} else {
var ins = tree_map_add(comp,tree.right,k,v,found);
if(!((ins == null))){
return tree.add_right(ins);
} else {
return null;
}

}
}
}
});
cljs.core.tree_map_append = (function tree_map_append(left,right){
if((left == null)){
return right;
} else {
if((right == null)){
return left;
} else {
if((left instanceof cljs.core.RedNode)){
if((right instanceof cljs.core.RedNode)){
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.RedNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.RedNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,(new cljs.core.RedNode(right.key,right.val,app,right.right,null)),null));
}
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,tree_map_append(left.right,right),null));
}
} else {
if((right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(right.key,right.val,tree_map_append(left,right.left),right.right,null));
} else {
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.BlackNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.BlackNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return cljs.core.balance_left_del(left.key,left.val,left.left,(new cljs.core.BlackNode(right.key,right.val,app,right.right,null)));
}

}
}
}
}
});
cljs.core.tree_map_remove = (function tree_map_remove(comp,tree,k,found){
if(!((tree == null))){
var c = (function (){var G__24254 = k;
var G__24255 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__24254,G__24255) : comp.call(null,G__24254,G__24255));
})();
if((c === (0))){
(found[(0)] = tree);

return cljs.core.tree_map_append(tree.left,tree.right);
} else {
if((c < (0))){
var del = tree_map_remove(comp,tree.left,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left_del(tree.key,tree.val,del,tree.right);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,del,tree.right,null));
}
} else {
return null;
}
} else {
var del = tree_map_remove(comp,tree.right,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right_del(tree.key,tree.val,tree.left,del);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,tree.left,del,null));
}
} else {
return null;
}

}
}
} else {
return null;
}
});
cljs.core.tree_map_replace = (function tree_map_replace(comp,tree,k,v){
var tk = tree.key;
var c = (function (){var G__24266 = k;
var G__24267 = tk;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__24266,G__24267) : comp.call(null,G__24266,G__24267));
})();
if((c === (0))){
return tree.replace(tk,v,tree.left,tree.right);
} else {
if((c < (0))){
return tree.replace(tk,tree.val,tree_map_replace(comp,tree.left,k,v),tree.right);
} else {
return tree.replace(tk,tree.val,tree.left,tree_map_replace(comp,tree.right,k,v));

}
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMap = (function (comp,tree,cnt,meta,__hash){
this.comp = comp;
this.tree = tree;
this.cnt = cnt;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 418776847;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__24269 = cljs.core.seq(coll);
var chunk__24270 = null;
var count__24271 = (0);
var i__24272 = (0);
while(true){
if((i__24272 < count__24271)){
var vec__24273 = chunk__24270.cljs$core$IIndexed$_nth$arity$2(null,i__24272);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24273,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24273,(1),null);
var G__24274_24286 = v;
var G__24275_24287 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24274_24286,G__24275_24287) : f.call(null,G__24274_24286,G__24275_24287));

var G__24288 = seq__24269;
var G__24289 = chunk__24270;
var G__24290 = count__24271;
var G__24291 = (i__24272 + (1));
seq__24269 = G__24288;
chunk__24270 = G__24289;
count__24271 = G__24290;
i__24272 = G__24291;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__24269);
if(temp__4126__auto__){
var seq__24269__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__24269__$1)){
var c__12387__auto__ = cljs.core.chunk_first(seq__24269__$1);
var G__24292 = cljs.core.chunk_rest(seq__24269__$1);
var G__24293 = c__12387__auto__;
var G__24294 = cljs.core.count(c__12387__auto__);
var G__24295 = (0);
seq__24269 = G__24292;
chunk__24270 = G__24293;
count__24271 = G__24294;
i__24272 = G__24295;
continue;
} else {
var vec__24276 = cljs.core.first(seq__24269__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24276,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24276,(1),null);
var G__24277_24296 = v;
var G__24278_24297 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24277_24296,G__24278_24297) : f.call(null,G__24277_24296,G__24278_24297));

var G__24298 = cljs.core.next(seq__24269__$1);
var G__24299 = null;
var G__24300 = (0);
var G__24301 = (0);
seq__24269 = G__24298;
chunk__24270 = G__24299;
count__24271 = G__24300;
i__24272 = G__24301;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__24279 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__24279) : cljs.core.keys.call(null,G__24279));
})());
});

cljs.core.PersistentTreeMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__24280 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__24280) : cljs.core.vals.call(null,G__24280));
})());
});

cljs.core.PersistentTreeMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMap.prototype.entry_at = (function (k){
var self__ = this;
var coll = this;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__24281 = k;
var G__24282 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__24281,G__24282) : self__.comp.call(null,G__24281,G__24282));
})();
if((c === (0))){
return t;
} else {
if((c < (0))){
var G__24302 = t.left;
t = G__24302;
continue;
} else {
var G__24303 = t.right;
t = G__24303;
continue;

}
}
} else {
return null;
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var n = coll__$1.entry_at(k);
if(!((n == null))){
return n.val;
} else {
return not_found;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
if(!((self__.tree == null))){
return cljs.core.tree_map_kv_reduce(self__.tree,f,init);
} else {
return init;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,self__.meta,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,false,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__12021__auto__ = self__.__hash;
if(!((h__12021__auto__ == null))){
return h__12021__auto__;
} else {
var h__12021__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__12021__auto____$1;

return h__12021__auto____$1;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,(0)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_remove(self__.comp,self__.tree,k,found);
if((t == null)){
if((cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0)) == null)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt - (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_add(self__.comp,self__.tree,k,v,found);
if((t == null)){
var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0));
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v,found_node.val)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,cljs.core.tree_map_replace(self__.comp,self__.tree,k,v),self__.cnt,self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt + (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((coll__$1.entry_at(k) == null));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,true,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,meta__$1,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__24304 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__24305 = cljs.core.next(es);
ret = G__24304;
es = G__24305;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentTreeMap.prototype.call = (function() {
var G__24306 = null;
var G__24306__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__24306__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__24306 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__24306__2.call(this,self__,k);
case 3:
return G__24306__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24306.cljs$core$IFn$_invoke$arity$2 = G__24306__2;
G__24306.cljs$core$IFn$_invoke$arity$3 = G__24306__3;
return G__24306;
})()
;

cljs.core.PersistentTreeMap.prototype.apply = (function (self__,args24268){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args24268)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,ascending_QMARK_,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var stack = null;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__24283 = k;
var G__24284 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__24283,G__24284) : self__.comp.call(null,G__24283,G__24284));
})();
if((c === (0))){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t),ascending_QMARK_,(-1),null));
} else {
if(cljs.core.truth_(ascending_QMARK_)){
if((c < (0))){
var G__24307 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__24308 = t.left;
stack = G__24307;
t = G__24308;
continue;
} else {
var G__24309 = stack;
var G__24310 = t.right;
stack = G__24309;
t = G__24310;
continue;
}
} else {
if((c > (0))){
var G__24311 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__24312 = t.right;
stack = G__24311;
t = G__24312;
continue;
} else {
var G__24313 = stack;
var G__24314 = t.left;
stack = G__24313;
t = G__24314;
continue;
}

}
}
} else {
if((stack == null)){
return null;
} else {
return (new cljs.core.PersistentTreeMapSeq(null,stack,ascending_QMARK_,(-1),null));
}
}
break;
}
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
var G__24285 = entry;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__24285) : cljs.core.key.call(null,G__24285));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.comp;
});

cljs.core.PersistentTreeMap.cljs$lang$type = true;

cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";

cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = (function (this__12187__auto__,writer__12188__auto__,opt__12189__auto__){
return cljs.core._write(writer__12188__auto__,"cljs.core/PersistentTreeMap");
});

cljs.core.__GT_PersistentTreeMap = (function __GT_PersistentTreeMap(comp,tree,cnt,meta,__hash){
return (new cljs.core.PersistentTreeMap(comp,tree,cnt,meta,__hash));
});

cljs.core.PersistentTreeMap.EMPTY = (new cljs.core.PersistentTreeMap(cljs.core.compare,null,(0),null,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__12578__auto__ = this;
return cljs.core.es6_iterator(this__12578__auto__);
}));
/**
* keyval => key val
* Returns a new hash map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.hash_map = (function() { 
var hash_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if(in$){
var G__24315 = cljs.core.nnext(in$);
var G__24316 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__24315;
out = G__24316;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
};
var hash_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__24317__i = 0, G__24317__a = new Array(arguments.length -  0);
while (G__24317__i < G__24317__a.length) {G__24317__a[G__24317__i] = arguments[G__24317__i + 0]; ++G__24317__i;}
  keyvals = new cljs.core.IndexedSeq(G__24317__a,0);
} 
return hash_map__delegate.call(this,keyvals);};
hash_map.cljs$lang$maxFixedArity = 0;
hash_map.cljs$lang$applyTo = (function (arglist__24318){
var keyvals = cljs.core.seq(arglist__24318);
return hash_map__delegate(keyvals);
});
hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
return hash_map;
})()
;
/**
* keyval => key val
* Returns a new array map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.array_map = (function() { 
var array_map__delegate = function (keyvals){
return cljs.core.PersistentArrayMap.fromArray(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array,keyvals),true,false);
};
var array_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__24319__i = 0, G__24319__a = new Array(arguments.length -  0);
while (G__24319__i < G__24319__a.length) {G__24319__a[G__24319__i] = arguments[G__24319__i + 0]; ++G__24319__i;}
  keyvals = new cljs.core.IndexedSeq(G__24319__a,0);
} 
return array_map__delegate.call(this,keyvals);};
array_map.cljs$lang$maxFixedArity = 0;
array_map.cljs$lang$applyTo = (function (arglist__24320){
var keyvals = cljs.core.seq(arglist__24320);
return array_map__delegate(keyvals);
});
array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
return array_map;
})()
;
/**
* keyval => key val
* Returns a new object map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.obj_map = (function() { 
var obj_map__delegate = function (keyvals){
var ks = [];
var obj = (function (){var obj24324 = {};
return obj24324;
})();
var kvs = cljs.core.seq(keyvals);
while(true){
if(kvs){
ks.push(cljs.core.first(kvs));

(obj[cljs.core.first(kvs)] = cljs.core.second(kvs));

var G__24325 = cljs.core.nnext(kvs);
kvs = G__24325;
continue;
} else {
return cljs.core.ObjMap.fromObject(ks,obj);
}
break;
}
};
var obj_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__24326__i = 0, G__24326__a = new Array(arguments.length -  0);
while (G__24326__i < G__24326__a.length) {G__24326__a[G__24326__i] = arguments[G__24326__i + 0]; ++G__24326__i;}
  keyvals = new cljs.core.IndexedSeq(G__24326__a,0);
} 
return obj_map__delegate.call(this,keyvals);};
obj_map.cljs$lang$maxFixedArity = 0;
obj_map.cljs$lang$applyTo = (function (arglist__24327){
var keyvals = cljs.core.seq(arglist__24327);
return obj_map__delegate(keyvals);
});
obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
return obj_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.sorted_map = (function() { 
var sorted_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.PersistentTreeMap.EMPTY;
while(true){
if(in$){
var G__24328 = cljs.core.nnext(in$);
var G__24329 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__24328;
out = G__24329;
continue;
} else {
return out;
}
break;
}
};
var sorted_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__24330__i = 0, G__24330__a = new Array(arguments.length -  0);
while (G__24330__i < G__24330__a.length) {G__24330__a[G__24330__i] = arguments[G__24330__i + 0]; ++G__24330__i;}
  keyvals = new cljs.core.IndexedSeq(G__24330__a,0);
} 
return sorted_map__delegate.call(this,keyvals);};
sorted_map.cljs$lang$maxFixedArity = 0;
sorted_map.cljs$lang$applyTo = (function (arglist__24331){
var keyvals = cljs.core.seq(arglist__24331);
return sorted_map__delegate(keyvals);
});
sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
return sorted_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_map_by = (function() { 
var sorted_map_by__delegate = function (comparator,keyvals){
var in$ = cljs.core.seq(keyvals);
var out = (new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator),null,(0),null,(0)));
while(true){
if(in$){
var G__24332 = cljs.core.nnext(in$);
var G__24333 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__24332;
out = G__24333;
continue;
} else {
return out;
}
break;
}
};
var sorted_map_by = function (comparator,var_args){
var keyvals = null;
if (arguments.length > 1) {
var G__24334__i = 0, G__24334__a = new Array(arguments.length -  1);
while (G__24334__i < G__24334__a.length) {G__24334__a[G__24334__i] = arguments[G__24334__i + 1]; ++G__24334__i;}
  keyvals = new cljs.core.IndexedSeq(G__24334__a,0);
} 
return sorted_map_by__delegate.call(this,comparator,keyvals);};
sorted_map_by.cljs$lang$maxFixedArity = 1;
sorted_map_by.cljs$lang$applyTo = (function (arglist__24335){
var comparator = cljs.core.first(arglist__24335);
var keyvals = cljs.core.rest(arglist__24335);
return sorted_map_by__delegate(comparator,keyvals);
});
sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
return sorted_map_by;
})()
;

/**
* @constructor
*/
cljs.core.KeySeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.KeySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.KeySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__24336 = self__.mseq;
if(G__24336){
var bit__12281__auto__ = (G__24336.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__12281__auto__) || (G__24336.cljs$core$INext$)){
return true;
} else {
if((!G__24336.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__24336);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__24336);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.KeySeq(nseq,self__._meta));
}
});

cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_key$arity$1(null);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__24337 = self__.mseq;
if(G__24337){
var bit__12281__auto__ = (G__24337.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__12281__auto__) || (G__24337.cljs$core$INext$)){
return true;
} else {
if((!G__24337.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__24337);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__24337);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.KeySeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.KeySeq(self__.mseq,new_meta));
});

cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.KeySeq.cljs$lang$type = true;

cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";

cljs.core.KeySeq.cljs$lang$ctorPrWriter = (function (this__12187__auto__,writer__12188__auto__,opt__12189__auto__){
return cljs.core._write(writer__12188__auto__,"cljs.core/KeySeq");
});

cljs.core.__GT_KeySeq = (function __GT_KeySeq(mseq,_meta){
return (new cljs.core.KeySeq(mseq,_meta));
});

(cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__12578__auto__ = this;
return cljs.core.es6_iterator(this__12578__auto__);
}));
/**
* Returns a sequence of the map's keys.
*/
cljs.core.keys = (function keys(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.KeySeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the key of the map entry.
*/
cljs.core.key = (function key(map_entry){
return cljs.core._key(map_entry);
});

/**
* @constructor
*/
cljs.core.ValSeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.ValSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ValSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__24338 = self__.mseq;
if(G__24338){
var bit__12281__auto__ = (G__24338.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__12281__auto__) || (G__24338.cljs$core$INext$)){
return true;
} else {
if((!G__24338.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__24338);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__24338);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.ValSeq(nseq,self__._meta));
}
});

cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_val$arity$1(null);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__24339 = self__.mseq;
if(G__24339){
var bit__12281__auto__ = (G__24339.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__12281__auto__) || (G__24339.cljs$core$INext$)){
return true;
} else {
if((!G__24339.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__24339);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__24339);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.ValSeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ValSeq(self__.mseq,new_meta));
});

cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ValSeq.cljs$lang$type = true;

cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";

cljs.core.ValSeq.cljs$lang$ctorPrWriter = (function (this__12187__auto__,writer__12188__auto__,opt__12189__auto__){
return cljs.core._write(writer__12188__auto__,"cljs.core/ValSeq");
});

cljs.core.__GT_ValSeq = (function __GT_ValSeq(mseq,_meta){
return (new cljs.core.ValSeq(mseq,_meta));
});

(cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__12578__auto__ = this;
return cljs.core.es6_iterator(this__12578__auto__);
}));
/**
* Returns a sequence of the map's values.
*/
cljs.core.vals = (function vals(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.ValSeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the value in the map entry.
*/
cljs.core.val = (function val(map_entry){
return cljs.core._val(map_entry);
});
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping from
* the latter (left-to-right) will be the mapping in the result.
* @param {...*} var_args
*/
cljs.core.merge = (function() { 
var merge__delegate = function (maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2((function (p1__24340_SHARP_,p2__24341_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__11600__auto__ = p1__24340_SHARP_;
if(cljs.core.truth_(or__11600__auto__)){
return or__11600__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),p2__24341_SHARP_);
}),maps);
} else {
return null;
}
};
var merge = function (var_args){
var maps = null;
if (arguments.length > 0) {
var G__24342__i = 0, G__24342__a = new Array(arguments.length -  0);
while (G__24342__i < G__24342__a.length) {G__24342__a[G__24342__i] = arguments[G__24342__i + 0]; ++G__24342__i;}
  maps = new cljs.core.IndexedSeq(G__24342__a,0);
} 
return merge__delegate.call(this,maps);};
merge.cljs$lang$maxFixedArity = 0;
merge.cljs$lang$applyTo = (function (arglist__24343){
var maps = cljs.core.seq(arglist__24343);
return merge__delegate(maps);
});
merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
return merge;
})()
;
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping(s)
* from the latter (left-to-right) will be combined with the mapping in
* the result by calling (f val-in-result val-in-latter).
* @param {...*} var_args
*/
cljs.core.merge_with = (function() { 
var merge_with__delegate = function (f,maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
var merge_entry = (function (m,e){
var k = cljs.core.first(e);
var v = cljs.core.second(e);
if(cljs.core.contains_QMARK_(m,k)){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__24346 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__24347 = v;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24346,G__24347) : f.call(null,G__24346,G__24347));
})());
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
var merge2 = ((function (merge_entry){
return (function (m1,m2){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry,(function (){var or__11600__auto__ = m1;
if(cljs.core.truth_(or__11600__auto__)){
return or__11600__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),cljs.core.seq(m2));
});})(merge_entry))
;
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2,maps);
} else {
return null;
}
};
var merge_with = function (f,var_args){
var maps = null;
if (arguments.length > 1) {
var G__24348__i = 0, G__24348__a = new Array(arguments.length -  1);
while (G__24348__i < G__24348__a.length) {G__24348__a[G__24348__i] = arguments[G__24348__i + 1]; ++G__24348__i;}
  maps = new cljs.core.IndexedSeq(G__24348__a,0);
} 
return merge_with__delegate.call(this,f,maps);};
merge_with.cljs$lang$maxFixedArity = 1;
merge_with.cljs$lang$applyTo = (function (arglist__24349){
var f = cljs.core.first(arglist__24349);
var maps = cljs.core.rest(arglist__24349);
return merge_with__delegate(f,maps);
});
merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
return merge_with;
})()
;
/**
* Returns a map containing only those entries in map whose key is in keys
*/
cljs.core.select_keys = (function select_keys(map,keyseq){
var ret = cljs.core.PersistentArrayMap.EMPTY;
var keys = cljs.core.seq(keyseq);
while(true){
if(keys){
var key = cljs.core.first(keys);
var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map,key,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185));
var G__24350 = ((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185)))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,key,entry):ret);
var G__24351 = cljs.core.next(keys);
ret = G__24350;
keys = G__24351;
continue;
} else {
return cljs.core.with_meta(ret,cljs.core.meta(map));
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentHashSet = (function (meta,hash_map,__hash){
this.meta = meta;
this.hash_map = hash_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 15077647;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__24354 = cljs.core.seq(coll);
var chunk__24355 = null;
var count__24356 = (0);
var i__24357 = (0);
while(true){
if((i__24357 < count__24356)){
var vec__24358 = chunk__24355.cljs$core$IIndexed$_nth$arity$2(null,i__24357);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24358,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24358,(1),null);
var G__24359_24364 = v;
var G__24360_24365 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24359_24364,G__24360_24365) : f.call(null,G__24359_24364,G__24360_24365));

var G__24366 = seq__24354;
var G__24367 = chunk__24355;
var G__24368 = count__24356;
var G__24369 = (i__24357 + (1));
seq__24354 = G__24366;
chunk__24355 = G__24367;
count__24356 = G__24368;
i__24357 = G__24369;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__24354);
if(temp__4126__auto__){
var seq__24354__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__24354__$1)){
var c__12387__auto__ = cljs.core.chunk_first(seq__24354__$1);
var G__24370 = cljs.core.chunk_rest(seq__24354__$1);
var G__24371 = c__12387__auto__;
var G__24372 = cljs.core.count(c__12387__auto__);
var G__24373 = (0);
seq__24354 = G__24370;
chunk__24355 = G__24371;
count__24356 = G__24372;
i__24357 = G__24373;
continue;
} else {
var vec__24361 = cljs.core.first(seq__24354__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24361,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24361,(1),null);
var G__24362_24374 = v;
var G__24363_24375 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24362_24374,G__24363_24375) : f.call(null,G__24362_24374,G__24363_24375));

var G__24376 = cljs.core.next(seq__24354__$1);
var G__24377 = null;
var G__24378 = (0);
var G__24379 = (0);
seq__24354 = G__24376;
chunk__24355 = G__24377;
count__24356 = G__24378;
i__24357 = G__24379;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core._contains_key_QMARK_(self__.hash_map,v)){
return v;
} else {
return not_found;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._count(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__12021__auto__ = self__.__hash;
if(!((h__12021__auto__ == null))){
return h__12021__auto__;
} else {
var h__12021__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__12021__auto____$1;

return h__12021__auto____$1;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__24352_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__24352_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY,self__.meta);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core._dissoc(self__.hash_map,v),null));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(meta__$1,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map,o,null),null));
});

cljs.core.PersistentHashSet.prototype.call = (function() {
var G__24380 = null;
var G__24380__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__24380__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__24380 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__24380__2.call(this,self__,k);
case 3:
return G__24380__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24380.cljs$core$IFn$_invoke$arity$2 = G__24380__2;
G__24380.cljs$core$IFn$_invoke$arity$3 = G__24380__3;
return G__24380;
})()
;

cljs.core.PersistentHashSet.prototype.apply = (function (self__,args24353){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args24353)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashSet.cljs$lang$type = true;

cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";

cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = (function (this__12187__auto__,writer__12188__auto__,opt__12189__auto__){
return cljs.core._write(writer__12188__auto__,"cljs.core/PersistentHashSet");
});

cljs.core.__GT_PersistentHashSet = (function __GT_PersistentHashSet(meta,hash_map,__hash){
return (new cljs.core.PersistentHashSet(meta,hash_map,__hash));
});

cljs.core.PersistentHashSet.EMPTY = (new cljs.core.PersistentHashSet(null,cljs.core.PersistentArrayMap.EMPTY,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashSet.fromArray = (function (items,no_clone){
var len = items.length;
if((len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr = ((no_clone)?items:cljs.core.aclone(items));
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__24381 = (i + (1));
var G__24382 = cljs.core._assoc_BANG_(out,(items[i]),null);
i = G__24381;
out = G__24382;
continue;
} else {
return (new cljs.core.PersistentHashSet(null,cljs.core._persistent_BANG_(out),null));
}
break;
}
} else {
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < len)){
var G__24383 = (i + (1));
var G__24384 = cljs.core._conj_BANG_(out,(items[i]));
i = G__24383;
out = G__24384;
continue;
} else {
return cljs.core._persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__12578__auto__ = this;
return cljs.core.es6_iterator(this__12578__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashSet = (function (transient_map){
this.transient_map = transient_map;
this.cljs$lang$protocol_mask$partition0$ = 259;
this.cljs$lang$protocol_mask$partition1$ = 136;
})
cljs.core.TransientHashSet.prototype.call = (function() {
var G__24386 = null;
var G__24386__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});
var G__24386__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});
G__24386 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__24386__2.call(this,self__,k);
case 3:
return G__24386__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24386.cljs$core$IFn$_invoke$arity$2 = G__24386__2;
G__24386.cljs$core$IFn$_invoke$arity$3 = G__24386__3;
return G__24386;
})()
;

cljs.core.TransientHashSet.prototype.apply = (function (self__,args24385){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args24385)));
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,v,null);
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,v,not_found){
var self__ = this;
var tcoll__$1 = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return v;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return cljs.core.count(self__.transient_map);
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map,v);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map,o,null);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return (new cljs.core.PersistentHashSet(null,cljs.core.persistent_BANG_(self__.transient_map),null));
});

cljs.core.TransientHashSet.cljs$lang$type = true;

cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";

cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = (function (this__12187__auto__,writer__12188__auto__,opt__12189__auto__){
return cljs.core._write(writer__12188__auto__,"cljs.core/TransientHashSet");
});

cljs.core.__GT_TransientHashSet = (function __GT_TransientHashSet(transient_map){
return (new cljs.core.TransientHashSet(transient_map));
});


/**
* @constructor
*/
cljs.core.PersistentTreeSet = (function (meta,tree_map,__hash){
this.meta = meta;
this.tree_map = tree_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 417730831;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__24389 = cljs.core.seq(coll);
var chunk__24390 = null;
var count__24391 = (0);
var i__24392 = (0);
while(true){
if((i__24392 < count__24391)){
var vec__24393 = chunk__24390.cljs$core$IIndexed$_nth$arity$2(null,i__24392);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24393,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24393,(1),null);
var G__24394_24399 = v;
var G__24395_24400 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24394_24399,G__24395_24400) : f.call(null,G__24394_24399,G__24395_24400));

var G__24401 = seq__24389;
var G__24402 = chunk__24390;
var G__24403 = count__24391;
var G__24404 = (i__24392 + (1));
seq__24389 = G__24401;
chunk__24390 = G__24402;
count__24391 = G__24403;
i__24392 = G__24404;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__24389);
if(temp__4126__auto__){
var seq__24389__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__24389__$1)){
var c__12387__auto__ = cljs.core.chunk_first(seq__24389__$1);
var G__24405 = cljs.core.chunk_rest(seq__24389__$1);
var G__24406 = c__12387__auto__;
var G__24407 = cljs.core.count(c__12387__auto__);
var G__24408 = (0);
seq__24389 = G__24405;
chunk__24390 = G__24406;
count__24391 = G__24407;
i__24392 = G__24408;
continue;
} else {
var vec__24396 = cljs.core.first(seq__24389__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24396,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24396,(1),null);
var G__24397_24409 = v;
var G__24398_24410 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24397_24409,G__24398_24410) : f.call(null,G__24397_24409,G__24398_24410));

var G__24411 = cljs.core.next(seq__24389__$1);
var G__24412 = null;
var G__24413 = (0);
var G__24414 = (0);
seq__24389 = G__24411;
chunk__24390 = G__24412;
count__24391 = G__24413;
i__24392 = G__24414;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
var n = self__.tree_map.entry_at(v);
if(!((n == null))){
return n.key;
} else {
return not_found;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.count(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core.count(self__.tree_map) > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core.rseq(self__.tree_map));
} else {
return null;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__12021__auto__ = self__.__hash;
if(!((h__12021__auto__ == null))){
return h__12021__auto__;
} else {
var h__12021__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__12021__auto____$1;

return h__12021__auto____$1;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__24387_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__24387_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core._empty(self__.tree_map),(0)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map,v),null));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(meta__$1,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map,o,null),null));
});

cljs.core.PersistentTreeSet.prototype.call = (function() {
var G__24415 = null;
var G__24415__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__24415__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__24415 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__24415__2.call(this,self__,k);
case 3:
return G__24415__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24415.cljs$core$IFn$_invoke$arity$2 = G__24415__2;
G__24415.cljs$core$IFn$_invoke$arity$3 = G__24415__3;
return G__24415;
})()
;

cljs.core.PersistentTreeSet.prototype.apply = (function (self__,args24388){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args24388)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq(self__.tree_map,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq_from(self__.tree_map,k,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
return entry;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._comparator(self__.tree_map);
});

cljs.core.PersistentTreeSet.cljs$lang$type = true;

cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";

cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = (function (this__12187__auto__,writer__12188__auto__,opt__12189__auto__){
return cljs.core._write(writer__12188__auto__,"cljs.core/PersistentTreeSet");
});

cljs.core.__GT_PersistentTreeSet = (function __GT_PersistentTreeSet(meta,tree_map,__hash){
return (new cljs.core.PersistentTreeSet(meta,tree_map,__hash));
});

cljs.core.PersistentTreeSet.EMPTY = (new cljs.core.PersistentTreeSet(null,cljs.core.PersistentTreeMap.EMPTY,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__12578__auto__ = this;
return cljs.core.es6_iterator(this__12578__auto__);
}));
cljs.core.set_from_indexed_seq = (function set_from_indexed_seq(iseq){
var arr = iseq.arr;
var ret = (function (){var a__12481__auto__ = arr;
var i = (0);
var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < a__12481__auto__.length)){
var G__24416 = (i + (1));
var G__24417 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,(arr[i]));
i = G__24416;
res = G__24417;
continue;
} else {
return res;
}
break;
}
})();
return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
});
/**
* Returns a set of the distinct elements of coll.
*/
cljs.core.set = (function set(coll){
var in$ = cljs.core.seq(coll);
if((in$ == null)){
return cljs.core.PersistentHashSet.EMPTY;
} else {
if(((in$ instanceof cljs.core.IndexedSeq)) && ((in$.i === (0)))){
return cljs.core.set_from_indexed_seq(in$);
} else {
var in$__$1 = in$;
var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if(!((in$__$1 == null))){
var G__24418 = in$__$1.cljs$core$INext$_next$arity$1(null);
var G__24419 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,in$__$1.cljs$core$ISeq$_first$arity$1(null));
in$__$1 = G__24418;
out = G__24419;
continue;
} else {
return out.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
}
break;
}

}
}
});
/**
* @param {...*} var_args
*/
cljs.core.hash_set = (function() {
var hash_set = null;
var hash_set__0 = (function (){
return cljs.core.PersistentHashSet.EMPTY;
});
var hash_set__1 = (function() { 
var G__24420__delegate = function (keys){
return cljs.core.set(keys);
};
var G__24420 = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__24421__i = 0, G__24421__a = new Array(arguments.length -  0);
while (G__24421__i < G__24421__a.length) {G__24421__a[G__24421__i] = arguments[G__24421__i + 0]; ++G__24421__i;}
  keys = new cljs.core.IndexedSeq(G__24421__a,0);
} 
return G__24420__delegate.call(this,keys);};
G__24420.cljs$lang$maxFixedArity = 0;
G__24420.cljs$lang$applyTo = (function (arglist__24422){
var keys = cljs.core.seq(arglist__24422);
return G__24420__delegate(keys);
});
G__24420.cljs$core$IFn$_invoke$arity$variadic = G__24420__delegate;
return G__24420;
})()
;
hash_set = function(var_args){
var keys = var_args;
switch(arguments.length){
case 0:
return hash_set__0.call(this);
default:
var G__24423 = null;
if (arguments.length > 0) {
var G__24424__i = 0, G__24424__a = new Array(arguments.length -  0);
while (G__24424__i < G__24424__a.length) {G__24424__a[G__24424__i] = arguments[G__24424__i + 0]; ++G__24424__i;}
G__24423 = new cljs.core.IndexedSeq(G__24424__a,0);
}
return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(G__24423);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
hash_set.cljs$lang$maxFixedArity = 0;
hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
return hash_set;
})()
;
/**
* Returns a new sorted set with supplied keys.
* @param {...*} var_args
*/
cljs.core.sorted_set = (function() { 
var sorted_set__delegate = function (keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,cljs.core.PersistentTreeSet.EMPTY,keys);
};
var sorted_set = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__24425__i = 0, G__24425__a = new Array(arguments.length -  0);
while (G__24425__i < G__24425__a.length) {G__24425__a[G__24425__i] = arguments[G__24425__i + 0]; ++G__24425__i;}
  keys = new cljs.core.IndexedSeq(G__24425__a,0);
} 
return sorted_set__delegate.call(this,keys);};
sorted_set.cljs$lang$maxFixedArity = 0;
sorted_set.cljs$lang$applyTo = (function (arglist__24426){
var keys = cljs.core.seq(arglist__24426);
return sorted_set__delegate(keys);
});
sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
return sorted_set;
})()
;
/**
* Returns a new sorted set with supplied keys, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_set_by = (function() { 
var sorted_set_by__delegate = function (comparator,keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,(new cljs.core.PersistentTreeSet(null,cljs.core.sorted_map_by(comparator),(0))),keys);
};
var sorted_set_by = function (comparator,var_args){
var keys = null;
if (arguments.length > 1) {
var G__24427__i = 0, G__24427__a = new Array(arguments.length -  1);
while (G__24427__i < G__24427__a.length) {G__24427__a[G__24427__i] = arguments[G__24427__i + 1]; ++G__24427__i;}
  keys = new cljs.core.IndexedSeq(G__24427__a,0);
} 
return sorted_set_by__delegate.call(this,comparator,keys);};
sorted_set_by.cljs$lang$maxFixedArity = 1;
sorted_set_by.cljs$lang$applyTo = (function (arglist__24428){
var comparator = cljs.core.first(arglist__24428);
var keys = cljs.core.rest(arglist__24428);
return sorted_set_by__delegate(comparator,keys);
});
sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
return sorted_set_by;
})()
;
/**
* Given a map of replacement pairs and a vector/collection, returns a
* vector/seq with any elements = a key in smap replaced with the
* corresponding val in smap.  Returns a transducer when no collection
* is provided.
*/
cljs.core.replace = (function() {
var replace = null;
var replace__1 = (function (smap){
return cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p1__24429_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__24429_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.val(e);
} else {
return p1__24429_SHARP_;
}
}));
});
var replace__2 = (function (smap,coll){
if(cljs.core.vector_QMARK_(coll)){
var n = cljs.core.count(coll);
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (n){
return (function (v,i){
var temp__4124__auto__ = cljs.core.find(smap,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,i));
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v,i,cljs.core.second(e));
} else {
return v;
}
});})(n))
,coll,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.iterate(cljs.core.inc,(0))));
} else {
return cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__24430_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__24430_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.second(e);
} else {
return p1__24430_SHARP_;
}
}),coll);
}
});
replace = function(smap,coll){
switch(arguments.length){
case 1:
return replace__1.call(this,smap);
case 2:
return replace__2.call(this,smap,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
replace.cljs$core$IFn$_invoke$arity$1 = replace__1;
replace.cljs$core$IFn$_invoke$arity$2 = replace__2;
return replace;
})()
;
/**
* Returns a lazy sequence of the elements of coll with duplicates removed
*/
cljs.core.distinct = (function() {
var distinct = null;
var distinct__0 = (function (){
return (function (rf){
var seen = cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY);
return ((function (seen){
return (function() {
var G__24451 = null;
var G__24451__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__24451__1 = (function (result){
var G__24441 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__24441) : rf.call(null,G__24441));
});
var G__24451__2 = (function (result,input){
if(cljs.core.contains_QMARK_((function (){var G__24442 = seen;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__24442) : cljs.core.deref.call(null,G__24442));
})(),input)){
return result;
} else {
seen.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen.cljs$core$IDeref$_deref$arity$1(null),input));

var G__24443 = result;
var G__24444 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__24443,G__24444) : rf.call(null,G__24443,G__24444));
}
});
G__24451 = function(result,input){
switch(arguments.length){
case 0:
return G__24451__0.call(this);
case 1:
return G__24451__1.call(this,result);
case 2:
return G__24451__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24451.cljs$core$IFn$_invoke$arity$0 = G__24451__0;
G__24451.cljs$core$IFn$_invoke$arity$1 = G__24451__1;
G__24451.cljs$core$IFn$_invoke$arity$2 = G__24451__2;
return G__24451;
})()
;})(seen))
});
});
var distinct__1 = (function (coll){
var step = (function step(xs,seen){
return (new cljs.core.LazySeq(null,(function (){
return (function (p__24449,seen__$1){
while(true){
var vec__24450 = p__24449;
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24450,(0),null);
var xs__$1 = vec__24450;
var temp__4126__auto__ = cljs.core.seq(xs__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.contains_QMARK_(seen__$1,f)){
var G__24452 = cljs.core.rest(s);
var G__24453 = seen__$1;
p__24449 = G__24452;
seen__$1 = G__24453;
continue;
} else {
return cljs.core.cons(f,step(cljs.core.rest(s),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1,f)));
}
} else {
return null;
}
break;
}
}).call(null,xs,seen);
}),null,null));
});
return step(coll,cljs.core.PersistentHashSet.EMPTY);
});
distinct = function(coll){
switch(arguments.length){
case 0:
return distinct__0.call(this);
case 1:
return distinct__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct.cljs$core$IFn$_invoke$arity$0 = distinct__0;
distinct.cljs$core$IFn$_invoke$arity$1 = distinct__1;
return distinct;
})()
;
cljs.core.butlast = (function butlast(s){
var ret = cljs.core.PersistentVector.EMPTY;
var s__$1 = s;
while(true){
if(cljs.core.next(s__$1)){
var G__24454 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret,cljs.core.first(s__$1));
var G__24455 = cljs.core.next(s__$1);
ret = G__24454;
s__$1 = G__24455;
continue;
} else {
return cljs.core.seq(ret);
}
break;
}
});
/**
* Returns the name String of a string, symbol or keyword.
*/
cljs.core.name = (function name(x){
if((function (){var G__24457 = x;
if(G__24457){
var bit__12274__auto__ = (G__24457.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__12274__auto__) || (G__24457.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_name$arity$1(null);
} else {
if(typeof x === 'string'){
return x;
} else {
throw (new Error([cljs.core.str("Doesn't support name: "),cljs.core.str(x)].join('')));
}
}
});
/**
* Returns a map with the keys mapped to the corresponding vals.
*/
cljs.core.zipmap = (function zipmap(keys,vals){
var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
var ks = cljs.core.seq(keys);
var vs = cljs.core.seq(vals);
while(true){
if((ks) && (vs)){
var G__24458 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map,cljs.core.first(ks),cljs.core.first(vs));
var G__24459 = cljs.core.next(ks);
var G__24460 = cljs.core.next(vs);
map = G__24458;
ks = G__24459;
vs = G__24460;
continue;
} else {
return cljs.core.persistent_BANG_(map);
}
break;
}
});
/**
* Returns the x for which (k x), a number, is greatest.
* @param {...*} var_args
*/
cljs.core.max_key = (function() {
var max_key = null;
var max_key__2 = (function (k,x){
return x;
});
var max_key__3 = (function (k,x,y){
if(((function (){var G__24471 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__24471) : k.call(null,G__24471));
})() > (function (){var G__24472 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__24472) : k.call(null,G__24472));
})())){
return x;
} else {
return y;
}
});
var max_key__4 = (function() { 
var G__24473__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__24461_SHARP_,p2__24462_SHARP_){
return max_key.cljs$core$IFn$_invoke$arity$3(k,p1__24461_SHARP_,p2__24462_SHARP_);
}),max_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__24473 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__24474__i = 0, G__24474__a = new Array(arguments.length -  3);
while (G__24474__i < G__24474__a.length) {G__24474__a[G__24474__i] = arguments[G__24474__i + 3]; ++G__24474__i;}
  more = new cljs.core.IndexedSeq(G__24474__a,0);
} 
return G__24473__delegate.call(this,k,x,y,more);};
G__24473.cljs$lang$maxFixedArity = 3;
G__24473.cljs$lang$applyTo = (function (arglist__24475){
var k = cljs.core.first(arglist__24475);
arglist__24475 = cljs.core.next(arglist__24475);
var x = cljs.core.first(arglist__24475);
arglist__24475 = cljs.core.next(arglist__24475);
var y = cljs.core.first(arglist__24475);
var more = cljs.core.rest(arglist__24475);
return G__24473__delegate(k,x,y,more);
});
G__24473.cljs$core$IFn$_invoke$arity$variadic = G__24473__delegate;
return G__24473;
})()
;
max_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return max_key__2.call(this,k,x);
case 3:
return max_key__3.call(this,k,x,y);
default:
var G__24476 = null;
if (arguments.length > 3) {
var G__24477__i = 0, G__24477__a = new Array(arguments.length -  3);
while (G__24477__i < G__24477__a.length) {G__24477__a[G__24477__i] = arguments[G__24477__i + 3]; ++G__24477__i;}
G__24476 = new cljs.core.IndexedSeq(G__24477__a,0);
}
return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__24476);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max_key.cljs$lang$maxFixedArity = 3;
max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
return max_key;
})()
;
/**
* Returns the x for which (k x), a number, is least.
* @param {...*} var_args
*/
cljs.core.min_key = (function() {
var min_key = null;
var min_key__2 = (function (k,x){
return x;
});
var min_key__3 = (function (k,x,y){
if(((function (){var G__24488 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__24488) : k.call(null,G__24488));
})() < (function (){var G__24489 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__24489) : k.call(null,G__24489));
})())){
return x;
} else {
return y;
}
});
var min_key__4 = (function() { 
var G__24490__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__24478_SHARP_,p2__24479_SHARP_){
return min_key.cljs$core$IFn$_invoke$arity$3(k,p1__24478_SHARP_,p2__24479_SHARP_);
}),min_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__24490 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__24491__i = 0, G__24491__a = new Array(arguments.length -  3);
while (G__24491__i < G__24491__a.length) {G__24491__a[G__24491__i] = arguments[G__24491__i + 3]; ++G__24491__i;}
  more = new cljs.core.IndexedSeq(G__24491__a,0);
} 
return G__24490__delegate.call(this,k,x,y,more);};
G__24490.cljs$lang$maxFixedArity = 3;
G__24490.cljs$lang$applyTo = (function (arglist__24492){
var k = cljs.core.first(arglist__24492);
arglist__24492 = cljs.core.next(arglist__24492);
var x = cljs.core.first(arglist__24492);
arglist__24492 = cljs.core.next(arglist__24492);
var y = cljs.core.first(arglist__24492);
var more = cljs.core.rest(arglist__24492);
return G__24490__delegate(k,x,y,more);
});
G__24490.cljs$core$IFn$_invoke$arity$variadic = G__24490__delegate;
return G__24490;
})()
;
min_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return min_key__2.call(this,k,x);
case 3:
return min_key__3.call(this,k,x,y);
default:
var G__24493 = null;
if (arguments.length > 3) {
var G__24494__i = 0, G__24494__a = new Array(arguments.length -  3);
while (G__24494__i < G__24494__a.length) {G__24494__a[G__24494__i] = arguments[G__24494__i + 3]; ++G__24494__i;}
G__24493 = new cljs.core.IndexedSeq(G__24494__a,0);
}
return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__24493);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min_key.cljs$lang$maxFixedArity = 3;
min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
return min_key;
})()
;

/**
* @constructor
*/
cljs.core.ArrayList = (function (arr){
this.arr = arr;
})
cljs.core.ArrayList.prototype.add = (function (x){
var self__ = this;
var _ = this;
return self__.arr.push(x);
});

cljs.core.ArrayList.prototype.size = (function (){
var self__ = this;
var _ = this;
return self__.arr.length;
});

cljs.core.ArrayList.prototype.clear = (function (){
var self__ = this;
var _ = this;
return self__.arr = [];
});

cljs.core.ArrayList.prototype.isEmpty = (function (){
var self__ = this;
var _ = this;
return (self__.arr.length === (0));
});

cljs.core.ArrayList.prototype.toArray = (function (){
var self__ = this;
var _ = this;
return self__.arr;
});

cljs.core.ArrayList.cljs$lang$type = true;

cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";

cljs.core.ArrayList.cljs$lang$ctorPrWriter = (function (this__12187__auto__,writer__12188__auto__,opt__12189__auto__){
return cljs.core._write(writer__12188__auto__,"cljs.core/ArrayList");
});

cljs.core.__GT_ArrayList = (function __GT_ArrayList(arr){
return (new cljs.core.ArrayList(arr));
});

cljs.core.array_list = (function array_list(){
return (new cljs.core.ArrayList([]));
});
/**
* Returns a lazy sequence of lists like partition, but may include
* partitions with fewer than n items at the end.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_all = (function() {
var partition_all = null;
var partition_all__1 = (function (n){
return (function (rf){
var a = cljs.core.array_list();
return ((function (a){
return (function() {
var G__24511 = null;
var G__24511__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__24511__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__24506 = result;
var G__24507 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__24506,G__24507) : rf.call(null,G__24506,G__24507));
})());
})());
var G__24508 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__24508) : rf.call(null,G__24508));
});
var G__24511__2 = (function (result,input){
a.add(input);

if((n === a.size())){
var v = cljs.core.vec(a.toArray());
a.clear();

var G__24509 = result;
var G__24510 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__24509,G__24510) : rf.call(null,G__24509,G__24510));
} else {
return result;
}
});
G__24511 = function(result,input){
switch(arguments.length){
case 0:
return G__24511__0.call(this);
case 1:
return G__24511__1.call(this,result);
case 2:
return G__24511__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24511.cljs$core$IFn$_invoke$arity$0 = G__24511__0;
G__24511.cljs$core$IFn$_invoke$arity$1 = G__24511__1;
G__24511.cljs$core$IFn$_invoke$arity$2 = G__24511__2;
return G__24511;
})()
;})(a))
});
});
var partition_all__2 = (function (n,coll){
return partition_all.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition_all__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s),partition_all.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
}),null,null));
});
partition_all = function(n,step,coll){
switch(arguments.length){
case 1:
return partition_all__1.call(this,n);
case 2:
return partition_all__2.call(this,n,step);
case 3:
return partition_all__3.call(this,n,step,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_all.cljs$core$IFn$_invoke$arity$1 = partition_all__1;
partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
return partition_all;
})()
;
/**
* Returns a lazy sequence of successive items from coll while
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.take_while = (function() {
var take_while = null;
var take_while__1 = (function (pred){
return (function (rf){
return (function() {
var G__24524 = null;
var G__24524__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__24524__1 = (function (result){
var G__24519 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__24519) : rf.call(null,G__24519));
});
var G__24524__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__24520 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__24520) : pred.call(null,G__24520));
})())){
var G__24521 = result;
var G__24522 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__24521,G__24522) : rf.call(null,G__24521,G__24522));
} else {
return cljs.core.reduced(result);
}
});
G__24524 = function(result,input){
switch(arguments.length){
case 0:
return G__24524__0.call(this);
case 1:
return G__24524__1.call(this,result);
case 2:
return G__24524__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24524.cljs$core$IFn$_invoke$arity$0 = G__24524__0;
G__24524.cljs$core$IFn$_invoke$arity$1 = G__24524__1;
G__24524.cljs$core$IFn$_invoke$arity$2 = G__24524__2;
return G__24524;
})()
});
});
var take_while__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.truth_((function (){var G__24523 = cljs.core.first(s);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__24523) : pred.call(null,G__24523));
})())){
return cljs.core.cons(cljs.core.first(s),take_while.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take_while = function(pred,coll){
switch(arguments.length){
case 1:
return take_while__1.call(this,pred);
case 2:
return take_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_while.cljs$core$IFn$_invoke$arity$1 = take_while__1;
take_while.cljs$core$IFn$_invoke$arity$2 = take_while__2;
return take_while;
})()
;
cljs.core.mk_bound_fn = (function mk_bound_fn(sc,test,key){
return (function (e){
var comp = cljs.core._comparator(sc);
var G__24529 = (function (){var G__24531 = cljs.core._entry_key(sc,e);
var G__24532 = key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__24531,G__24532) : comp.call(null,G__24531,G__24532));
})();
var G__24530 = (0);
return (test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__24529,G__24530) : test.call(null,G__24529,G__24530));
});
});
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.subseq = (function() {
var subseq = null;
var subseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_,cljs.core._GT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__24536 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24536,(0),null);
var s = vec__24536;
if(cljs.core.truth_((function (){var G__24537 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__24537) : include.call(null,G__24537));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,true));
}
});
var subseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,start_key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__24538 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24538,(0),null);
var s = vec__24538;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,end_test,end_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,start_test,start_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
subseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return subseq__3.call(this,sc,start_test,start_key);
case 5:
return subseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
return subseq;
})()
;
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a reverse seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.rsubseq = (function() {
var rsubseq = null;
var rsubseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_,cljs.core._LT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__24542 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24542,(0),null);
var s = vec__24542;
if(cljs.core.truth_((function (){var G__24543 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__24543) : include.call(null,G__24543));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,false));
}
});
var rsubseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,end_key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__24544 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24544,(0),null);
var s = vec__24544;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,start_test,start_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,end_test,end_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
rsubseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return rsubseq__3.call(this,sc,start_test,start_key);
case 5:
return rsubseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
return rsubseq;
})()
;

/**
* @constructor
*/
cljs.core.RangeIterator = (function (i,end,step){
this.i = i;
this.end = end;
this.step = step;
})
cljs.core.RangeIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__.step > (0))){
return (self__.i < self__.end);
} else {
return (self__.i > self__.end);
}
});

cljs.core.RangeIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.i;
self__.i = (self__.i + self__.step);

return ret;
});

cljs.core.RangeIterator.cljs$lang$type = true;

cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";

cljs.core.RangeIterator.cljs$lang$ctorPrWriter = (function (this__12187__auto__,writer__12188__auto__,opt__12189__auto__){
return cljs.core._write(writer__12188__auto__,"cljs.core/RangeIterator");
});

cljs.core.__GT_RangeIterator = (function __GT_RangeIterator(i,end,step){
return (new cljs.core.RangeIterator(i,end,step));
});


/**
* @constructor
*/
cljs.core.Range = (function (meta,start,end,step,__hash){
this.meta = meta;
this.start = start;
this.end = end;
this.step = step;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375006;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Range.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Range.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (rng,n){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
throw (new Error("Index out of bounds"));
}
}
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (rng,n,not_found){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
return not_found;
}
}
});

cljs.core.Range.prototype.cljs$core$IIterable$ = true;

cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RangeIterator(self__.start,self__.end,self__.step));
});

cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return self__.meta;
});

cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Range(self__.meta,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if(((self__.start + self__.step) < self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
} else {
if(((self__.start + self__.step) > self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(cljs.core.not(cljs.core._seq(rng__$1))){
return (0);
} else {
var G__24545 = ((self__.end - self__.start) / self__.step);
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__24545) : Math.ceil.call(null,G__24545));
}
});

cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
var h__12021__auto__ = self__.__hash;
if(!((h__12021__auto__ == null))){
return h__12021__auto__;
} else {
var h__12021__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
self__.__hash = h__12021__auto____$1;

return h__12021__auto____$1;
}
});

cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (rng,other){
var self__ = this;
var rng__$1 = this;
return cljs.core.equiv_sequential(rng__$1,other);
});

cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (rng,f){
var self__ = this;
var rng__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1,f);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (rng,f,init){
var self__ = this;
var rng__$1 = this;
var i = self__.start;
var ret = init;
while(true){
if((((self__.step > (0)))?(i < self__.end):(i > self__.end))){
var ret__$1 = (function (){var G__24546 = ret;
var G__24547 = i;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24546,G__24547) : f.call(null,G__24546,G__24547));
})();
if(cljs.core.reduced_QMARK_(ret__$1)){
var G__24548 = ret__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__24548) : cljs.core.deref.call(null,G__24548));
} else {
var G__24549 = (i + self__.step);
var G__24550 = ret__$1;
i = G__24549;
ret = G__24550;
continue;
}
} else {
return ret;
}
break;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((cljs.core._seq(rng__$1) == null)){
return null;
} else {
return self__.start;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(!((cljs.core._seq(rng__$1) == null))){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if((self__.start < self__.end)){
return rng__$1;
} else {
return null;
}
} else {
if((self__.start > self__.end)){
return rng__$1;
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (rng,meta__$1){
var self__ = this;
var rng__$1 = this;
return (new cljs.core.Range(meta__$1,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = (function (rng,o){
var self__ = this;
var rng__$1 = this;
return cljs.core.cons(o,rng__$1);
});

cljs.core.Range.cljs$lang$type = true;

cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";

cljs.core.Range.cljs$lang$ctorPrWriter = (function (this__12187__auto__,writer__12188__auto__,opt__12189__auto__){
return cljs.core._write(writer__12188__auto__,"cljs.core/Range");
});

cljs.core.__GT_Range = (function __GT_Range(meta,start,end,step,__hash){
return (new cljs.core.Range(meta,start,end,step,__hash));
});

(cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__12578__auto__ = this;
return cljs.core.es6_iterator(this__12578__auto__);
}));
/**
* Returns a lazy seq of nums from start (inclusive) to end
* (exclusive), by step, where start defaults to 0, step to 1,
* and end to infinity.
*/
cljs.core.range = (function() {
var range = null;
var range__0 = (function (){
return range.cljs$core$IFn$_invoke$arity$3((0),Number.MAX_VALUE,(1));
});
var range__1 = (function (end){
return range.cljs$core$IFn$_invoke$arity$3((0),end,(1));
});
var range__2 = (function (start,end){
return range.cljs$core$IFn$_invoke$arity$3(start,end,(1));
});
var range__3 = (function (start,end,step){
return (new cljs.core.Range(null,start,end,step,null));
});
range = function(start,end,step){
switch(arguments.length){
case 0:
return range__0.call(this);
case 1:
return range__1.call(this,start);
case 2:
return range__2.call(this,start,end);
case 3:
return range__3.call(this,start,end,step);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
range.cljs$core$IFn$_invoke$arity$0 = range__0;
range.cljs$core$IFn$_invoke$arity$1 = range__1;
range.cljs$core$IFn$_invoke$arity$2 = range__2;
range.cljs$core$IFn$_invoke$arity$3 = range__3;
return range;
})()
;
/**
* Returns a lazy seq of every nth item in coll.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.take_nth = (function() {
var take_nth = null;
var take_nth__1 = (function (n){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__24568 = null;
var G__24568__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__24568__1 = (function (result){
var G__24565 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__24565) : rf.call(null,G__24565));
});
var G__24568__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
if((cljs.core.rem(i,n) === (0))){
var G__24566 = result;
var G__24567 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__24566,G__24567) : rf.call(null,G__24566,G__24567));
} else {
return result;
}
});
G__24568 = function(result,input){
switch(arguments.length){
case 0:
return G__24568__0.call(this);
case 1:
return G__24568__1.call(this,result);
case 2:
return G__24568__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24568.cljs$core$IFn$_invoke$arity$0 = G__24568__0;
G__24568.cljs$core$IFn$_invoke$arity$1 = G__24568__1;
G__24568.cljs$core$IFn$_invoke$arity$2 = G__24568__2;
return G__24568;
})()
;})(ia))
});
});
var take_nth__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take_nth.cljs$core$IFn$_invoke$arity$2(n,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s)));
} else {
return null;
}
}),null,null));
});
take_nth = function(n,coll){
switch(arguments.length){
case 1:
return take_nth__1.call(this,n);
case 2:
return take_nth__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_nth.cljs$core$IFn$_invoke$arity$1 = take_nth__1;
take_nth.cljs$core$IFn$_invoke$arity$2 = take_nth__2;
return take_nth;
})()
;
/**
* Returns a vector of [(take-while pred coll) (drop-while pred coll)]
*/
cljs.core.split_with = (function split_with(pred,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred,coll),cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred,coll)], null);
});
/**
* Applies f to each value in coll, splitting it each time f returns a
* new value.  Returns a lazy seq of partitions.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_by = (function() {
var partition_by = null;
var partition_by__1 = (function (f){
return (function (rf){
var a = cljs.core.array_list();
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (a,pa){
return (function() {
var G__24590 = null;
var G__24590__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__24590__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__24581 = result;
var G__24582 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__24581,G__24582) : rf.call(null,G__24581,G__24582));
})());
})());
var G__24583 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__24583) : rf.call(null,G__24583));
});
var G__24590__2 = (function (result,input){
var pval = (function (){var G__24584 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__24584) : cljs.core.deref.call(null,G__24584));
})();
var val = (function (){var G__24585 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__24585) : f.call(null,G__24585));
})();
cljs.core.vreset_BANG_(pa,val);

if((cljs.core.keyword_identical_QMARK_(pval,new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439))) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val,pval))){
a.add(input);

return result;
} else {
var v = cljs.core.vec(a.toArray());
a.clear();

var ret = (function (){var G__24586 = result;
var G__24587 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__24586,G__24587) : rf.call(null,G__24586,G__24587));
})();
if(cljs.core.reduced_QMARK_(ret)){
} else {
a.add(input);
}

return ret;
}
});
G__24590 = function(result,input){
switch(arguments.length){
case 0:
return G__24590__0.call(this);
case 1:
return G__24590__1.call(this,result);
case 2:
return G__24590__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24590.cljs$core$IFn$_invoke$arity$0 = G__24590__0;
G__24590.cljs$core$IFn$_invoke$arity$1 = G__24590__1;
G__24590.cljs$core$IFn$_invoke$arity$2 = G__24590__2;
return G__24590;
})()
;})(a,pa))
});
});
var partition_by__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var fst = cljs.core.first(s);
var fv = (function (){var G__24588 = fst;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__24588) : f.call(null,G__24588));
})();
var run = cljs.core.cons(fst,cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(((function (fst,fv,s,temp__4126__auto__){
return (function (p1__24569_SHARP_){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv,(function (){var G__24589 = p1__24569_SHARP_;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__24589) : f.call(null,G__24589));
})());
});})(fst,fv,s,temp__4126__auto__))
,cljs.core.next(s)));
return cljs.core.cons(run,partition_by.cljs$core$IFn$_invoke$arity$2(f,cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run),s))));
} else {
return null;
}
}),null,null));
});
partition_by = function(f,coll){
switch(arguments.length){
case 1:
return partition_by__1.call(this,f);
case 2:
return partition_by__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_by.cljs$core$IFn$_invoke$arity$1 = partition_by__1;
partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
return partition_by;
})()
;
/**
* Returns a map from distinct items in coll to the number of times
* they appear.
*/
cljs.core.frequencies = (function frequencies(coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (counts,x){
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts,x,(cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts,x,(0)) + (1)));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Returns a lazy seq of the intermediate values of the reduction (as
* per reduce) of coll by f, starting with init.
*/
cljs.core.reductions = (function() {
var reductions = null;
var reductions__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,cljs.core.first(s),cljs.core.rest(s));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
}
}),null,null));
});
var reductions__3 = (function (f,init,coll){
return cljs.core.cons(init,(new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,(function (){var G__24599 = init;
var G__24600 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24599,G__24600) : f.call(null,G__24599,G__24600));
})(),cljs.core.rest(s));
} else {
return null;
}
}),null,null)));
});
reductions = function(f,init,coll){
switch(arguments.length){
case 2:
return reductions__2.call(this,f,init);
case 3:
return reductions__3.call(this,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
return reductions;
})()
;
/**
* Takes a set of functions and returns a fn that is the juxtaposition
* of those fns.  The returned fn takes a variable number of args, and
* returns a vector containing the result of applying each fn to the
* args (left-to-right).
* ((juxt a b c) x) => [(a x) (b x) (c x)]
* @param {...*} var_args
*/
cljs.core.juxt = (function() {
var juxt = null;
var juxt__1 = (function (f){
return (function() {
var G__24695 = null;
var G__24695__0 = (function (){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})()],null));
});
var G__24695__1 = (function (x){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__24653 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__24653) : f.call(null,G__24653));
})()],null));
});
var G__24695__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__24654 = x;
var G__24655 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24654,G__24655) : f.call(null,G__24654,G__24655));
})()],null));
});
var G__24695__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__24656 = x;
var G__24657 = y;
var G__24658 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__24656,G__24657,G__24658) : f.call(null,G__24656,G__24657,G__24658));
})()],null));
});
var G__24695__4 = (function() { 
var G__24696__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args)],null));
};
var G__24696 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__24697__i = 0, G__24697__a = new Array(arguments.length -  3);
while (G__24697__i < G__24697__a.length) {G__24697__a[G__24697__i] = arguments[G__24697__i + 3]; ++G__24697__i;}
  args = new cljs.core.IndexedSeq(G__24697__a,0);
} 
return G__24696__delegate.call(this,x,y,z,args);};
G__24696.cljs$lang$maxFixedArity = 3;
G__24696.cljs$lang$applyTo = (function (arglist__24698){
var x = cljs.core.first(arglist__24698);
arglist__24698 = cljs.core.next(arglist__24698);
var y = cljs.core.first(arglist__24698);
arglist__24698 = cljs.core.next(arglist__24698);
var z = cljs.core.first(arglist__24698);
var args = cljs.core.rest(arglist__24698);
return G__24696__delegate(x,y,z,args);
});
G__24696.cljs$core$IFn$_invoke$arity$variadic = G__24696__delegate;
return G__24696;
})()
;
G__24695 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__24695__0.call(this);
case 1:
return G__24695__1.call(this,x);
case 2:
return G__24695__2.call(this,x,y);
case 3:
return G__24695__3.call(this,x,y,z);
default:
var G__24699 = null;
if (arguments.length > 3) {
var G__24700__i = 0, G__24700__a = new Array(arguments.length -  3);
while (G__24700__i < G__24700__a.length) {G__24700__a[G__24700__i] = arguments[G__24700__i + 3]; ++G__24700__i;}
G__24699 = new cljs.core.IndexedSeq(G__24700__a,0);
}
return G__24695__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__24699);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24695.cljs$lang$maxFixedArity = 3;
G__24695.cljs$lang$applyTo = G__24695__4.cljs$lang$applyTo;
G__24695.cljs$core$IFn$_invoke$arity$0 = G__24695__0;
G__24695.cljs$core$IFn$_invoke$arity$1 = G__24695__1;
G__24695.cljs$core$IFn$_invoke$arity$2 = G__24695__2;
G__24695.cljs$core$IFn$_invoke$arity$3 = G__24695__3;
G__24695.cljs$core$IFn$_invoke$arity$variadic = G__24695__4.cljs$core$IFn$_invoke$arity$variadic;
return G__24695;
})()
});
var juxt__2 = (function (f,g){
return (function() {
var G__24701 = null;
var G__24701__0 = (function (){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})()],null));
});
var G__24701__1 = (function (x){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__24659 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__24659) : f.call(null,G__24659));
})(),(function (){var G__24660 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__24660) : g.call(null,G__24660));
})()],null));
});
var G__24701__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__24661 = x;
var G__24662 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24661,G__24662) : f.call(null,G__24661,G__24662));
})(),(function (){var G__24663 = x;
var G__24664 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__24663,G__24664) : g.call(null,G__24663,G__24664));
})()],null));
});
var G__24701__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__24665 = x;
var G__24666 = y;
var G__24667 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__24665,G__24666,G__24667) : f.call(null,G__24665,G__24666,G__24667));
})(),(function (){var G__24668 = x;
var G__24669 = y;
var G__24670 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__24668,G__24669,G__24670) : g.call(null,G__24668,G__24669,G__24670));
})()],null));
});
var G__24701__4 = (function() { 
var G__24702__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args)],null));
};
var G__24702 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__24703__i = 0, G__24703__a = new Array(arguments.length -  3);
while (G__24703__i < G__24703__a.length) {G__24703__a[G__24703__i] = arguments[G__24703__i + 3]; ++G__24703__i;}
  args = new cljs.core.IndexedSeq(G__24703__a,0);
} 
return G__24702__delegate.call(this,x,y,z,args);};
G__24702.cljs$lang$maxFixedArity = 3;
G__24702.cljs$lang$applyTo = (function (arglist__24704){
var x = cljs.core.first(arglist__24704);
arglist__24704 = cljs.core.next(arglist__24704);
var y = cljs.core.first(arglist__24704);
arglist__24704 = cljs.core.next(arglist__24704);
var z = cljs.core.first(arglist__24704);
var args = cljs.core.rest(arglist__24704);
return G__24702__delegate(x,y,z,args);
});
G__24702.cljs$core$IFn$_invoke$arity$variadic = G__24702__delegate;
return G__24702;
})()
;
G__24701 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__24701__0.call(this);
case 1:
return G__24701__1.call(this,x);
case 2:
return G__24701__2.call(this,x,y);
case 3:
return G__24701__3.call(this,x,y,z);
default:
var G__24705 = null;
if (arguments.length > 3) {
var G__24706__i = 0, G__24706__a = new Array(arguments.length -  3);
while (G__24706__i < G__24706__a.length) {G__24706__a[G__24706__i] = arguments[G__24706__i + 3]; ++G__24706__i;}
G__24705 = new cljs.core.IndexedSeq(G__24706__a,0);
}
return G__24701__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__24705);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24701.cljs$lang$maxFixedArity = 3;
G__24701.cljs$lang$applyTo = G__24701__4.cljs$lang$applyTo;
G__24701.cljs$core$IFn$_invoke$arity$0 = G__24701__0;
G__24701.cljs$core$IFn$_invoke$arity$1 = G__24701__1;
G__24701.cljs$core$IFn$_invoke$arity$2 = G__24701__2;
G__24701.cljs$core$IFn$_invoke$arity$3 = G__24701__3;
G__24701.cljs$core$IFn$_invoke$arity$variadic = G__24701__4.cljs$core$IFn$_invoke$arity$variadic;
return G__24701;
})()
});
var juxt__3 = (function (f,g,h){
return (function() {
var G__24707 = null;
var G__24707__0 = (function (){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})(),(function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})()],null));
});
var G__24707__1 = (function (x){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__24671 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__24671) : f.call(null,G__24671));
})(),(function (){var G__24672 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__24672) : g.call(null,G__24672));
})(),(function (){var G__24673 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__24673) : h.call(null,G__24673));
})()],null));
});
var G__24707__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__24674 = x;
var G__24675 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24674,G__24675) : f.call(null,G__24674,G__24675));
})(),(function (){var G__24676 = x;
var G__24677 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__24676,G__24677) : g.call(null,G__24676,G__24677));
})(),(function (){var G__24678 = x;
var G__24679 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__24678,G__24679) : h.call(null,G__24678,G__24679));
})()],null));
});
var G__24707__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__24680 = x;
var G__24681 = y;
var G__24682 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__24680,G__24681,G__24682) : f.call(null,G__24680,G__24681,G__24682));
})(),(function (){var G__24683 = x;
var G__24684 = y;
var G__24685 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__24683,G__24684,G__24685) : g.call(null,G__24683,G__24684,G__24685));
})(),(function (){var G__24686 = x;
var G__24687 = y;
var G__24688 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__24686,G__24687,G__24688) : h.call(null,G__24686,G__24687,G__24688));
})()],null));
});
var G__24707__4 = (function() { 
var G__24708__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args)],null));
};
var G__24708 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__24709__i = 0, G__24709__a = new Array(arguments.length -  3);
while (G__24709__i < G__24709__a.length) {G__24709__a[G__24709__i] = arguments[G__24709__i + 3]; ++G__24709__i;}
  args = new cljs.core.IndexedSeq(G__24709__a,0);
} 
return G__24708__delegate.call(this,x,y,z,args);};
G__24708.cljs$lang$maxFixedArity = 3;
G__24708.cljs$lang$applyTo = (function (arglist__24710){
var x = cljs.core.first(arglist__24710);
arglist__24710 = cljs.core.next(arglist__24710);
var y = cljs.core.first(arglist__24710);
arglist__24710 = cljs.core.next(arglist__24710);
var z = cljs.core.first(arglist__24710);
var args = cljs.core.rest(arglist__24710);
return G__24708__delegate(x,y,z,args);
});
G__24708.cljs$core$IFn$_invoke$arity$variadic = G__24708__delegate;
return G__24708;
})()
;
G__24707 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__24707__0.call(this);
case 1:
return G__24707__1.call(this,x);
case 2:
return G__24707__2.call(this,x,y);
case 3:
return G__24707__3.call(this,x,y,z);
default:
var G__24711 = null;
if (arguments.length > 3) {
var G__24712__i = 0, G__24712__a = new Array(arguments.length -  3);
while (G__24712__i < G__24712__a.length) {G__24712__a[G__24712__i] = arguments[G__24712__i + 3]; ++G__24712__i;}
G__24711 = new cljs.core.IndexedSeq(G__24712__a,0);
}
return G__24707__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__24711);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24707.cljs$lang$maxFixedArity = 3;
G__24707.cljs$lang$applyTo = G__24707__4.cljs$lang$applyTo;
G__24707.cljs$core$IFn$_invoke$arity$0 = G__24707__0;
G__24707.cljs$core$IFn$_invoke$arity$1 = G__24707__1;
G__24707.cljs$core$IFn$_invoke$arity$2 = G__24707__2;
G__24707.cljs$core$IFn$_invoke$arity$3 = G__24707__3;
G__24707.cljs$core$IFn$_invoke$arity$variadic = G__24707__4.cljs$core$IFn$_invoke$arity$variadic;
return G__24707;
})()
});
var juxt__4 = (function() { 
var G__24713__delegate = function (f,g,h,fs){
var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f,g,h,fs);
return ((function (fs__$1){
return (function() {
var G__24714 = null;
var G__24714__0 = (function (){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__24601_SHARP_,p2__24602_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__24601_SHARP_,(function (){return (p2__24602_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__24602_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__24602_SHARP_.call(null));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__24714__1 = (function (x){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__24603_SHARP_,p2__24604_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__24603_SHARP_,(function (){var G__24689 = x;
return (p2__24604_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__24604_SHARP_.cljs$core$IFn$_invoke$arity$1(G__24689) : p2__24604_SHARP_.call(null,G__24689));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__24714__2 = (function (x,y){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__24605_SHARP_,p2__24606_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__24605_SHARP_,(function (){var G__24690 = x;
var G__24691 = y;
return (p2__24606_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__24606_SHARP_.cljs$core$IFn$_invoke$arity$2(G__24690,G__24691) : p2__24606_SHARP_.call(null,G__24690,G__24691));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__24714__3 = (function (x,y,z){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__24607_SHARP_,p2__24608_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__24607_SHARP_,(function (){var G__24692 = x;
var G__24693 = y;
var G__24694 = z;
return (p2__24608_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__24608_SHARP_.cljs$core$IFn$_invoke$arity$3(G__24692,G__24693,G__24694) : p2__24608_SHARP_.call(null,G__24692,G__24693,G__24694));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__24714__4 = (function() { 
var G__24715__delegate = function (x,y,z,args){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__24609_SHARP_,p2__24610_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__24609_SHARP_,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__24610_SHARP_,x,y,z,args));
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
};
var G__24715 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__24716__i = 0, G__24716__a = new Array(arguments.length -  3);
while (G__24716__i < G__24716__a.length) {G__24716__a[G__24716__i] = arguments[G__24716__i + 3]; ++G__24716__i;}
  args = new cljs.core.IndexedSeq(G__24716__a,0);
} 
return G__24715__delegate.call(this,x,y,z,args);};
G__24715.cljs$lang$maxFixedArity = 3;
G__24715.cljs$lang$applyTo = (function (arglist__24717){
var x = cljs.core.first(arglist__24717);
arglist__24717 = cljs.core.next(arglist__24717);
var y = cljs.core.first(arglist__24717);
arglist__24717 = cljs.core.next(arglist__24717);
var z = cljs.core.first(arglist__24717);
var args = cljs.core.rest(arglist__24717);
return G__24715__delegate(x,y,z,args);
});
G__24715.cljs$core$IFn$_invoke$arity$variadic = G__24715__delegate;
return G__24715;
})()
;
G__24714 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__24714__0.call(this);
case 1:
return G__24714__1.call(this,x);
case 2:
return G__24714__2.call(this,x,y);
case 3:
return G__24714__3.call(this,x,y,z);
default:
var G__24718 = null;
if (arguments.length > 3) {
var G__24719__i = 0, G__24719__a = new Array(arguments.length -  3);
while (G__24719__i < G__24719__a.length) {G__24719__a[G__24719__i] = arguments[G__24719__i + 3]; ++G__24719__i;}
G__24718 = new cljs.core.IndexedSeq(G__24719__a,0);
}
return G__24714__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__24718);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24714.cljs$lang$maxFixedArity = 3;
G__24714.cljs$lang$applyTo = G__24714__4.cljs$lang$applyTo;
G__24714.cljs$core$IFn$_invoke$arity$0 = G__24714__0;
G__24714.cljs$core$IFn$_invoke$arity$1 = G__24714__1;
G__24714.cljs$core$IFn$_invoke$arity$2 = G__24714__2;
G__24714.cljs$core$IFn$_invoke$arity$3 = G__24714__3;
G__24714.cljs$core$IFn$_invoke$arity$variadic = G__24714__4.cljs$core$IFn$_invoke$arity$variadic;
return G__24714;
})()
;})(fs__$1))
};
var G__24713 = function (f,g,h,var_args){
var fs = null;
if (arguments.length > 3) {
var G__24720__i = 0, G__24720__a = new Array(arguments.length -  3);
while (G__24720__i < G__24720__a.length) {G__24720__a[G__24720__i] = arguments[G__24720__i + 3]; ++G__24720__i;}
  fs = new cljs.core.IndexedSeq(G__24720__a,0);
} 
return G__24713__delegate.call(this,f,g,h,fs);};
G__24713.cljs$lang$maxFixedArity = 3;
G__24713.cljs$lang$applyTo = (function (arglist__24721){
var f = cljs.core.first(arglist__24721);
arglist__24721 = cljs.core.next(arglist__24721);
var g = cljs.core.first(arglist__24721);
arglist__24721 = cljs.core.next(arglist__24721);
var h = cljs.core.first(arglist__24721);
var fs = cljs.core.rest(arglist__24721);
return G__24713__delegate(f,g,h,fs);
});
G__24713.cljs$core$IFn$_invoke$arity$variadic = G__24713__delegate;
return G__24713;
})()
;
juxt = function(f,g,h,var_args){
var fs = var_args;
switch(arguments.length){
case 1:
return juxt__1.call(this,f);
case 2:
return juxt__2.call(this,f,g);
case 3:
return juxt__3.call(this,f,g,h);
default:
var G__24722 = null;
if (arguments.length > 3) {
var G__24723__i = 0, G__24723__a = new Array(arguments.length -  3);
while (G__24723__i < G__24723__a.length) {G__24723__a[G__24723__i] = arguments[G__24723__i + 3]; ++G__24723__i;}
G__24722 = new cljs.core.IndexedSeq(G__24723__a,0);
}
return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f,g,h, G__24722);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
juxt.cljs$lang$maxFixedArity = 3;
juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
return juxt;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. dorun can
* be used to force any effects. Walks through the successive nexts of
* the seq, does not retain the head and returns nil.
*/
cljs.core.dorun = (function() {
var dorun = null;
var dorun__1 = (function (coll){
while(true){
if(cljs.core.seq(coll)){
var G__24724 = cljs.core.next(coll);
coll = G__24724;
continue;
} else {
return null;
}
break;
}
});
var dorun__2 = (function (n,coll){
while(true){
if((cljs.core.seq(coll)) && ((n > (0)))){
var G__24725 = (n - (1));
var G__24726 = cljs.core.next(coll);
n = G__24725;
coll = G__24726;
continue;
} else {
return null;
}
break;
}
});
dorun = function(n,coll){
switch(arguments.length){
case 1:
return dorun__1.call(this,n);
case 2:
return dorun__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
return dorun;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. doall can
* be used to force any effects. Walks through the successive nexts of
* the seq, retains the head and returns it, thus causing the entire
* seq to reside in memory at one time.
*/
cljs.core.doall = (function() {
var doall = null;
var doall__1 = (function (coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);

return coll;
});
var doall__2 = (function (n,coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n,coll);

return coll;
});
doall = function(n,coll){
switch(arguments.length){
case 1:
return doall__1.call(this,n);
case 2:
return doall__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
return doall;
})()
;
cljs.core.regexp_QMARK_ = (function regexp_QMARK_(o){
return (o instanceof RegExp);
});
/**
* Returns the result of (re-find re s) if re fully matches s.
*/
cljs.core.re_matches = (function re_matches(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches),s)){
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
} else {
return null;
}
} else {
throw (new TypeError("re-matches must match against a string."));
}
});
/**
* Returns the first regex match, if any, of s to re, using
* re.exec(s). Returns a vector, containing first the matching
* substring, then any capturing groups if the regular expression contains
* capturing groups.
*/
cljs.core.re_find = (function re_find(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if((matches == null)){
return null;
} else {
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
}
} else {
throw (new TypeError("re-find must match against a string."));
}
});
/**
* Returns a lazy sequence of successive matches of re in s.
*/
cljs.core.re_seq = (function re_seq(re,s){
var match_data = cljs.core.re_find(re,s);
var match_idx = s.search(re);
var match_str = ((cljs.core.coll_QMARK_(match_data))?cljs.core.first(match_data):match_data);
var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(match_idx + cljs.core.count(match_str)));
if(cljs.core.truth_(match_data)){
return (new cljs.core.LazySeq(null,((function (match_data,match_idx,match_str,post_match){
return (function (){
return cljs.core.cons(match_data,((cljs.core.seq(post_match))?re_seq(re,post_match):null));
});})(match_data,match_idx,match_str,post_match))
,null,null));
} else {
return null;
}
});
/**
* Returns an instance of RegExp which has compiled the provided string.
*/
cljs.core.re_pattern = (function re_pattern(s){
if((s instanceof RegExp)){
return s;
} else {
var vec__24730 = cljs.core.re_find(/^(?:\(\?([idmsux]*)\))?(.*)/,s);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24730,(0),null);
var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24730,(1),null);
var pattern = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24730,(2),null);
return (new RegExp(pattern,flags));
}
});
cljs.core.pr_sequential_writer = (function pr_sequential_writer(writer,print_one,begin,sep,end,opts,coll){
var _STAR_print_level_STAR_24738 = cljs.core._STAR_print_level_STAR_;
cljs.core._STAR_print_level_STAR_ = (((cljs.core._STAR_print_level_STAR_ == null))?null:(cljs.core._STAR_print_level_STAR_ - (1)));

try{if((!((cljs.core._STAR_print_level_STAR_ == null))) && ((cljs.core._STAR_print_level_STAR_ < (0)))){
return cljs.core._write(writer,"#");
} else {
cljs.core._write(writer,begin);

if((new cljs.core.Keyword(null,"print-length","print-length",1931866356).cljs$core$IFn$_invoke$arity$1(opts) === (0))){
if(cljs.core.seq(coll)){
cljs.core._write(writer,(function (){var or__11600__auto__ = new cljs.core.Keyword(null,"more-marker","more-marker",-14717935).cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(or__11600__auto__)){
return or__11600__auto__;
} else {
return "...";
}
})());
} else {
}
} else {
if(cljs.core.seq(coll)){
var G__24739_24745 = cljs.core.first(coll);
var G__24740_24746 = writer;
var G__24741_24747 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__24739_24745,G__24740_24746,G__24741_24747) : print_one.call(null,G__24739_24745,G__24740_24746,G__24741_24747));
} else {
}

var coll_24748__$1 = cljs.core.next(coll);
var n_24749 = (new cljs.core.Keyword(null,"print-length","print-length",1931866356).cljs$core$IFn$_invoke$arity$1(opts) - (1));
while(true){
if((coll_24748__$1) && (((n_24749 == null)) || (!((n_24749 === (0)))))){
cljs.core._write(writer,sep);

var G__24742_24750 = cljs.core.first(coll_24748__$1);
var G__24743_24751 = writer;
var G__24744_24752 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__24742_24750,G__24743_24751,G__24744_24752) : print_one.call(null,G__24742_24750,G__24743_24751,G__24744_24752));

var G__24753 = cljs.core.next(coll_24748__$1);
var G__24754 = (n_24749 - (1));
coll_24748__$1 = G__24753;
n_24749 = G__24754;
continue;
} else {
if((cljs.core.seq(coll_24748__$1)) && ((n_24749 === (0)))){
cljs.core._write(writer,sep);

cljs.core._write(writer,(function (){var or__11600__auto__ = new cljs.core.Keyword(null,"more-marker","more-marker",-14717935).cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(or__11600__auto__)){
return or__11600__auto__;
} else {
return "...";
}
})());
} else {
}
}
break;
}
}

return cljs.core._write(writer,end);
}
}finally {cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_24738;
}});
/**
* @param {...*} var_args
*/
cljs.core.write_all = (function() { 
var write_all__delegate = function (writer,ss){
var seq__24759 = cljs.core.seq(ss);
var chunk__24760 = null;
var count__24761 = (0);
var i__24762 = (0);
while(true){
if((i__24762 < count__24761)){
var s = chunk__24760.cljs$core$IIndexed$_nth$arity$2(null,i__24762);
cljs.core._write(writer,s);

var G__24763 = seq__24759;
var G__24764 = chunk__24760;
var G__24765 = count__24761;
var G__24766 = (i__24762 + (1));
seq__24759 = G__24763;
chunk__24760 = G__24764;
count__24761 = G__24765;
i__24762 = G__24766;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__24759);
if(temp__4126__auto__){
var seq__24759__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__24759__$1)){
var c__12387__auto__ = cljs.core.chunk_first(seq__24759__$1);
var G__24767 = cljs.core.chunk_rest(seq__24759__$1);
var G__24768 = c__12387__auto__;
var G__24769 = cljs.core.count(c__12387__auto__);
var G__24770 = (0);
seq__24759 = G__24767;
chunk__24760 = G__24768;
count__24761 = G__24769;
i__24762 = G__24770;
continue;
} else {
var s = cljs.core.first(seq__24759__$1);
cljs.core._write(writer,s);

var G__24771 = cljs.core.next(seq__24759__$1);
var G__24772 = null;
var G__24773 = (0);
var G__24774 = (0);
seq__24759 = G__24771;
chunk__24760 = G__24772;
count__24761 = G__24773;
i__24762 = G__24774;
continue;
}
} else {
return null;
}
}
break;
}
};
var write_all = function (writer,var_args){
var ss = null;
if (arguments.length > 1) {
var G__24775__i = 0, G__24775__a = new Array(arguments.length -  1);
while (G__24775__i < G__24775__a.length) {G__24775__a[G__24775__i] = arguments[G__24775__i + 1]; ++G__24775__i;}
  ss = new cljs.core.IndexedSeq(G__24775__a,0);
} 
return write_all__delegate.call(this,writer,ss);};
write_all.cljs$lang$maxFixedArity = 1;
write_all.cljs$lang$applyTo = (function (arglist__24776){
var writer = cljs.core.first(arglist__24776);
var ss = cljs.core.rest(arglist__24776);
return write_all__delegate(writer,ss);
});
write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
return write_all;
})()
;
cljs.core.string_print = (function string_print(x){
(cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null,x));

return null;
});
cljs.core.flush = (function flush(){
return null;
});
cljs.core.char_escapes = (function (){var obj24778 = {"\"":"\\\"","\\":"\\\\","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","\t":"\\t"};
return obj24778;
})();
cljs.core.quote_string = (function quote_string(s){
return [cljs.core.str("\""),cljs.core.str(s.replace((function (){var G__24781 = "[\\\\\"\b\f\n\r\t]";
var G__24782 = "g";
return RegExp(G__24781,G__24782);
})(),(function (match){
return (cljs.core.char_escapes[match]);
}))),cljs.core.str("\"")].join('');
});
cljs.core.pr_writer_impl = (function pr_writer_impl(obj,writer,opts){
if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if((void 0 === obj)){
return cljs.core._write(writer,"#<undefined>");
} else {
if(cljs.core.truth_((function (){var and__11588__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"meta","meta",1499536964));
if(cljs.core.truth_(and__11588__auto__)){
var and__11588__auto____$1 = (function (){var G__24796 = obj;
if(G__24796){
var bit__12281__auto__ = (G__24796.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__12281__auto__) || (G__24796.cljs$core$IMeta$)){
return true;
} else {
if((!G__24796.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__24796);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__24796);
}
})();
if(and__11588__auto____$1){
return cljs.core.meta(obj);
} else {
return and__11588__auto____$1;
}
} else {
return and__11588__auto__;
}
})())){
cljs.core._write(writer,"^");

var G__24797_24807 = cljs.core.meta(obj);
var G__24798_24808 = writer;
var G__24799_24809 = opts;
(cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3 ? cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3(G__24797_24807,G__24798_24808,G__24799_24809) : cljs.core.pr_writer.call(null,G__24797_24807,G__24798_24808,G__24799_24809));

cljs.core._write(writer," ");
} else {
}

if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if(obj.cljs$lang$type){
return obj.cljs$lang$ctorPrWriter(obj,writer,opts);
} else {
if((function (){var G__24800 = obj;
if(G__24800){
var bit__12274__auto__ = (G__24800.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__12274__auto__) || (G__24800.cljs$core$IPrintWithWriter$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,opts);
} else {
if(((cljs.core.type(obj) === Boolean)) || (typeof obj === 'number')){
return cljs.core._write(writer,[cljs.core.str(obj)].join(''));
} else {
if(cljs.core.object_QMARK_(obj)){
cljs.core._write(writer,"#js ");

var G__24801 = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (k){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k),(obj[k])], null);
}),cljs.core.js_keys(obj));
var G__24802 = cljs.core.pr_writer;
var G__24803 = writer;
var G__24804 = opts;
return (cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__24801,G__24802,G__24803,G__24804) : cljs.core.print_map.call(null,G__24801,G__24802,G__24803,G__24804));
} else {
if(obj instanceof Array){
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#js ["," ","]",opts,obj);
} else {
if(cljs.core.truth_((function (){var G__24805 = obj;
return goog.isString(G__24805);
})())){
if(cljs.core.truth_(new cljs.core.Keyword(null,"readably","readably",1129599760).cljs$core$IFn$_invoke$arity$1(opts))){
return cljs.core._write(writer,cljs.core.quote_string(obj));
} else {
return cljs.core._write(writer,obj);
}
} else {
if(cljs.core.fn_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));
} else {
if((obj instanceof Date)){
var normalize = (function (n,len){
var ns = [cljs.core.str(n)].join('');
while(true){
if((cljs.core.count(ns) < len)){
var G__24810 = [cljs.core.str("0"),cljs.core.str(ns)].join('');
ns = G__24810;
continue;
} else {
return ns;
}
break;
}
});
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#inst \"",[cljs.core.str(obj.getUTCFullYear())].join(''),"-",normalize((obj.getUTCMonth() + (1)),(2)),"-",normalize(obj.getUTCDate(),(2)),"T",normalize(obj.getUTCHours(),(2)),":",normalize(obj.getUTCMinutes(),(2)),":",normalize(obj.getUTCSeconds(),(2)),".",normalize(obj.getUTCMilliseconds(),(3)),"-","00:00\""], 0));
} else {
if(cljs.core.regexp_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#\"",obj.source,"\""], 0));
} else {
if((function (){var G__24806 = obj;
if(G__24806){
var bit__12281__auto__ = (G__24806.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__12281__auto__) || (G__24806.cljs$core$IPrintWithWriter$)){
return true;
} else {
if((!G__24806.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__24806);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__24806);
}
})()){
return cljs.core._pr_writer(obj,writer,opts);
} else {
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));

}
}
}
}
}
}
}
}
}
}
}

}
}
});
/**
* Prefer this to pr-seq, because it makes the printing function
* configurable, allowing efficient implementations such as appending
* to a StringBuffer.
*/
cljs.core.pr_writer = (function pr_writer(obj,writer,opts){
var temp__4124__auto__ = new cljs.core.Keyword(null,"alt-impl","alt-impl",670969595).cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(temp__4124__auto__)){
var alt_impl = temp__4124__auto__;
var G__24814 = obj;
var G__24815 = writer;
var G__24816 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(opts,new cljs.core.Keyword(null,"fallback-impl","fallback-impl",-1501286995),cljs.core.pr_writer_impl);
return (alt_impl.cljs$core$IFn$_invoke$arity$3 ? alt_impl.cljs$core$IFn$_invoke$arity$3(G__24814,G__24815,G__24816) : alt_impl.call(null,G__24814,G__24815,G__24816));
} else {
return cljs.core.pr_writer_impl(obj,writer,opts);
}
});
cljs.core.pr_seq_writer = (function pr_seq_writer(objs,writer,opts){
cljs.core.pr_writer(cljs.core.first(objs),writer,opts);

var seq__24821 = cljs.core.seq(cljs.core.next(objs));
var chunk__24822 = null;
var count__24823 = (0);
var i__24824 = (0);
while(true){
if((i__24824 < count__24823)){
var obj = chunk__24822.cljs$core$IIndexed$_nth$arity$2(null,i__24824);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__24825 = seq__24821;
var G__24826 = chunk__24822;
var G__24827 = count__24823;
var G__24828 = (i__24824 + (1));
seq__24821 = G__24825;
chunk__24822 = G__24826;
count__24823 = G__24827;
i__24824 = G__24828;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__24821);
if(temp__4126__auto__){
var seq__24821__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__24821__$1)){
var c__12387__auto__ = cljs.core.chunk_first(seq__24821__$1);
var G__24829 = cljs.core.chunk_rest(seq__24821__$1);
var G__24830 = c__12387__auto__;
var G__24831 = cljs.core.count(c__12387__auto__);
var G__24832 = (0);
seq__24821 = G__24829;
chunk__24822 = G__24830;
count__24823 = G__24831;
i__24824 = G__24832;
continue;
} else {
var obj = cljs.core.first(seq__24821__$1);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__24833 = cljs.core.next(seq__24821__$1);
var G__24834 = null;
var G__24835 = (0);
var G__24836 = (0);
seq__24821 = G__24833;
chunk__24822 = G__24834;
count__24823 = G__24835;
i__24824 = G__24836;
continue;
}
} else {
return null;
}
}
break;
}
});
cljs.core.pr_sb_with_opts = (function pr_sb_with_opts(objs,opts){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
cljs.core.pr_seq_writer(objs,writer,opts);

writer.cljs$core$IWriter$_flush$arity$1(null);

return sb;
});
/**
* Prints a sequence of objects to a string, observing all the
* options given in opts
*/
cljs.core.pr_str_with_opts = (function pr_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "";
} else {
return [cljs.core.str(cljs.core.pr_sb_with_opts(objs,opts))].join('');
}
});
/**
* Same as pr-str-with-opts followed by (newline)
*/
cljs.core.prn_str_with_opts = (function prn_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "\n";
} else {
var sb = cljs.core.pr_sb_with_opts(objs,opts);
sb.append("\n");

return [cljs.core.str(sb)].join('');
}
});
/**
* Prints a sequence of objects using string-print, observing all
* the options given in opts
*/
cljs.core.pr_with_opts = (function pr_with_opts(objs,opts){
return cljs.core.string_print(cljs.core.pr_str_with_opts(objs,opts));
});
cljs.core.newline = (function newline(opts){
cljs.core.string_print("\n");

if(cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939)))){
return cljs.core.flush();
} else {
return null;
}
});
/**
* pr to a string, returning it. Fundamental entrypoint to IPrintWithWriter.
* @param {...*} var_args
*/
cljs.core.pr_str = (function() { 
var pr_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.pr_opts());
};
var pr_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__24837__i = 0, G__24837__a = new Array(arguments.length -  0);
while (G__24837__i < G__24837__a.length) {G__24837__a[G__24837__i] = arguments[G__24837__i + 0]; ++G__24837__i;}
  objs = new cljs.core.IndexedSeq(G__24837__a,0);
} 
return pr_str__delegate.call(this,objs);};
pr_str.cljs$lang$maxFixedArity = 0;
pr_str.cljs$lang$applyTo = (function (arglist__24838){
var objs = cljs.core.seq(arglist__24838);
return pr_str__delegate(objs);
});
pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
return pr_str;
})()
;
/**
* Same as pr-str followed by (newline)
* @param {...*} var_args
*/
cljs.core.prn_str = (function() { 
var prn_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.pr_opts());
};
var prn_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__24839__i = 0, G__24839__a = new Array(arguments.length -  0);
while (G__24839__i < G__24839__a.length) {G__24839__a[G__24839__i] = arguments[G__24839__i + 0]; ++G__24839__i;}
  objs = new cljs.core.IndexedSeq(G__24839__a,0);
} 
return prn_str__delegate.call(this,objs);};
prn_str.cljs$lang$maxFixedArity = 0;
prn_str.cljs$lang$applyTo = (function (arglist__24840){
var objs = cljs.core.seq(arglist__24840);
return prn_str__delegate(objs);
});
prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
return prn_str;
})()
;
/**
* Prints the object(s) using string-print.  Prints the
* object(s), separated by spaces if there is more than one.
* By default, pr and prn print in a way that objects can be
* read by the reader
* @param {...*} var_args
*/
cljs.core.pr = (function() { 
var pr__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.pr_opts());
};
var pr = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__24841__i = 0, G__24841__a = new Array(arguments.length -  0);
while (G__24841__i < G__24841__a.length) {G__24841__a[G__24841__i] = arguments[G__24841__i + 0]; ++G__24841__i;}
  objs = new cljs.core.IndexedSeq(G__24841__a,0);
} 
return pr__delegate.call(this,objs);};
pr.cljs$lang$maxFixedArity = 0;
pr.cljs$lang$applyTo = (function (arglist__24842){
var objs = cljs.core.seq(arglist__24842);
return pr__delegate(objs);
});
pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
return pr;
})()
;
/**
* Prints the object(s) using string-print.
* print and println produce output for human consumption.
* @param {...*} var_args
*/
cljs.core.print = (function() { 
var cljs_core_print__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var cljs_core_print = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__24843__i = 0, G__24843__a = new Array(arguments.length -  0);
while (G__24843__i < G__24843__a.length) {G__24843__a[G__24843__i] = arguments[G__24843__i + 0]; ++G__24843__i;}
  objs = new cljs.core.IndexedSeq(G__24843__a,0);
} 
return cljs_core_print__delegate.call(this,objs);};
cljs_core_print.cljs$lang$maxFixedArity = 0;
cljs_core_print.cljs$lang$applyTo = (function (arglist__24844){
var objs = cljs.core.seq(arglist__24844);
return cljs_core_print__delegate(objs);
});
cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
return cljs_core_print;
})()
;
/**
* print to a string, returning it
* @param {...*} var_args
*/
cljs.core.print_str = (function() { 
var print_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var print_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__24845__i = 0, G__24845__a = new Array(arguments.length -  0);
while (G__24845__i < G__24845__a.length) {G__24845__a[G__24845__i] = arguments[G__24845__i + 0]; ++G__24845__i;}
  objs = new cljs.core.IndexedSeq(G__24845__a,0);
} 
return print_str__delegate.call(this,objs);};
print_str.cljs$lang$maxFixedArity = 0;
print_str.cljs$lang$applyTo = (function (arglist__24846){
var objs = cljs.core.seq(arglist__24846);
return print_str__delegate(objs);
});
print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
return print_str;
})()
;
/**
* Same as print followed by (newline)
* @param {...*} var_args
*/
cljs.core.println = (function() { 
var println__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var println = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__24847__i = 0, G__24847__a = new Array(arguments.length -  0);
while (G__24847__i < G__24847__a.length) {G__24847__a[G__24847__i] = arguments[G__24847__i + 0]; ++G__24847__i;}
  objs = new cljs.core.IndexedSeq(G__24847__a,0);
} 
return println__delegate.call(this,objs);};
println.cljs$lang$maxFixedArity = 0;
println.cljs$lang$applyTo = (function (arglist__24848){
var objs = cljs.core.seq(arglist__24848);
return println__delegate(objs);
});
println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
return println;
})()
;
/**
* println to a string, returning it
* @param {...*} var_args
*/
cljs.core.println_str = (function() { 
var println_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var println_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__24849__i = 0, G__24849__a = new Array(arguments.length -  0);
while (G__24849__i < G__24849__a.length) {G__24849__a[G__24849__i] = arguments[G__24849__i + 0]; ++G__24849__i;}
  objs = new cljs.core.IndexedSeq(G__24849__a,0);
} 
return println_str__delegate.call(this,objs);};
println_str.cljs$lang$maxFixedArity = 0;
println_str.cljs$lang$applyTo = (function (arglist__24850){
var objs = cljs.core.seq(arglist__24850);
return println_str__delegate(objs);
});
println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
return println_str;
})()
;
/**
* Same as pr followed by (newline).
* @param {...*} var_args
*/
cljs.core.prn = (function() { 
var prn__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.pr_opts());

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var prn = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__24851__i = 0, G__24851__a = new Array(arguments.length -  0);
while (G__24851__i < G__24851__a.length) {G__24851__a[G__24851__i] = arguments[G__24851__i + 0]; ++G__24851__i;}
  objs = new cljs.core.IndexedSeq(G__24851__a,0);
} 
return prn__delegate.call(this,objs);};
prn.cljs$lang$maxFixedArity = 0;
prn.cljs$lang$applyTo = (function (arglist__24852){
var objs = cljs.core.seq(arglist__24852);
return prn__delegate(objs);
});
prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
return prn;
})()
;
cljs.core.print_map = (function print_map(m,print_one,writer,opts){
return cljs.core.pr_sequential_writer(writer,(function (e,w,opts__$1){
var G__24859_24865 = cljs.core.key(e);
var G__24860_24866 = w;
var G__24861_24867 = opts__$1;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__24859_24865,G__24860_24866,G__24861_24867) : print_one.call(null,G__24859_24865,G__24860_24866,G__24861_24867));

cljs.core._write(w," ");

var G__24862 = cljs.core.val(e);
var G__24863 = w;
var G__24864 = opts__$1;
return (print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__24862,G__24863,G__24864) : print_one.call(null,G__24862,G__24863,G__24864));
}),"{",", ","}",opts,cljs.core.seq(m));
});
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Volatile: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#'");

return cljs.core.pr_writer(a__$1.sym,writer,opts);
});

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Atom: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core._write(writer,"()");
});

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#queue ["," ","]",opts,cljs.core.seq(coll__$1));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;

cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;

cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_keywords(x__$1,y);
});

cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;

cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_symbols(x__$1,y);
});
/**
* Atomically sets the metadata for a namespace/var/ref/agent/atom to be:
* 
* (apply f its-current-meta args)
* 
* f must be free of side-effects
* @param {...*} var_args
*/
cljs.core.alter_meta_BANG_ = (function() { 
var alter_meta_BANG___delegate = function (iref,f,args){
return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,iref.meta,args);
};
var alter_meta_BANG_ = function (iref,f,var_args){
var args = null;
if (arguments.length > 2) {
var G__24868__i = 0, G__24868__a = new Array(arguments.length -  2);
while (G__24868__i < G__24868__a.length) {G__24868__a[G__24868__i] = arguments[G__24868__i + 2]; ++G__24868__i;}
  args = new cljs.core.IndexedSeq(G__24868__a,0);
} 
return alter_meta_BANG___delegate.call(this,iref,f,args);};
alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
alter_meta_BANG_.cljs$lang$applyTo = (function (arglist__24869){
var iref = cljs.core.first(arglist__24869);
arglist__24869 = cljs.core.next(arglist__24869);
var f = cljs.core.first(arglist__24869);
var args = cljs.core.rest(arglist__24869);
return alter_meta_BANG___delegate(iref,f,args);
});
alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
return alter_meta_BANG_;
})()
;
/**
* Atomically resets the metadata for an atom
*/
cljs.core.reset_meta_BANG_ = (function reset_meta_BANG_(iref,m){
return iref.meta = m;
});
/**
* Alpha - subject to change.
* 
* Adds a watch function to an atom reference. The watch fn must be a
* fn of 4 args: a key, the reference, its old-state, its
* new-state. Whenever the reference's state might have been changed,
* any registered watches will have their functions called. The watch
* fn will be called synchronously. Note that an atom's state
* may have changed again prior to the fn call, so use old/new-state
* rather than derefing the reference. Keys must be unique per
* reference, and can be used to remove the watch with remove-watch,
* but are otherwise considered opaque by the watch mechanism.  Bear in
* mind that regardless of the result or action of the watch fns the
* atom's value will change.  Example:
* 
* (def a (atom 0))
* (add-watch a :inc (fn [k r o n] (assert (== 0 n))))
* (swap! a inc)
* ;; Assertion Error
* (deref a)
* ;=> 1
*/
cljs.core.add_watch = (function add_watch(iref,key,f){
cljs.core._add_watch(iref,key,f);

return iref;
});
/**
* Alpha - subject to change.
* 
* Removes a watch (set by add-watch) from a reference
*/
cljs.core.remove_watch = (function remove_watch(iref,key){
cljs.core._remove_watch(iref,key);

return iref;
});
cljs.core.gensym_counter = null;
/**
* Returns a new symbol with a unique name. If a prefix string is
* supplied, the name is prefix# where # is some unique number. If
* prefix is not supplied, the prefix is 'G__'.
*/
cljs.core.gensym = (function() {
var gensym = null;
var gensym__0 = (function (){
return gensym.cljs$core$IFn$_invoke$arity$1("G__");
});
var gensym__1 = (function (prefix_string){
if((cljs.core.gensym_counter == null)){
cljs.core.gensym_counter = (function (){var G__24872 = (0);
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__24872) : cljs.core.atom.call(null,G__24872));
})();
} else {
}

return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string),cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter,cljs.core.inc))].join(''));
});
gensym = function(prefix_string){
switch(arguments.length){
case 0:
return gensym__0.call(this);
case 1:
return gensym__1.call(this,prefix_string);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
return gensym;
})()
;
cljs.core.fixture1 = (1);
cljs.core.fixture2 = (2);

/**
* @constructor
*/
cljs.core.Delay = (function (f,value){
this.f = f;
this.value = value;
this.cljs$lang$protocol_mask$partition1$ = 1;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = (function (d){
var self__ = this;
var d__$1 = this;
return cljs.core.not(self__.f);
});

cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(cljs.core.truth_(self__.f)){
self__.value = (function (){return (self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null));
})();

self__.f = null;
} else {
}

return self__.value;
});

cljs.core.Delay.cljs$lang$type = true;

cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";

cljs.core.Delay.cljs$lang$ctorPrWriter = (function (this__12187__auto__,writer__12188__auto__,opt__12189__auto__){
return cljs.core._write(writer__12188__auto__,"cljs.core/Delay");
});

cljs.core.__GT_Delay = (function __GT_Delay(f,value){
return (new cljs.core.Delay(f,value));
});

/**
* returns true if x is a Delay created with delay
*/
cljs.core.delay_QMARK_ = (function delay_QMARK_(x){
return (x instanceof cljs.core.Delay);
});
/**
* If x is a Delay, returns the (possibly cached) value of its expression, else returns x
*/
cljs.core.force = (function force(x){
if(cljs.core.delay_QMARK_(x)){
var G__24874 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__24874) : cljs.core.deref.call(null,G__24874));
} else {
return x;
}
});
/**
* Returns true if a value has been produced for a promise, delay, future or lazy sequence.
*/
cljs.core.realized_QMARK_ = (function realized_QMARK_(d){
return cljs.core._realized_QMARK_(d);
});
cljs.core.preserving_reduced = (function preserving_reduced(rf){
return (function (p1__24875_SHARP_,p2__24876_SHARP_){
var ret = (function (){var G__24879 = p1__24875_SHARP_;
var G__24880 = p2__24876_SHARP_;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__24879,G__24880) : rf.call(null,G__24879,G__24880));
})();
if(cljs.core.reduced_QMARK_(ret)){
return cljs.core.reduced(ret);
} else {
return ret;
}
});
});
/**
* A transducer which concatenates the contents of each input, which must be a
* collection, into the reduction.
*/
cljs.core.cat = (function cat(rf){
var rf1 = cljs.core.preserving_reduced(rf);
return ((function (rf1){
return (function() {
var G__24883 = null;
var G__24883__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__24883__1 = (function (result){
var G__24882 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__24882) : rf.call(null,G__24882));
});
var G__24883__2 = (function (result,input){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1,result,input);
});
G__24883 = function(result,input){
switch(arguments.length){
case 0:
return G__24883__0.call(this);
case 1:
return G__24883__1.call(this,result);
case 2:
return G__24883__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24883.cljs$core$IFn$_invoke$arity$0 = G__24883__0;
G__24883.cljs$core$IFn$_invoke$arity$1 = G__24883__1;
G__24883.cljs$core$IFn$_invoke$arity$2 = G__24883__2;
return G__24883;
})()
;})(rf1))
});
/**
* Returns a lazy sequence removing consecutive duplicates in coll.
* Returns a transducer when no collection is provided.
*/
cljs.core.dedupe = (function() {
var dedupe = null;
var dedupe__0 = (function (){
return (function (rf){
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (pa){
return (function() {
var G__24892 = null;
var G__24892__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__24892__1 = (function (result){
var G__24888 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__24888) : rf.call(null,G__24888));
});
var G__24892__2 = (function (result,input){
var prior = (function (){var G__24889 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__24889) : cljs.core.deref.call(null,G__24889));
})();
cljs.core.vreset_BANG_(pa,input);

if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior,input)){
return result;
} else {
var G__24890 = result;
var G__24891 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__24890,G__24891) : rf.call(null,G__24890,G__24891));
}
});
G__24892 = function(result,input){
switch(arguments.length){
case 0:
return G__24892__0.call(this);
case 1:
return G__24892__1.call(this,result);
case 2:
return G__24892__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24892.cljs$core$IFn$_invoke$arity$0 = G__24892__0;
G__24892.cljs$core$IFn$_invoke$arity$1 = G__24892__1;
G__24892.cljs$core$IFn$_invoke$arity$2 = G__24892__2;
return G__24892;
})()
;})(pa))
});
});
var dedupe__1 = (function (coll){
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(dedupe.cljs$core$IFn$_invoke$arity$0(),coll);
});
dedupe = function(coll){
switch(arguments.length){
case 0:
return dedupe__0.call(this);
case 1:
return dedupe__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dedupe.cljs$core$IFn$_invoke$arity$0 = dedupe__0;
dedupe.cljs$core$IFn$_invoke$arity$1 = dedupe__1;
return dedupe;
})()
;
/**
* Returns items from coll with random probability of prob (0.0 -
* 1.0).  Returns a transducer when no collection is provided.
*/
cljs.core.random_sample = (function() {
var random_sample = null;
var random_sample__1 = (function (prob){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}));
});
var random_sample__2 = (function (prob,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}),coll);
});
random_sample = function(prob,coll){
switch(arguments.length){
case 1:
return random_sample__1.call(this,prob);
case 2:
return random_sample__2.call(this,prob,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
random_sample.cljs$core$IFn$_invoke$arity$1 = random_sample__1;
random_sample.cljs$core$IFn$_invoke$arity$2 = random_sample__2;
return random_sample;
})()
;

/**
* @constructor
*/
cljs.core.Eduction = (function (xform,coll){
this.xform = xform;
this.coll = coll;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2173173760;
})
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll__$1,writer,opts){
var self__ = this;
var coll__$2 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$2);
});

cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (_,f,init){
var self__ = this;
var ___$1 = this;
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform,f,init,self__.coll);
});

cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform,self__.coll));
});

cljs.core.Eduction.cljs$lang$type = true;

cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";

cljs.core.Eduction.cljs$lang$ctorPrWriter = (function (this__12187__auto__,writer__12188__auto__,opt__12189__auto__){
return cljs.core._write(writer__12188__auto__,"cljs.core/Eduction");
});

cljs.core.__GT_Eduction = (function __GT_Eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});

(cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__12578__auto__ = this;
return cljs.core.es6_iterator(this__12578__auto__);
}));
/**
* Returns a reducible/iterable/seqable application of
* the transducer to the items in coll. Note that these applications
* will be performed every time iterator/seq/reduce is called.
*/
cljs.core.eduction = (function eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});
/**
* Runs the supplied procedure (via reduce), for purposes of side
* effects, on successive items in the collection. Returns nil
*/
cljs.core.run_BANG_ = (function run_BANG_(proc,coll){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__24894_SHARP_,p2__24893_SHARP_){
var G__24896 = p2__24893_SHARP_;
return (proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(G__24896) : proc.call(null,G__24896));
}),null,coll);
});

cljs.core.IEncodeJS = (function (){var obj24898 = {};
return obj24898;
})();

cljs.core._clj__GT_js = (function _clj__GT_js(x){
if((function (){var and__11588__auto__ = x;
if(and__11588__auto__){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
} else {
return and__11588__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
} else {
var x__12244__auto__ = (((x == null))?null:x);
return (function (){var or__11600__auto__ = (cljs.core._clj__GT_js[(function (){var G__24902 = x__12244__auto__;
return goog.typeOf(G__24902);
})()]);
if(or__11600__auto__){
return or__11600__auto__;
} else {
var or__11600__auto____$1 = (cljs.core._clj__GT_js["_"]);
if(or__11600__auto____$1){
return or__11600__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-clj->js",x);
}
}
})().call(null,x);
}
});

cljs.core._key__GT_js = (function _key__GT_js(x){
if((function (){var and__11588__auto__ = x;
if(and__11588__auto__){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
} else {
return and__11588__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
} else {
var x__12244__auto__ = (((x == null))?null:x);
return (function (){var or__11600__auto__ = (cljs.core._key__GT_js[(function (){var G__24906 = x__12244__auto__;
return goog.typeOf(G__24906);
})()]);
if(or__11600__auto__){
return or__11600__auto__;
} else {
var or__11600__auto____$1 = (cljs.core._key__GT_js["_"]);
if(or__11600__auto____$1){
return or__11600__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-key->js",x);
}
}
})().call(null,x);
}
});

cljs.core.key__GT_js = (function key__GT_js(k){
if((function (){var G__24909 = k;
if(G__24909){
var bit__12281__auto__ = null;
if(cljs.core.truth_((function (){var or__11600__auto__ = bit__12281__auto__;
if(cljs.core.truth_(or__11600__auto__)){
return or__11600__auto__;
} else {
return G__24909.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__24909.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__24909);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__24909);
}
})()){
return cljs.core._clj__GT_js(k);
} else {
if((typeof k === 'string') || (typeof k === 'number') || ((k instanceof cljs.core.Keyword)) || ((k instanceof cljs.core.Symbol))){
var G__24910 = k;
return (cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(G__24910) : cljs.core.clj__GT_js.call(null,G__24910));
} else {
return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
}
}
});
/**
* Recursively transforms ClojureScript values to JavaScript.
* sets/vectors/lists become Arrays, Keywords and Symbol become Strings,
* Maps become Objects. Arbitrary keys are encoded to by key->js.
*/
cljs.core.clj__GT_js = (function clj__GT_js(x){
if((x == null)){
return null;
} else {
if((function (){var G__24926 = x;
if(G__24926){
var bit__12281__auto__ = null;
if(cljs.core.truth_((function (){var or__11600__auto__ = bit__12281__auto__;
if(cljs.core.truth_(or__11600__auto__)){
return or__11600__auto__;
} else {
return G__24926.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__24926.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__24926);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__24926);
}
})()){
return cljs.core._clj__GT_js(x);
} else {
if((x instanceof cljs.core.Keyword)){
return cljs.core.name(x);
} else {
if((x instanceof cljs.core.Symbol)){
return [cljs.core.str(x)].join('');
} else {
if(cljs.core.map_QMARK_(x)){
var m = (function (){var obj24928 = {};
return obj24928;
})();
var seq__24929_24939 = cljs.core.seq(x);
var chunk__24930_24940 = null;
var count__24931_24941 = (0);
var i__24932_24942 = (0);
while(true){
if((i__24932_24942 < count__24931_24941)){
var vec__24933_24943 = chunk__24930_24940.cljs$core$IIndexed$_nth$arity$2(null,i__24932_24942);
var k_24944 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24933_24943,(0),null);
var v_24945 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24933_24943,(1),null);
(m[cljs.core.key__GT_js(k_24944)] = clj__GT_js(v_24945));

var G__24946 = seq__24929_24939;
var G__24947 = chunk__24930_24940;
var G__24948 = count__24931_24941;
var G__24949 = (i__24932_24942 + (1));
seq__24929_24939 = G__24946;
chunk__24930_24940 = G__24947;
count__24931_24941 = G__24948;
i__24932_24942 = G__24949;
continue;
} else {
var temp__4126__auto___24950 = cljs.core.seq(seq__24929_24939);
if(temp__4126__auto___24950){
var seq__24929_24951__$1 = temp__4126__auto___24950;
if(cljs.core.chunked_seq_QMARK_(seq__24929_24951__$1)){
var c__12387__auto___24952 = cljs.core.chunk_first(seq__24929_24951__$1);
var G__24953 = cljs.core.chunk_rest(seq__24929_24951__$1);
var G__24954 = c__12387__auto___24952;
var G__24955 = cljs.core.count(c__12387__auto___24952);
var G__24956 = (0);
seq__24929_24939 = G__24953;
chunk__24930_24940 = G__24954;
count__24931_24941 = G__24955;
i__24932_24942 = G__24956;
continue;
} else {
var vec__24934_24957 = cljs.core.first(seq__24929_24951__$1);
var k_24958 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24934_24957,(0),null);
var v_24959 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24934_24957,(1),null);
(m[cljs.core.key__GT_js(k_24958)] = clj__GT_js(v_24959));

var G__24960 = cljs.core.next(seq__24929_24951__$1);
var G__24961 = null;
var G__24962 = (0);
var G__24963 = (0);
seq__24929_24939 = G__24960;
chunk__24930_24940 = G__24961;
count__24931_24941 = G__24962;
i__24932_24942 = G__24963;
continue;
}
} else {
}
}
break;
}

return m;
} else {
if(cljs.core.coll_QMARK_(x)){
var arr = [];
var seq__24935_24964 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(clj__GT_js,x));
var chunk__24936_24965 = null;
var count__24937_24966 = (0);
var i__24938_24967 = (0);
while(true){
if((i__24938_24967 < count__24937_24966)){
var x_24968__$1 = chunk__24936_24965.cljs$core$IIndexed$_nth$arity$2(null,i__24938_24967);
arr.push(x_24968__$1);

var G__24969 = seq__24935_24964;
var G__24970 = chunk__24936_24965;
var G__24971 = count__24937_24966;
var G__24972 = (i__24938_24967 + (1));
seq__24935_24964 = G__24969;
chunk__24936_24965 = G__24970;
count__24937_24966 = G__24971;
i__24938_24967 = G__24972;
continue;
} else {
var temp__4126__auto___24973 = cljs.core.seq(seq__24935_24964);
if(temp__4126__auto___24973){
var seq__24935_24974__$1 = temp__4126__auto___24973;
if(cljs.core.chunked_seq_QMARK_(seq__24935_24974__$1)){
var c__12387__auto___24975 = cljs.core.chunk_first(seq__24935_24974__$1);
var G__24976 = cljs.core.chunk_rest(seq__24935_24974__$1);
var G__24977 = c__12387__auto___24975;
var G__24978 = cljs.core.count(c__12387__auto___24975);
var G__24979 = (0);
seq__24935_24964 = G__24976;
chunk__24936_24965 = G__24977;
count__24937_24966 = G__24978;
i__24938_24967 = G__24979;
continue;
} else {
var x_24980__$1 = cljs.core.first(seq__24935_24974__$1);
arr.push(x_24980__$1);

var G__24981 = cljs.core.next(seq__24935_24974__$1);
var G__24982 = null;
var G__24983 = (0);
var G__24984 = (0);
seq__24935_24964 = G__24981;
chunk__24936_24965 = G__24982;
count__24937_24966 = G__24983;
i__24938_24967 = G__24984;
continue;
}
} else {
}
}
break;
}

return arr;
} else {
return x;

}
}
}
}
}
}
});

cljs.core.IEncodeClojure = (function (){var obj24986 = {};
return obj24986;
})();

cljs.core._js__GT_clj = (function _js__GT_clj(x,options){
if((function (){var and__11588__auto__ = x;
if(and__11588__auto__){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
} else {
return and__11588__auto__;
}
})()){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x,options);
} else {
var x__12244__auto__ = (((x == null))?null:x);
return (function (){var or__11600__auto__ = (cljs.core._js__GT_clj[(function (){var G__24990 = x__12244__auto__;
return goog.typeOf(G__24990);
})()]);
if(or__11600__auto__){
return or__11600__auto__;
} else {
var or__11600__auto____$1 = (cljs.core._js__GT_clj["_"]);
if(or__11600__auto____$1){
return or__11600__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeClojure.-js->clj",x);
}
}
})().call(null,x,options);
}
});

/**
* Recursively transforms JavaScript arrays into ClojureScript
* vectors, and JavaScript objects into ClojureScript maps.  With
* option ':keywordize-keys true' will convert object fields from
* strings to keywords.
* @param {...*} var_args
*/
cljs.core.js__GT_clj = (function() {
var js__GT_clj = null;
var js__GT_clj__1 = (function (x){
return js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x,cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252),false], null)], 0));
});
var js__GT_clj__2 = (function() { 
var G__25047__delegate = function (x,opts){
var map__25020 = opts;
var map__25020__$1 = ((cljs.core.seq_QMARK_(map__25020))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__25020):map__25020);
var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__25020__$1,new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252));
var keyfn = (cljs.core.truth_(keywordize_keys)?cljs.core.keyword:cljs.core.str);
var f = ((function (map__25020,map__25020__$1,keywordize_keys,keyfn){
return (function thisfn(x__$1){
if((function (){var G__25036 = x__$1;
if(G__25036){
var bit__12281__auto__ = null;
if(cljs.core.truth_((function (){var or__11600__auto__ = bit__12281__auto__;
if(cljs.core.truth_(or__11600__auto__)){
return or__11600__auto__;
} else {
return G__25036.cljs$core$IEncodeClojure$;
}
})())){
return true;
} else {
if((!G__25036.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__25036);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__25036);
}
})()){
return cljs.core._js__GT_clj(x__$1,cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map,opts));
} else {
if(cljs.core.seq_QMARK_(x__$1)){
return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(cljs.core.coll_QMARK_(x__$1)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1),cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(x__$1 instanceof Array){
return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if((cljs.core.type(x__$1) === Object)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,(function (){var iter__12356__auto__ = ((function (map__25020,map__25020__$1,keywordize_keys,keyfn){
return (function iter__25037(s__25038){
return (new cljs.core.LazySeq(null,((function (map__25020,map__25020__$1,keywordize_keys,keyfn){
return (function (){
var s__25038__$1 = s__25038;
while(true){
var temp__4126__auto__ = cljs.core.seq(s__25038__$1);
if(temp__4126__auto__){
var s__25038__$2 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s__25038__$2)){
var c__12354__auto__ = cljs.core.chunk_first(s__25038__$2);
var size__12355__auto__ = cljs.core.count(c__12354__auto__);
var b__25040 = cljs.core.chunk_buffer(size__12355__auto__);
if((function (){var i__25039 = (0);
while(true){
if((i__25039 < size__12355__auto__)){
var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__12354__auto__,i__25039);
cljs.core.chunk_append(b__25040,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__25045 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__25045) : keyfn.call(null,G__25045));
})(),thisfn((x__$1[k]))], null));

var G__25048 = (i__25039 + (1));
i__25039 = G__25048;
continue;
} else {
return true;
}
break;
}
})()){
return cljs.core.chunk_cons(cljs.core.chunk(b__25040),iter__25037(cljs.core.chunk_rest(s__25038__$2)));
} else {
return cljs.core.chunk_cons(cljs.core.chunk(b__25040),null);
}
} else {
var k = cljs.core.first(s__25038__$2);
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__25046 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__25046) : keyfn.call(null,G__25046));
})(),thisfn((x__$1[k]))], null),iter__25037(cljs.core.rest(s__25038__$2)));
}
} else {
return null;
}
break;
}
});})(map__25020,map__25020__$1,keywordize_keys,keyfn))
,null,null));
});})(map__25020,map__25020__$1,keywordize_keys,keyfn))
;
return iter__12356__auto__(cljs.core.js_keys(x__$1));
})());
} else {
return x__$1;

}
}
}
}
}
});})(map__25020,map__25020__$1,keywordize_keys,keyfn))
;
return f(x);
};
var G__25047 = function (x,var_args){
var opts = null;
if (arguments.length > 1) {
var G__25049__i = 0, G__25049__a = new Array(arguments.length -  1);
while (G__25049__i < G__25049__a.length) {G__25049__a[G__25049__i] = arguments[G__25049__i + 1]; ++G__25049__i;}
  opts = new cljs.core.IndexedSeq(G__25049__a,0);
} 
return G__25047__delegate.call(this,x,opts);};
G__25047.cljs$lang$maxFixedArity = 1;
G__25047.cljs$lang$applyTo = (function (arglist__25050){
var x = cljs.core.first(arglist__25050);
var opts = cljs.core.rest(arglist__25050);
return G__25047__delegate(x,opts);
});
G__25047.cljs$core$IFn$_invoke$arity$variadic = G__25047__delegate;
return G__25047;
})()
;
js__GT_clj = function(x,var_args){
var opts = var_args;
switch(arguments.length){
case 1:
return js__GT_clj__1.call(this,x);
default:
var G__25051 = null;
if (arguments.length > 1) {
var G__25052__i = 0, G__25052__a = new Array(arguments.length -  1);
while (G__25052__i < G__25052__a.length) {G__25052__a[G__25052__i] = arguments[G__25052__i + 1]; ++G__25052__i;}
G__25051 = new cljs.core.IndexedSeq(G__25052__a,0);
}
return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, G__25051);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js__GT_clj.cljs$lang$maxFixedArity = 1;
js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
return js__GT_clj;
})()
;
/**
* Returns a memoized version of a referentially transparent function. The
* memoized version of the function keeps a cache of the mapping from arguments
* to results and, when calls with the same arguments are repeated often, has
* higher performance at the expense of higher memory use.
*/
cljs.core.memoize = (function memoize(f){
var mem = (function (){var G__25055 = cljs.core.PersistentArrayMap.EMPTY;
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__25055) : cljs.core.atom.call(null,G__25055));
})();
return ((function (mem){
return (function() { 
var G__25057__delegate = function (args){
var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3((function (){var G__25056 = mem;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__25056) : cljs.core.deref.call(null,G__25056));
})(),args,cljs.core.lookup_sentinel);
if((v === cljs.core.lookup_sentinel)){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem,cljs.core.assoc,args,ret);

return ret;
} else {
return v;
}
};
var G__25057 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__25058__i = 0, G__25058__a = new Array(arguments.length -  0);
while (G__25058__i < G__25058__a.length) {G__25058__a[G__25058__i] = arguments[G__25058__i + 0]; ++G__25058__i;}
  args = new cljs.core.IndexedSeq(G__25058__a,0);
} 
return G__25057__delegate.call(this,args);};
G__25057.cljs$lang$maxFixedArity = 0;
G__25057.cljs$lang$applyTo = (function (arglist__25059){
var args = cljs.core.seq(arglist__25059);
return G__25057__delegate(args);
});
G__25057.cljs$core$IFn$_invoke$arity$variadic = G__25057__delegate;
return G__25057;
})()
;
;})(mem))
});
/**
* trampoline can be used to convert algorithms requiring mutual
* recursion without stack consumption. Calls f with supplied args, if
* any. If f returns a fn, calls that fn with no arguments, and
* continues to repeat, until the return value is not a fn, then
* returns that non-fn value. Note that if you want to return a fn as a
* final value, you must wrap it in some data structure and unpack it
* after trampoline returns.
* @param {...*} var_args
*/
cljs.core.trampoline = (function() {
var trampoline = null;
var trampoline__1 = (function (f){
while(true){
var ret = (function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})();
if(cljs.core.fn_QMARK_(ret)){
var G__25061 = ret;
f = G__25061;
continue;
} else {
return ret;
}
break;
}
});
var trampoline__2 = (function() { 
var G__25062__delegate = function (f,args){
return trampoline.cljs$core$IFn$_invoke$arity$1((function (){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
}));
};
var G__25062 = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__25063__i = 0, G__25063__a = new Array(arguments.length -  1);
while (G__25063__i < G__25063__a.length) {G__25063__a[G__25063__i] = arguments[G__25063__i + 1]; ++G__25063__i;}
  args = new cljs.core.IndexedSeq(G__25063__a,0);
} 
return G__25062__delegate.call(this,f,args);};
G__25062.cljs$lang$maxFixedArity = 1;
G__25062.cljs$lang$applyTo = (function (arglist__25064){
var f = cljs.core.first(arglist__25064);
var args = cljs.core.rest(arglist__25064);
return G__25062__delegate(f,args);
});
G__25062.cljs$core$IFn$_invoke$arity$variadic = G__25062__delegate;
return G__25062;
})()
;
trampoline = function(f,var_args){
var args = var_args;
switch(arguments.length){
case 1:
return trampoline__1.call(this,f);
default:
var G__25065 = null;
if (arguments.length > 1) {
var G__25066__i = 0, G__25066__a = new Array(arguments.length -  1);
while (G__25066__i < G__25066__a.length) {G__25066__a[G__25066__i] = arguments[G__25066__i + 1]; ++G__25066__i;}
G__25065 = new cljs.core.IndexedSeq(G__25066__a,0);
}
return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, G__25065);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
trampoline.cljs$lang$maxFixedArity = 1;
trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
return trampoline;
})()
;
/**
* Returns a random floating point number between 0 (inclusive) and
* n (default 1) (exclusive).
*/
cljs.core.rand = (function() {
var rand = null;
var rand__0 = (function (){
return rand.cljs$core$IFn$_invoke$arity$1((1));
});
var rand__1 = (function (n){
return ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
});
rand = function(n){
switch(arguments.length){
case 0:
return rand__0.call(this);
case 1:
return rand__1.call(this,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
return rand;
})()
;
/**
* Returns a random integer between 0 (inclusive) and n (exclusive).
*/
cljs.core.rand_int = (function rand_int(n){
var G__25069 = ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__25069) : Math.floor.call(null,G__25069));
});
/**
* Return a random element of the (sequential) collection. Will have
* the same performance characteristics as nth for the given
* collection.
*/
cljs.core.rand_nth = (function rand_nth(coll){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll,cljs.core.rand_int(cljs.core.count(coll)));
});
/**
* Returns a map of the elements of coll keyed by the result of
* f on each element. The value at each key will be a vector of the
* corresponding elements, in the order they appeared in coll.
*/
cljs.core.group_by = (function group_by(f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret,x){
var k = (function (){var G__25071 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25071) : f.call(null,G__25071));
})();
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.PersistentVector.EMPTY),x));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Creates a hierarchy object for use with derive, isa? etc.
*/
cljs.core.make_hierarchy = (function make_hierarchy(){
return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"descendants","descendants",1824886031),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),cljs.core.PersistentArrayMap.EMPTY], null);
});
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = (function get_global_hierarchy(){
if((cljs.core._global_hierarchy == null)){
cljs.core._global_hierarchy = (function (){var G__25073 = cljs.core.make_hierarchy();
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__25073) : cljs.core.atom.call(null,G__25073));
})();
} else {
}

return cljs.core._global_hierarchy;
});
/**
* @param {...*} var_args
*/
cljs.core.swap_global_hierarchy_BANG_ = (function() { 
var swap_global_hierarchy_BANG___delegate = function (f,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_,cljs.core.get_global_hierarchy(),f,args);
};
var swap_global_hierarchy_BANG_ = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__25074__i = 0, G__25074__a = new Array(arguments.length -  1);
while (G__25074__i < G__25074__a.length) {G__25074__a[G__25074__i] = arguments[G__25074__i + 1]; ++G__25074__i;}
  args = new cljs.core.IndexedSeq(G__25074__a,0);
} 
return swap_global_hierarchy_BANG___delegate.call(this,f,args);};
swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
swap_global_hierarchy_BANG_.cljs$lang$applyTo = (function (arglist__25075){
var f = cljs.core.first(arglist__25075);
var args = cljs.core.rest(arglist__25075);
return swap_global_hierarchy_BANG___delegate(f,args);
});
swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
return swap_global_hierarchy_BANG_;
})()
;
/**
* Returns true if (= child parent), or child is directly or indirectly derived from
* parent, either via a JavaScript type inheritance relationship or a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy
*/
cljs.core.isa_QMARK_ = (function() {
var isa_QMARK_ = null;
var isa_QMARK___2 = (function (child,parent){
return isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__25140 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__25140) : cljs.core.deref.call(null,G__25140));
})(),child,parent);
});
var isa_QMARK___3 = (function (h,child,parent){
var or__11600__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child,parent);
if(or__11600__auto__){
return or__11600__auto__;
} else {
var or__11600__auto____$1 = cljs.core.contains_QMARK_(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h).call(null,child),parent);
if(or__11600__auto____$1){
return or__11600__auto____$1;
} else {
var and__11588__auto__ = cljs.core.vector_QMARK_(parent);
if(and__11588__auto__){
var and__11588__auto____$1 = cljs.core.vector_QMARK_(child);
if(and__11588__auto____$1){
var and__11588__auto____$2 = (cljs.core.count(parent) === cljs.core.count(child));
if(and__11588__auto____$2){
var ret = true;
var i = (0);
while(true){
if((!(ret)) || ((i === cljs.core.count(parent)))){
return ret;
} else {
var G__25165 = isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h,(function (){var G__25163 = i;
return (child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(G__25163) : child.call(null,G__25163));
})(),(function (){var G__25164 = i;
return (parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(G__25164) : parent.call(null,G__25164));
})());
var G__25166 = (i + (1));
ret = G__25165;
i = G__25166;
continue;
}
break;
}
} else {
return and__11588__auto____$2;
}
} else {
return and__11588__auto____$1;
}
} else {
return and__11588__auto__;
}
}
}
});
isa_QMARK_ = function(h,child,parent){
switch(arguments.length){
case 2:
return isa_QMARK___2.call(this,h,child);
case 3:
return isa_QMARK___3.call(this,h,child,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
return isa_QMARK_;
})()
;
/**
* Returns the immediate parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.parents = (function() {
var parents = null;
var parents__1 = (function (tag){
return parents.cljs$core$IFn$_invoke$arity$2((function (){var G__25170 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__25170) : cljs.core.deref.call(null,G__25170));
})(),tag);
});
var parents__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag));
});
parents = function(h,tag){
switch(arguments.length){
case 1:
return parents__1.call(this,h);
case 2:
return parents__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
return parents;
})()
;
/**
* Returns the immediate and indirect parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.ancestors = (function() {
var ancestors = null;
var ancestors__1 = (function (tag){
return ancestors.cljs$core$IFn$_invoke$arity$2((function (){var G__25174 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__25174) : cljs.core.deref.call(null,G__25174));
})(),tag);
});
var ancestors__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag));
});
ancestors = function(h,tag){
switch(arguments.length){
case 1:
return ancestors__1.call(this,h);
case 2:
return ancestors__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
return ancestors;
})()
;
/**
* Returns the immediate and indirect children of tag, through a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy. Note: does not work on JavaScript type inheritance
* relationships.
*/
cljs.core.descendants = (function() {
var descendants = null;
var descendants__1 = (function (tag){
return descendants.cljs$core$IFn$_invoke$arity$2((function (){var G__25178 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__25178) : cljs.core.deref.call(null,G__25178));
})(),tag);
});
var descendants__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),tag));
});
descendants = function(h,tag){
switch(arguments.length){
case 1:
return descendants__1.call(this,h);
case 2:
return descendants__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
return descendants;
})()
;
/**
* Establishes a parent/child relationship between parent and
* tag. Parent must be a namespace-qualified symbol or keyword and
* child can be either a namespace-qualified symbol or keyword or a
* class. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.derive = (function() {
var derive = null;
var derive__2 = (function (tag,parent){
if(cljs.core.truth_(cljs.core.namespace(parent))){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"namespace","namespace",1263021155,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(derive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var derive__3 = (function (h,tag,parent){
if(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag,parent)){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"not=","not=",1466536204,null),new cljs.core.Symbol(null,"tag","tag",350170304,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

var tp = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var td = new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h);
var ta = new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h);
var tf = ((function (tp,td,ta){
return (function (m,source,sources,target,targets){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (tp,td,ta){
return (function (ret,k){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets,k,cljs.core.PersistentHashSet.EMPTY),cljs.core.cons(target,(function (){var G__25187 = target;
return (targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(G__25187) : targets.call(null,G__25187));
})())));
});})(tp,td,ta))
,m,cljs.core.cons(source,(function (){var G__25188 = source;
return (sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(G__25188) : sources.call(null,G__25188));
})()));
});})(tp,td,ta))
;
var or__11600__auto__ = ((cljs.core.contains_QMARK_((function (){var G__25192 = tag;
return (tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(G__25192) : tp.call(null,G__25192));
})(),parent))?null:(function (){
if(cljs.core.contains_QMARK_((function (){var G__25193 = tag;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__25193) : ta.call(null,G__25193));
})(),parent)){
throw (new Error([cljs.core.str(tag),cljs.core.str("already has"),cljs.core.str(parent),cljs.core.str("as ancestor")].join('')));
} else {
}

if(cljs.core.contains_QMARK_((function (){var G__25194 = parent;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__25194) : ta.call(null,G__25194));
})(),tag)){
throw (new Error([cljs.core.str("Cyclic derivation:"),cljs.core.str(parent),cljs.core.str("has"),cljs.core.str(tag),cljs.core.str("as ancestor")].join('')));
} else {
}

return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp,tag,cljs.core.PersistentHashSet.EMPTY),parent)),new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),tf(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag,td,parent,ta),new cljs.core.Keyword(null,"descendants","descendants",1824886031),tf(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),parent,ta,tag,td)], null);
})()
);
if(cljs.core.truth_(or__11600__auto__)){
return or__11600__auto__;
} else {
return h;
}
});
derive = function(h,tag,parent){
switch(arguments.length){
case 2:
return derive__2.call(this,h,tag);
case 3:
return derive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
return derive;
})()
;
/**
* Removes a parent/child relationship between parent and
* tag. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.underive = (function() {
var underive = null;
var underive__2 = (function (tag,parent){
cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(underive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var underive__3 = (function (h,tag,parent){
var parentMap = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var childsParents = (cljs.core.truth_((function (){var G__25201 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__25201) : parentMap.call(null,G__25201));
})())?cljs.core.disj.cljs$core$IFn$_invoke$arity$2((function (){var G__25202 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__25202) : parentMap.call(null,G__25202));
})(),parent):cljs.core.PersistentHashSet.EMPTY);
var newParents = (cljs.core.truth_(cljs.core.not_empty(childsParents))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap,tag,childsParents):cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap,tag));
var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (parentMap,childsParents,newParents){
return (function (p1__25195_SHARP_){
return cljs.core.cons(cljs.core.first(p1__25195_SHARP_),cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__25195_SHARP_),cljs.core.second(p1__25195_SHARP_)));
});})(parentMap,childsParents,newParents))
,cljs.core.seq(newParents)));
if(cljs.core.contains_QMARK_((function (){var G__25203 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__25203) : parentMap.call(null,G__25203));
})(),parent)){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (parentMap,childsParents,newParents,deriv_seq){
return (function (p1__25196_SHARP_,p2__25197_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive,p1__25196_SHARP_,p2__25197_SHARP_);
});})(parentMap,childsParents,newParents,deriv_seq))
,cljs.core.make_hierarchy(),cljs.core.partition.cljs$core$IFn$_invoke$arity$2((2),deriv_seq));
} else {
return h;
}
});
underive = function(h,tag,parent){
switch(arguments.length){
case 2:
return underive__2.call(this,h,tag);
case 3:
return underive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
return underive;
})()
;
cljs.core.reset_cache = (function reset_cache(method_cache,method_table,cached_hierarchy,hierarchy){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache,(function (_){
var G__25206 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__25206) : cljs.core.deref.call(null,G__25206));
}));

return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy,(function (_){
var G__25207 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__25207) : cljs.core.deref.call(null,G__25207));
}));
});
cljs.core.prefers_STAR_ = (function prefers_STAR_(x,y,prefer_table){
var xprefs = (function (){var G__25223 = prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__25223) : cljs.core.deref.call(null,G__25223));
})().call(null,x);
var or__11600__auto__ = (cljs.core.truth_((function (){var and__11588__auto__ = xprefs;
if(cljs.core.truth_(and__11588__auto__)){
var G__25225 = y;
return (xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(G__25225) : xprefs.call(null,G__25225));
} else {
return and__11588__auto__;
}
})())?true:null);
if(cljs.core.truth_(or__11600__auto__)){
return or__11600__auto__;
} else {
var or__11600__auto____$1 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(x,cljs.core.first(ps),prefer_table))){
} else {
}

var G__25226 = cljs.core.rest(ps);
ps = G__25226;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__11600__auto____$1)){
return or__11600__auto____$1;
} else {
var or__11600__auto____$2 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(cljs.core.first(ps),y,prefer_table))){
} else {
}

var G__25227 = cljs.core.rest(ps);
ps = G__25227;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__11600__auto____$2)){
return or__11600__auto____$2;
} else {
return false;
}
}
}
});
cljs.core.dominates = (function dominates(x,y,prefer_table){
var or__11600__auto__ = cljs.core.prefers_STAR_(x,y,prefer_table);
if(cljs.core.truth_(or__11600__auto__)){
return or__11600__auto__;
} else {
return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x,y);
}
});
cljs.core.find_and_cache_best_method = (function find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (be,p__25241){
var vec__25242 = p__25241;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25242,(0),null);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25242,(1),null);
var e = vec__25242;
if(cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__25243 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__25243) : cljs.core.deref.call(null,G__25243));
})(),dispatch_val,k)){
var be2 = (cljs.core.truth_((function (){var or__11600__auto__ = (be == null);
if(or__11600__auto__){
return or__11600__auto__;
} else {
return cljs.core.dominates(k,cljs.core.first(be),prefer_table);
}
})())?e:be);
if(cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2),k,prefer_table))){
} else {
throw (new Error([cljs.core.str("Multiple methods in multimethod '"),cljs.core.str(name),cljs.core.str("' match dispatch value: "),cljs.core.str(dispatch_val),cljs.core.str(" -> "),cljs.core.str(k),cljs.core.str(" and "),cljs.core.str(cljs.core.first(be2)),cljs.core.str(", and neither is preferred")].join('')));
}

return be2;
} else {
return be;
}
}),null,(function (){var G__25244 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__25244) : cljs.core.deref.call(null,G__25244));
})());
if(cljs.core.truth_(best_entry)){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__25245 = cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__25245) : cljs.core.deref.call(null,G__25245));
})(),(function (){var G__25246 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__25246) : cljs.core.deref.call(null,G__25246));
})())){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache,cljs.core.assoc,dispatch_val,cljs.core.second(best_entry));

return cljs.core.second(best_entry);
} else {
cljs.core.reset_cache(method_cache,method_table,cached_hierarchy,hierarchy);

return find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy);
}
} else {
return null;
}
});

cljs.core.IMultiFn = (function (){var obj25248 = {};
return obj25248;
})();

cljs.core._reset = (function _reset(mf){
if((function (){var and__11588__auto__ = mf;
if(and__11588__auto__){
return mf.cljs$core$IMultiFn$_reset$arity$1;
} else {
return and__11588__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
} else {
var x__12244__auto__ = (((mf == null))?null:mf);
return (function (){var or__11600__auto__ = (cljs.core._reset[(function (){var G__25252 = x__12244__auto__;
return goog.typeOf(G__25252);
})()]);
if(or__11600__auto__){
return or__11600__auto__;
} else {
var or__11600__auto____$1 = (cljs.core._reset["_"]);
if(or__11600__auto____$1){
return or__11600__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-reset",mf);
}
}
})().call(null,mf);
}
});

cljs.core._add_method = (function _add_method(mf,dispatch_val,method){
if((function (){var and__11588__auto__ = mf;
if(and__11588__auto__){
return mf.cljs$core$IMultiFn$_add_method$arity$3;
} else {
return and__11588__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_add_method$arity$3(mf,dispatch_val,method);
} else {
var x__12244__auto__ = (((mf == null))?null:mf);
return (function (){var or__11600__auto__ = (cljs.core._add_method[(function (){var G__25256 = x__12244__auto__;
return goog.typeOf(G__25256);
})()]);
if(or__11600__auto__){
return or__11600__auto__;
} else {
var or__11600__auto____$1 = (cljs.core._add_method["_"]);
if(or__11600__auto____$1){
return or__11600__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-add-method",mf);
}
}
})().call(null,mf,dispatch_val,method);
}
});

cljs.core._remove_method = (function _remove_method(mf,dispatch_val){
if((function (){var and__11588__auto__ = mf;
if(and__11588__auto__){
return mf.cljs$core$IMultiFn$_remove_method$arity$2;
} else {
return and__11588__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf,dispatch_val);
} else {
var x__12244__auto__ = (((mf == null))?null:mf);
return (function (){var or__11600__auto__ = (cljs.core._remove_method[(function (){var G__25260 = x__12244__auto__;
return goog.typeOf(G__25260);
})()]);
if(or__11600__auto__){
return or__11600__auto__;
} else {
var or__11600__auto____$1 = (cljs.core._remove_method["_"]);
if(or__11600__auto____$1){
return or__11600__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-remove-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._prefer_method = (function _prefer_method(mf,dispatch_val,dispatch_val_y){
if((function (){var and__11588__auto__ = mf;
if(and__11588__auto__){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
} else {
return and__11588__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf,dispatch_val,dispatch_val_y);
} else {
var x__12244__auto__ = (((mf == null))?null:mf);
return (function (){var or__11600__auto__ = (cljs.core._prefer_method[(function (){var G__25264 = x__12244__auto__;
return goog.typeOf(G__25264);
})()]);
if(or__11600__auto__){
return or__11600__auto__;
} else {
var or__11600__auto____$1 = (cljs.core._prefer_method["_"]);
if(or__11600__auto____$1){
return or__11600__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefer-method",mf);
}
}
})().call(null,mf,dispatch_val,dispatch_val_y);
}
});

cljs.core._get_method = (function _get_method(mf,dispatch_val){
if((function (){var and__11588__auto__ = mf;
if(and__11588__auto__){
return mf.cljs$core$IMultiFn$_get_method$arity$2;
} else {
return and__11588__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_get_method$arity$2(mf,dispatch_val);
} else {
var x__12244__auto__ = (((mf == null))?null:mf);
return (function (){var or__11600__auto__ = (cljs.core._get_method[(function (){var G__25268 = x__12244__auto__;
return goog.typeOf(G__25268);
})()]);
if(or__11600__auto__){
return or__11600__auto__;
} else {
var or__11600__auto____$1 = (cljs.core._get_method["_"]);
if(or__11600__auto____$1){
return or__11600__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-get-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._methods = (function _methods(mf){
if((function (){var and__11588__auto__ = mf;
if(and__11588__auto__){
return mf.cljs$core$IMultiFn$_methods$arity$1;
} else {
return and__11588__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
} else {
var x__12244__auto__ = (((mf == null))?null:mf);
return (function (){var or__11600__auto__ = (cljs.core._methods[(function (){var G__25272 = x__12244__auto__;
return goog.typeOf(G__25272);
})()]);
if(or__11600__auto__){
return or__11600__auto__;
} else {
var or__11600__auto____$1 = (cljs.core._methods["_"]);
if(or__11600__auto____$1){
return or__11600__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-methods",mf);
}
}
})().call(null,mf);
}
});

cljs.core._prefers = (function _prefers(mf){
if((function (){var and__11588__auto__ = mf;
if(and__11588__auto__){
return mf.cljs$core$IMultiFn$_prefers$arity$1;
} else {
return and__11588__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
} else {
var x__12244__auto__ = (((mf == null))?null:mf);
return (function (){var or__11600__auto__ = (cljs.core._prefers[(function (){var G__25276 = x__12244__auto__;
return goog.typeOf(G__25276);
})()]);
if(or__11600__auto__){
return or__11600__auto__;
} else {
var or__11600__auto____$1 = (cljs.core._prefers["_"]);
if(or__11600__auto____$1){
return or__11600__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefers",mf);
}
}
})().call(null,mf);
}
});

cljs.core.throw_no_method_error = (function throw_no_method_error(name,dispatch_val){
throw (new Error([cljs.core.str("No method in multimethod '"),cljs.core.str(name),cljs.core.str("' for dispatch value: "),cljs.core.str(dispatch_val)].join('')));
});

/**
* @constructor
*/
cljs.core.MultiFn = (function (name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
this.name = name;
this.dispatch_fn = dispatch_fn;
this.default_dispatch_val = default_dispatch_val;
this.hierarchy = hierarchy;
this.method_table = method_table;
this.prefer_table = prefer_table;
this.method_cache = method_cache;
this.cached_hierarchy = cached_hierarchy;
this.cljs$lang$protocol_mask$partition0$ = 4194305;
this.cljs$lang$protocol_mask$partition1$ = 4352;
})
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__25278 = this$__$1;
return goog.getUid(G__25278);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._name(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._namespace(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy,((function (mf__$1){
return (function (mf__$2){
return null;
});})(mf__$1))
);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = (function (mf,dispatch_val,method){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table,cljs.core.assoc,dispatch_val,method);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table,cljs.core.dissoc,dispatch_val);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__25279 = self__.cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__25279) : cljs.core.deref.call(null,G__25279));
})(),(function (){var G__25280 = self__.hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__25280) : cljs.core.deref.call(null,G__25280));
})())){
} else {
cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
}

var temp__4124__auto__ = (function (){var G__25281 = self__.method_cache;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__25281) : cljs.core.deref.call(null,G__25281));
})().call(null,dispatch_val);
if(cljs.core.truth_(temp__4124__auto__)){
var target_fn = temp__4124__auto__;
return target_fn;
} else {
var temp__4124__auto____$1 = cljs.core.find_and_cache_best_method(self__.name,dispatch_val,self__.hierarchy,self__.method_table,self__.prefer_table,self__.method_cache,self__.cached_hierarchy);
if(cljs.core.truth_(temp__4124__auto____$1)){
var target_fn = temp__4124__auto____$1;
return target_fn;
} else {
return (function (){var G__25282 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__25282) : cljs.core.deref.call(null,G__25282));
})().call(null,self__.default_dispatch_val);
}
}
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = (function (mf,dispatch_val_x,dispatch_val_y){
var self__ = this;
var mf__$1 = this;
if(cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x,dispatch_val_y,self__.prefer_table))){
throw (new Error([cljs.core.str("Preference conflict in multimethod '"),cljs.core.str(self__.name),cljs.core.str("': "),cljs.core.str(dispatch_val_y),cljs.core.str(" is already preferred to "),cljs.core.str(dispatch_val_x)].join('')));
} else {
}

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (old){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.PersistentHashSet.EMPTY),dispatch_val_y));
});})(mf__$1))
);

return cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__25283 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__25283) : cljs.core.deref.call(null,G__25283));
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__25284 = self__.prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__25284) : cljs.core.deref.call(null,G__25284));
});

cljs.core.MultiFn.prototype.call = (function() {
var G__26125 = null;
var G__26125__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});
var G__26125__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__25285 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__25285) : self__.dispatch_fn.call(null,G__25285));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25286 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__25286) : target_fn.call(null,G__25286));
});
var G__26125__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__25287 = a;
var G__25288 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__25287,G__25288) : self__.dispatch_fn.call(null,G__25287,G__25288));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25289 = a;
var G__25290 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__25289,G__25290) : target_fn.call(null,G__25289,G__25290));
});
var G__26125__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__25291 = a;
var G__25292 = b;
var G__25293 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__25291,G__25292,G__25293) : self__.dispatch_fn.call(null,G__25291,G__25292,G__25293));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25294 = a;
var G__25295 = b;
var G__25296 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__25294,G__25295,G__25296) : target_fn.call(null,G__25294,G__25295,G__25296));
});
var G__26125__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__25297 = a;
var G__25298 = b;
var G__25299 = c;
var G__25300 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__25297,G__25298,G__25299,G__25300) : self__.dispatch_fn.call(null,G__25297,G__25298,G__25299,G__25300));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25301 = a;
var G__25302 = b;
var G__25303 = c;
var G__25304 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__25301,G__25302,G__25303,G__25304) : target_fn.call(null,G__25301,G__25302,G__25303,G__25304));
});
var G__26125__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__25305 = a;
var G__25306 = b;
var G__25307 = c;
var G__25308 = d;
var G__25309 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__25305,G__25306,G__25307,G__25308,G__25309) : self__.dispatch_fn.call(null,G__25305,G__25306,G__25307,G__25308,G__25309));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25310 = a;
var G__25311 = b;
var G__25312 = c;
var G__25313 = d;
var G__25314 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__25310,G__25311,G__25312,G__25313,G__25314) : target_fn.call(null,G__25310,G__25311,G__25312,G__25313,G__25314));
});
var G__26125__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__25315 = a;
var G__25316 = b;
var G__25317 = c;
var G__25318 = d;
var G__25319 = e;
var G__25320 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__25315,G__25316,G__25317,G__25318,G__25319,G__25320) : self__.dispatch_fn.call(null,G__25315,G__25316,G__25317,G__25318,G__25319,G__25320));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25321 = a;
var G__25322 = b;
var G__25323 = c;
var G__25324 = d;
var G__25325 = e;
var G__25326 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__25321,G__25322,G__25323,G__25324,G__25325,G__25326) : target_fn.call(null,G__25321,G__25322,G__25323,G__25324,G__25325,G__25326));
});
var G__26125__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__25327 = a;
var G__25328 = b;
var G__25329 = c;
var G__25330 = d;
var G__25331 = e;
var G__25332 = f;
var G__25333 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__25327,G__25328,G__25329,G__25330,G__25331,G__25332,G__25333) : self__.dispatch_fn.call(null,G__25327,G__25328,G__25329,G__25330,G__25331,G__25332,G__25333));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25334 = a;
var G__25335 = b;
var G__25336 = c;
var G__25337 = d;
var G__25338 = e;
var G__25339 = f;
var G__25340 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__25334,G__25335,G__25336,G__25337,G__25338,G__25339,G__25340) : target_fn.call(null,G__25334,G__25335,G__25336,G__25337,G__25338,G__25339,G__25340));
});
var G__26125__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__25341 = a;
var G__25342 = b;
var G__25343 = c;
var G__25344 = d;
var G__25345 = e;
var G__25346 = f;
var G__25347 = g;
var G__25348 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__25341,G__25342,G__25343,G__25344,G__25345,G__25346,G__25347,G__25348) : self__.dispatch_fn.call(null,G__25341,G__25342,G__25343,G__25344,G__25345,G__25346,G__25347,G__25348));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25349 = a;
var G__25350 = b;
var G__25351 = c;
var G__25352 = d;
var G__25353 = e;
var G__25354 = f;
var G__25355 = g;
var G__25356 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__25349,G__25350,G__25351,G__25352,G__25353,G__25354,G__25355,G__25356) : target_fn.call(null,G__25349,G__25350,G__25351,G__25352,G__25353,G__25354,G__25355,G__25356));
});
var G__26125__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__25357 = a;
var G__25358 = b;
var G__25359 = c;
var G__25360 = d;
var G__25361 = e;
var G__25362 = f;
var G__25363 = g;
var G__25364 = h;
var G__25365 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__25357,G__25358,G__25359,G__25360,G__25361,G__25362,G__25363,G__25364,G__25365) : self__.dispatch_fn.call(null,G__25357,G__25358,G__25359,G__25360,G__25361,G__25362,G__25363,G__25364,G__25365));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25366 = a;
var G__25367 = b;
var G__25368 = c;
var G__25369 = d;
var G__25370 = e;
var G__25371 = f;
var G__25372 = g;
var G__25373 = h;
var G__25374 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__25366,G__25367,G__25368,G__25369,G__25370,G__25371,G__25372,G__25373,G__25374) : target_fn.call(null,G__25366,G__25367,G__25368,G__25369,G__25370,G__25371,G__25372,G__25373,G__25374));
});
var G__26125__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__25375 = a;
var G__25376 = b;
var G__25377 = c;
var G__25378 = d;
var G__25379 = e;
var G__25380 = f;
var G__25381 = g;
var G__25382 = h;
var G__25383 = i;
var G__25384 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__25375,G__25376,G__25377,G__25378,G__25379,G__25380,G__25381,G__25382,G__25383,G__25384) : self__.dispatch_fn.call(null,G__25375,G__25376,G__25377,G__25378,G__25379,G__25380,G__25381,G__25382,G__25383,G__25384));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25385 = a;
var G__25386 = b;
var G__25387 = c;
var G__25388 = d;
var G__25389 = e;
var G__25390 = f;
var G__25391 = g;
var G__25392 = h;
var G__25393 = i;
var G__25394 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__25385,G__25386,G__25387,G__25388,G__25389,G__25390,G__25391,G__25392,G__25393,G__25394) : target_fn.call(null,G__25385,G__25386,G__25387,G__25388,G__25389,G__25390,G__25391,G__25392,G__25393,G__25394));
});
var G__26125__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__25395 = a;
var G__25396 = b;
var G__25397 = c;
var G__25398 = d;
var G__25399 = e;
var G__25400 = f;
var G__25401 = g;
var G__25402 = h;
var G__25403 = i;
var G__25404 = j;
var G__25405 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__25395,G__25396,G__25397,G__25398,G__25399,G__25400,G__25401,G__25402,G__25403,G__25404,G__25405) : self__.dispatch_fn.call(null,G__25395,G__25396,G__25397,G__25398,G__25399,G__25400,G__25401,G__25402,G__25403,G__25404,G__25405));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25406 = a;
var G__25407 = b;
var G__25408 = c;
var G__25409 = d;
var G__25410 = e;
var G__25411 = f;
var G__25412 = g;
var G__25413 = h;
var G__25414 = i;
var G__25415 = j;
var G__25416 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__25406,G__25407,G__25408,G__25409,G__25410,G__25411,G__25412,G__25413,G__25414,G__25415,G__25416) : target_fn.call(null,G__25406,G__25407,G__25408,G__25409,G__25410,G__25411,G__25412,G__25413,G__25414,G__25415,G__25416));
});
var G__26125__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__25417 = a;
var G__25418 = b;
var G__25419 = c;
var G__25420 = d;
var G__25421 = e;
var G__25422 = f;
var G__25423 = g;
var G__25424 = h;
var G__25425 = i;
var G__25426 = j;
var G__25427 = k;
var G__25428 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__25417,G__25418,G__25419,G__25420,G__25421,G__25422,G__25423,G__25424,G__25425,G__25426,G__25427,G__25428) : self__.dispatch_fn.call(null,G__25417,G__25418,G__25419,G__25420,G__25421,G__25422,G__25423,G__25424,G__25425,G__25426,G__25427,G__25428));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25429 = a;
var G__25430 = b;
var G__25431 = c;
var G__25432 = d;
var G__25433 = e;
var G__25434 = f;
var G__25435 = g;
var G__25436 = h;
var G__25437 = i;
var G__25438 = j;
var G__25439 = k;
var G__25440 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__25429,G__25430,G__25431,G__25432,G__25433,G__25434,G__25435,G__25436,G__25437,G__25438,G__25439,G__25440) : target_fn.call(null,G__25429,G__25430,G__25431,G__25432,G__25433,G__25434,G__25435,G__25436,G__25437,G__25438,G__25439,G__25440));
});
var G__26125__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__25441 = a;
var G__25442 = b;
var G__25443 = c;
var G__25444 = d;
var G__25445 = e;
var G__25446 = f;
var G__25447 = g;
var G__25448 = h;
var G__25449 = i;
var G__25450 = j;
var G__25451 = k;
var G__25452 = l;
var G__25453 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__25441,G__25442,G__25443,G__25444,G__25445,G__25446,G__25447,G__25448,G__25449,G__25450,G__25451,G__25452,G__25453) : self__.dispatch_fn.call(null,G__25441,G__25442,G__25443,G__25444,G__25445,G__25446,G__25447,G__25448,G__25449,G__25450,G__25451,G__25452,G__25453));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25454 = a;
var G__25455 = b;
var G__25456 = c;
var G__25457 = d;
var G__25458 = e;
var G__25459 = f;
var G__25460 = g;
var G__25461 = h;
var G__25462 = i;
var G__25463 = j;
var G__25464 = k;
var G__25465 = l;
var G__25466 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__25454,G__25455,G__25456,G__25457,G__25458,G__25459,G__25460,G__25461,G__25462,G__25463,G__25464,G__25465,G__25466) : target_fn.call(null,G__25454,G__25455,G__25456,G__25457,G__25458,G__25459,G__25460,G__25461,G__25462,G__25463,G__25464,G__25465,G__25466));
});
var G__26125__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__25467 = a;
var G__25468 = b;
var G__25469 = c;
var G__25470 = d;
var G__25471 = e;
var G__25472 = f;
var G__25473 = g;
var G__25474 = h;
var G__25475 = i;
var G__25476 = j;
var G__25477 = k;
var G__25478 = l;
var G__25479 = m;
var G__25480 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__25467,G__25468,G__25469,G__25470,G__25471,G__25472,G__25473,G__25474,G__25475,G__25476,G__25477,G__25478,G__25479,G__25480) : self__.dispatch_fn.call(null,G__25467,G__25468,G__25469,G__25470,G__25471,G__25472,G__25473,G__25474,G__25475,G__25476,G__25477,G__25478,G__25479,G__25480));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25481 = a;
var G__25482 = b;
var G__25483 = c;
var G__25484 = d;
var G__25485 = e;
var G__25486 = f;
var G__25487 = g;
var G__25488 = h;
var G__25489 = i;
var G__25490 = j;
var G__25491 = k;
var G__25492 = l;
var G__25493 = m;
var G__25494 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__25481,G__25482,G__25483,G__25484,G__25485,G__25486,G__25487,G__25488,G__25489,G__25490,G__25491,G__25492,G__25493,G__25494) : target_fn.call(null,G__25481,G__25482,G__25483,G__25484,G__25485,G__25486,G__25487,G__25488,G__25489,G__25490,G__25491,G__25492,G__25493,G__25494));
});
var G__26125__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__25495 = a;
var G__25496 = b;
var G__25497 = c;
var G__25498 = d;
var G__25499 = e;
var G__25500 = f;
var G__25501 = g;
var G__25502 = h;
var G__25503 = i;
var G__25504 = j;
var G__25505 = k;
var G__25506 = l;
var G__25507 = m;
var G__25508 = n;
var G__25509 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__25495,G__25496,G__25497,G__25498,G__25499,G__25500,G__25501,G__25502,G__25503,G__25504,G__25505,G__25506,G__25507,G__25508,G__25509) : self__.dispatch_fn.call(null,G__25495,G__25496,G__25497,G__25498,G__25499,G__25500,G__25501,G__25502,G__25503,G__25504,G__25505,G__25506,G__25507,G__25508,G__25509));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25510 = a;
var G__25511 = b;
var G__25512 = c;
var G__25513 = d;
var G__25514 = e;
var G__25515 = f;
var G__25516 = g;
var G__25517 = h;
var G__25518 = i;
var G__25519 = j;
var G__25520 = k;
var G__25521 = l;
var G__25522 = m;
var G__25523 = n;
var G__25524 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__25510,G__25511,G__25512,G__25513,G__25514,G__25515,G__25516,G__25517,G__25518,G__25519,G__25520,G__25521,G__25522,G__25523,G__25524) : target_fn.call(null,G__25510,G__25511,G__25512,G__25513,G__25514,G__25515,G__25516,G__25517,G__25518,G__25519,G__25520,G__25521,G__25522,G__25523,G__25524));
});
var G__26125__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__25525 = a;
var G__25526 = b;
var G__25527 = c;
var G__25528 = d;
var G__25529 = e;
var G__25530 = f;
var G__25531 = g;
var G__25532 = h;
var G__25533 = i;
var G__25534 = j;
var G__25535 = k;
var G__25536 = l;
var G__25537 = m;
var G__25538 = n;
var G__25539 = o;
var G__25540 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__25525,G__25526,G__25527,G__25528,G__25529,G__25530,G__25531,G__25532,G__25533,G__25534,G__25535,G__25536,G__25537,G__25538,G__25539,G__25540) : self__.dispatch_fn.call(null,G__25525,G__25526,G__25527,G__25528,G__25529,G__25530,G__25531,G__25532,G__25533,G__25534,G__25535,G__25536,G__25537,G__25538,G__25539,G__25540));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25541 = a;
var G__25542 = b;
var G__25543 = c;
var G__25544 = d;
var G__25545 = e;
var G__25546 = f;
var G__25547 = g;
var G__25548 = h;
var G__25549 = i;
var G__25550 = j;
var G__25551 = k;
var G__25552 = l;
var G__25553 = m;
var G__25554 = n;
var G__25555 = o;
var G__25556 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__25541,G__25542,G__25543,G__25544,G__25545,G__25546,G__25547,G__25548,G__25549,G__25550,G__25551,G__25552,G__25553,G__25554,G__25555,G__25556) : target_fn.call(null,G__25541,G__25542,G__25543,G__25544,G__25545,G__25546,G__25547,G__25548,G__25549,G__25550,G__25551,G__25552,G__25553,G__25554,G__25555,G__25556));
});
var G__26125__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__25557 = a;
var G__25558 = b;
var G__25559 = c;
var G__25560 = d;
var G__25561 = e;
var G__25562 = f;
var G__25563 = g;
var G__25564 = h;
var G__25565 = i;
var G__25566 = j;
var G__25567 = k;
var G__25568 = l;
var G__25569 = m;
var G__25570 = n;
var G__25571 = o;
var G__25572 = p;
var G__25573 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__25557,G__25558,G__25559,G__25560,G__25561,G__25562,G__25563,G__25564,G__25565,G__25566,G__25567,G__25568,G__25569,G__25570,G__25571,G__25572,G__25573) : self__.dispatch_fn.call(null,G__25557,G__25558,G__25559,G__25560,G__25561,G__25562,G__25563,G__25564,G__25565,G__25566,G__25567,G__25568,G__25569,G__25570,G__25571,G__25572,G__25573));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25574 = a;
var G__25575 = b;
var G__25576 = c;
var G__25577 = d;
var G__25578 = e;
var G__25579 = f;
var G__25580 = g;
var G__25581 = h;
var G__25582 = i;
var G__25583 = j;
var G__25584 = k;
var G__25585 = l;
var G__25586 = m;
var G__25587 = n;
var G__25588 = o;
var G__25589 = p;
var G__25590 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__25574,G__25575,G__25576,G__25577,G__25578,G__25579,G__25580,G__25581,G__25582,G__25583,G__25584,G__25585,G__25586,G__25587,G__25588,G__25589,G__25590) : target_fn.call(null,G__25574,G__25575,G__25576,G__25577,G__25578,G__25579,G__25580,G__25581,G__25582,G__25583,G__25584,G__25585,G__25586,G__25587,G__25588,G__25589,G__25590));
});
var G__26125__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__25591 = a;
var G__25592 = b;
var G__25593 = c;
var G__25594 = d;
var G__25595 = e;
var G__25596 = f;
var G__25597 = g;
var G__25598 = h;
var G__25599 = i;
var G__25600 = j;
var G__25601 = k;
var G__25602 = l;
var G__25603 = m;
var G__25604 = n;
var G__25605 = o;
var G__25606 = p;
var G__25607 = q;
var G__25608 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__25591,G__25592,G__25593,G__25594,G__25595,G__25596,G__25597,G__25598,G__25599,G__25600,G__25601,G__25602,G__25603,G__25604,G__25605,G__25606,G__25607,G__25608) : self__.dispatch_fn.call(null,G__25591,G__25592,G__25593,G__25594,G__25595,G__25596,G__25597,G__25598,G__25599,G__25600,G__25601,G__25602,G__25603,G__25604,G__25605,G__25606,G__25607,G__25608));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25609 = a;
var G__25610 = b;
var G__25611 = c;
var G__25612 = d;
var G__25613 = e;
var G__25614 = f;
var G__25615 = g;
var G__25616 = h;
var G__25617 = i;
var G__25618 = j;
var G__25619 = k;
var G__25620 = l;
var G__25621 = m;
var G__25622 = n;
var G__25623 = o;
var G__25624 = p;
var G__25625 = q;
var G__25626 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__25609,G__25610,G__25611,G__25612,G__25613,G__25614,G__25615,G__25616,G__25617,G__25618,G__25619,G__25620,G__25621,G__25622,G__25623,G__25624,G__25625,G__25626) : target_fn.call(null,G__25609,G__25610,G__25611,G__25612,G__25613,G__25614,G__25615,G__25616,G__25617,G__25618,G__25619,G__25620,G__25621,G__25622,G__25623,G__25624,G__25625,G__25626));
});
var G__26125__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__25627 = a;
var G__25628 = b;
var G__25629 = c;
var G__25630 = d;
var G__25631 = e;
var G__25632 = f;
var G__25633 = g;
var G__25634 = h;
var G__25635 = i;
var G__25636 = j;
var G__25637 = k;
var G__25638 = l;
var G__25639 = m;
var G__25640 = n;
var G__25641 = o;
var G__25642 = p;
var G__25643 = q;
var G__25644 = r;
var G__25645 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__25627,G__25628,G__25629,G__25630,G__25631,G__25632,G__25633,G__25634,G__25635,G__25636,G__25637,G__25638,G__25639,G__25640,G__25641,G__25642,G__25643,G__25644,G__25645) : self__.dispatch_fn.call(null,G__25627,G__25628,G__25629,G__25630,G__25631,G__25632,G__25633,G__25634,G__25635,G__25636,G__25637,G__25638,G__25639,G__25640,G__25641,G__25642,G__25643,G__25644,G__25645));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25646 = a;
var G__25647 = b;
var G__25648 = c;
var G__25649 = d;
var G__25650 = e;
var G__25651 = f;
var G__25652 = g;
var G__25653 = h;
var G__25654 = i;
var G__25655 = j;
var G__25656 = k;
var G__25657 = l;
var G__25658 = m;
var G__25659 = n;
var G__25660 = o;
var G__25661 = p;
var G__25662 = q;
var G__25663 = r;
var G__25664 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__25646,G__25647,G__25648,G__25649,G__25650,G__25651,G__25652,G__25653,G__25654,G__25655,G__25656,G__25657,G__25658,G__25659,G__25660,G__25661,G__25662,G__25663,G__25664) : target_fn.call(null,G__25646,G__25647,G__25648,G__25649,G__25650,G__25651,G__25652,G__25653,G__25654,G__25655,G__25656,G__25657,G__25658,G__25659,G__25660,G__25661,G__25662,G__25663,G__25664));
});
var G__26125__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__25665 = a;
var G__25666 = b;
var G__25667 = c;
var G__25668 = d;
var G__25669 = e;
var G__25670 = f;
var G__25671 = g;
var G__25672 = h;
var G__25673 = i;
var G__25674 = j;
var G__25675 = k;
var G__25676 = l;
var G__25677 = m;
var G__25678 = n;
var G__25679 = o;
var G__25680 = p;
var G__25681 = q;
var G__25682 = r;
var G__25683 = s;
var G__25684 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__25665,G__25666,G__25667,G__25668,G__25669,G__25670,G__25671,G__25672,G__25673,G__25674,G__25675,G__25676,G__25677,G__25678,G__25679,G__25680,G__25681,G__25682,G__25683,G__25684) : self__.dispatch_fn.call(null,G__25665,G__25666,G__25667,G__25668,G__25669,G__25670,G__25671,G__25672,G__25673,G__25674,G__25675,G__25676,G__25677,G__25678,G__25679,G__25680,G__25681,G__25682,G__25683,G__25684));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25685 = a;
var G__25686 = b;
var G__25687 = c;
var G__25688 = d;
var G__25689 = e;
var G__25690 = f;
var G__25691 = g;
var G__25692 = h;
var G__25693 = i;
var G__25694 = j;
var G__25695 = k;
var G__25696 = l;
var G__25697 = m;
var G__25698 = n;
var G__25699 = o;
var G__25700 = p;
var G__25701 = q;
var G__25702 = r;
var G__25703 = s;
var G__25704 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__25685,G__25686,G__25687,G__25688,G__25689,G__25690,G__25691,G__25692,G__25693,G__25694,G__25695,G__25696,G__25697,G__25698,G__25699,G__25700,G__25701,G__25702,G__25703,G__25704) : target_fn.call(null,G__25685,G__25686,G__25687,G__25688,G__25689,G__25690,G__25691,G__25692,G__25693,G__25694,G__25695,G__25696,G__25697,G__25698,G__25699,G__25700,G__25701,G__25702,G__25703,G__25704));
});
var G__26125__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});
G__26125 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__26125__1.call(this,self__);
case 2:
return G__26125__2.call(this,self__,a);
case 3:
return G__26125__3.call(this,self__,a,b);
case 4:
return G__26125__4.call(this,self__,a,b,c);
case 5:
return G__26125__5.call(this,self__,a,b,c,d);
case 6:
return G__26125__6.call(this,self__,a,b,c,d,e);
case 7:
return G__26125__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__26125__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__26125__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__26125__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__26125__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__26125__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__26125__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__26125__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__26125__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__26125__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__26125__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__26125__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__26125__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__26125__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__26125__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__26125__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__26125.cljs$core$IFn$_invoke$arity$1 = G__26125__1;
G__26125.cljs$core$IFn$_invoke$arity$2 = G__26125__2;
G__26125.cljs$core$IFn$_invoke$arity$3 = G__26125__3;
G__26125.cljs$core$IFn$_invoke$arity$4 = G__26125__4;
G__26125.cljs$core$IFn$_invoke$arity$5 = G__26125__5;
G__26125.cljs$core$IFn$_invoke$arity$6 = G__26125__6;
G__26125.cljs$core$IFn$_invoke$arity$7 = G__26125__7;
G__26125.cljs$core$IFn$_invoke$arity$8 = G__26125__8;
G__26125.cljs$core$IFn$_invoke$arity$9 = G__26125__9;
G__26125.cljs$core$IFn$_invoke$arity$10 = G__26125__10;
G__26125.cljs$core$IFn$_invoke$arity$11 = G__26125__11;
G__26125.cljs$core$IFn$_invoke$arity$12 = G__26125__12;
G__26125.cljs$core$IFn$_invoke$arity$13 = G__26125__13;
G__26125.cljs$core$IFn$_invoke$arity$14 = G__26125__14;
G__26125.cljs$core$IFn$_invoke$arity$15 = G__26125__15;
G__26125.cljs$core$IFn$_invoke$arity$16 = G__26125__16;
G__26125.cljs$core$IFn$_invoke$arity$17 = G__26125__17;
G__26125.cljs$core$IFn$_invoke$arity$18 = G__26125__18;
G__26125.cljs$core$IFn$_invoke$arity$19 = G__26125__19;
G__26125.cljs$core$IFn$_invoke$arity$20 = G__26125__20;
G__26125.cljs$core$IFn$_invoke$arity$21 = G__26125__21;
G__26125.cljs$core$IFn$_invoke$arity$22 = G__26125__22;
return G__26125;
})()
;

cljs.core.MultiFn.prototype.apply = (function (self__,args25277){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args25277)));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var mf = this;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__25705 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__25705) : self__.dispatch_fn.call(null,G__25705));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25706 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__25706) : target_fn.call(null,G__25706));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__25707 = a;
var G__25708 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__25707,G__25708) : self__.dispatch_fn.call(null,G__25707,G__25708));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25709 = a;
var G__25710 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__25709,G__25710) : target_fn.call(null,G__25709,G__25710));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__25711 = a;
var G__25712 = b;
var G__25713 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__25711,G__25712,G__25713) : self__.dispatch_fn.call(null,G__25711,G__25712,G__25713));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25714 = a;
var G__25715 = b;
var G__25716 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__25714,G__25715,G__25716) : target_fn.call(null,G__25714,G__25715,G__25716));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__25717 = a;
var G__25718 = b;
var G__25719 = c;
var G__25720 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__25717,G__25718,G__25719,G__25720) : self__.dispatch_fn.call(null,G__25717,G__25718,G__25719,G__25720));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25721 = a;
var G__25722 = b;
var G__25723 = c;
var G__25724 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__25721,G__25722,G__25723,G__25724) : target_fn.call(null,G__25721,G__25722,G__25723,G__25724));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__25725 = a;
var G__25726 = b;
var G__25727 = c;
var G__25728 = d;
var G__25729 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__25725,G__25726,G__25727,G__25728,G__25729) : self__.dispatch_fn.call(null,G__25725,G__25726,G__25727,G__25728,G__25729));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25730 = a;
var G__25731 = b;
var G__25732 = c;
var G__25733 = d;
var G__25734 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__25730,G__25731,G__25732,G__25733,G__25734) : target_fn.call(null,G__25730,G__25731,G__25732,G__25733,G__25734));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__25735 = a;
var G__25736 = b;
var G__25737 = c;
var G__25738 = d;
var G__25739 = e;
var G__25740 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__25735,G__25736,G__25737,G__25738,G__25739,G__25740) : self__.dispatch_fn.call(null,G__25735,G__25736,G__25737,G__25738,G__25739,G__25740));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25741 = a;
var G__25742 = b;
var G__25743 = c;
var G__25744 = d;
var G__25745 = e;
var G__25746 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__25741,G__25742,G__25743,G__25744,G__25745,G__25746) : target_fn.call(null,G__25741,G__25742,G__25743,G__25744,G__25745,G__25746));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__25747 = a;
var G__25748 = b;
var G__25749 = c;
var G__25750 = d;
var G__25751 = e;
var G__25752 = f;
var G__25753 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__25747,G__25748,G__25749,G__25750,G__25751,G__25752,G__25753) : self__.dispatch_fn.call(null,G__25747,G__25748,G__25749,G__25750,G__25751,G__25752,G__25753));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25754 = a;
var G__25755 = b;
var G__25756 = c;
var G__25757 = d;
var G__25758 = e;
var G__25759 = f;
var G__25760 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__25754,G__25755,G__25756,G__25757,G__25758,G__25759,G__25760) : target_fn.call(null,G__25754,G__25755,G__25756,G__25757,G__25758,G__25759,G__25760));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__25761 = a;
var G__25762 = b;
var G__25763 = c;
var G__25764 = d;
var G__25765 = e;
var G__25766 = f;
var G__25767 = g;
var G__25768 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__25761,G__25762,G__25763,G__25764,G__25765,G__25766,G__25767,G__25768) : self__.dispatch_fn.call(null,G__25761,G__25762,G__25763,G__25764,G__25765,G__25766,G__25767,G__25768));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25769 = a;
var G__25770 = b;
var G__25771 = c;
var G__25772 = d;
var G__25773 = e;
var G__25774 = f;
var G__25775 = g;
var G__25776 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__25769,G__25770,G__25771,G__25772,G__25773,G__25774,G__25775,G__25776) : target_fn.call(null,G__25769,G__25770,G__25771,G__25772,G__25773,G__25774,G__25775,G__25776));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__25777 = a;
var G__25778 = b;
var G__25779 = c;
var G__25780 = d;
var G__25781 = e;
var G__25782 = f;
var G__25783 = g;
var G__25784 = h;
var G__25785 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__25777,G__25778,G__25779,G__25780,G__25781,G__25782,G__25783,G__25784,G__25785) : self__.dispatch_fn.call(null,G__25777,G__25778,G__25779,G__25780,G__25781,G__25782,G__25783,G__25784,G__25785));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25786 = a;
var G__25787 = b;
var G__25788 = c;
var G__25789 = d;
var G__25790 = e;
var G__25791 = f;
var G__25792 = g;
var G__25793 = h;
var G__25794 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__25786,G__25787,G__25788,G__25789,G__25790,G__25791,G__25792,G__25793,G__25794) : target_fn.call(null,G__25786,G__25787,G__25788,G__25789,G__25790,G__25791,G__25792,G__25793,G__25794));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__25795 = a;
var G__25796 = b;
var G__25797 = c;
var G__25798 = d;
var G__25799 = e;
var G__25800 = f;
var G__25801 = g;
var G__25802 = h;
var G__25803 = i;
var G__25804 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__25795,G__25796,G__25797,G__25798,G__25799,G__25800,G__25801,G__25802,G__25803,G__25804) : self__.dispatch_fn.call(null,G__25795,G__25796,G__25797,G__25798,G__25799,G__25800,G__25801,G__25802,G__25803,G__25804));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25805 = a;
var G__25806 = b;
var G__25807 = c;
var G__25808 = d;
var G__25809 = e;
var G__25810 = f;
var G__25811 = g;
var G__25812 = h;
var G__25813 = i;
var G__25814 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__25805,G__25806,G__25807,G__25808,G__25809,G__25810,G__25811,G__25812,G__25813,G__25814) : target_fn.call(null,G__25805,G__25806,G__25807,G__25808,G__25809,G__25810,G__25811,G__25812,G__25813,G__25814));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__25815 = a;
var G__25816 = b;
var G__25817 = c;
var G__25818 = d;
var G__25819 = e;
var G__25820 = f;
var G__25821 = g;
var G__25822 = h;
var G__25823 = i;
var G__25824 = j;
var G__25825 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__25815,G__25816,G__25817,G__25818,G__25819,G__25820,G__25821,G__25822,G__25823,G__25824,G__25825) : self__.dispatch_fn.call(null,G__25815,G__25816,G__25817,G__25818,G__25819,G__25820,G__25821,G__25822,G__25823,G__25824,G__25825));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25826 = a;
var G__25827 = b;
var G__25828 = c;
var G__25829 = d;
var G__25830 = e;
var G__25831 = f;
var G__25832 = g;
var G__25833 = h;
var G__25834 = i;
var G__25835 = j;
var G__25836 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__25826,G__25827,G__25828,G__25829,G__25830,G__25831,G__25832,G__25833,G__25834,G__25835,G__25836) : target_fn.call(null,G__25826,G__25827,G__25828,G__25829,G__25830,G__25831,G__25832,G__25833,G__25834,G__25835,G__25836));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__25837 = a;
var G__25838 = b;
var G__25839 = c;
var G__25840 = d;
var G__25841 = e;
var G__25842 = f;
var G__25843 = g;
var G__25844 = h;
var G__25845 = i;
var G__25846 = j;
var G__25847 = k;
var G__25848 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__25837,G__25838,G__25839,G__25840,G__25841,G__25842,G__25843,G__25844,G__25845,G__25846,G__25847,G__25848) : self__.dispatch_fn.call(null,G__25837,G__25838,G__25839,G__25840,G__25841,G__25842,G__25843,G__25844,G__25845,G__25846,G__25847,G__25848));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25849 = a;
var G__25850 = b;
var G__25851 = c;
var G__25852 = d;
var G__25853 = e;
var G__25854 = f;
var G__25855 = g;
var G__25856 = h;
var G__25857 = i;
var G__25858 = j;
var G__25859 = k;
var G__25860 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__25849,G__25850,G__25851,G__25852,G__25853,G__25854,G__25855,G__25856,G__25857,G__25858,G__25859,G__25860) : target_fn.call(null,G__25849,G__25850,G__25851,G__25852,G__25853,G__25854,G__25855,G__25856,G__25857,G__25858,G__25859,G__25860));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__25861 = a;
var G__25862 = b;
var G__25863 = c;
var G__25864 = d;
var G__25865 = e;
var G__25866 = f;
var G__25867 = g;
var G__25868 = h;
var G__25869 = i;
var G__25870 = j;
var G__25871 = k;
var G__25872 = l;
var G__25873 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__25861,G__25862,G__25863,G__25864,G__25865,G__25866,G__25867,G__25868,G__25869,G__25870,G__25871,G__25872,G__25873) : self__.dispatch_fn.call(null,G__25861,G__25862,G__25863,G__25864,G__25865,G__25866,G__25867,G__25868,G__25869,G__25870,G__25871,G__25872,G__25873));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25874 = a;
var G__25875 = b;
var G__25876 = c;
var G__25877 = d;
var G__25878 = e;
var G__25879 = f;
var G__25880 = g;
var G__25881 = h;
var G__25882 = i;
var G__25883 = j;
var G__25884 = k;
var G__25885 = l;
var G__25886 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__25874,G__25875,G__25876,G__25877,G__25878,G__25879,G__25880,G__25881,G__25882,G__25883,G__25884,G__25885,G__25886) : target_fn.call(null,G__25874,G__25875,G__25876,G__25877,G__25878,G__25879,G__25880,G__25881,G__25882,G__25883,G__25884,G__25885,G__25886));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__25887 = a;
var G__25888 = b;
var G__25889 = c;
var G__25890 = d;
var G__25891 = e;
var G__25892 = f;
var G__25893 = g;
var G__25894 = h;
var G__25895 = i;
var G__25896 = j;
var G__25897 = k;
var G__25898 = l;
var G__25899 = m;
var G__25900 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__25887,G__25888,G__25889,G__25890,G__25891,G__25892,G__25893,G__25894,G__25895,G__25896,G__25897,G__25898,G__25899,G__25900) : self__.dispatch_fn.call(null,G__25887,G__25888,G__25889,G__25890,G__25891,G__25892,G__25893,G__25894,G__25895,G__25896,G__25897,G__25898,G__25899,G__25900));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25901 = a;
var G__25902 = b;
var G__25903 = c;
var G__25904 = d;
var G__25905 = e;
var G__25906 = f;
var G__25907 = g;
var G__25908 = h;
var G__25909 = i;
var G__25910 = j;
var G__25911 = k;
var G__25912 = l;
var G__25913 = m;
var G__25914 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__25901,G__25902,G__25903,G__25904,G__25905,G__25906,G__25907,G__25908,G__25909,G__25910,G__25911,G__25912,G__25913,G__25914) : target_fn.call(null,G__25901,G__25902,G__25903,G__25904,G__25905,G__25906,G__25907,G__25908,G__25909,G__25910,G__25911,G__25912,G__25913,G__25914));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__25915 = a;
var G__25916 = b;
var G__25917 = c;
var G__25918 = d;
var G__25919 = e;
var G__25920 = f;
var G__25921 = g;
var G__25922 = h;
var G__25923 = i;
var G__25924 = j;
var G__25925 = k;
var G__25926 = l;
var G__25927 = m;
var G__25928 = n;
var G__25929 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__25915,G__25916,G__25917,G__25918,G__25919,G__25920,G__25921,G__25922,G__25923,G__25924,G__25925,G__25926,G__25927,G__25928,G__25929) : self__.dispatch_fn.call(null,G__25915,G__25916,G__25917,G__25918,G__25919,G__25920,G__25921,G__25922,G__25923,G__25924,G__25925,G__25926,G__25927,G__25928,G__25929));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25930 = a;
var G__25931 = b;
var G__25932 = c;
var G__25933 = d;
var G__25934 = e;
var G__25935 = f;
var G__25936 = g;
var G__25937 = h;
var G__25938 = i;
var G__25939 = j;
var G__25940 = k;
var G__25941 = l;
var G__25942 = m;
var G__25943 = n;
var G__25944 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__25930,G__25931,G__25932,G__25933,G__25934,G__25935,G__25936,G__25937,G__25938,G__25939,G__25940,G__25941,G__25942,G__25943,G__25944) : target_fn.call(null,G__25930,G__25931,G__25932,G__25933,G__25934,G__25935,G__25936,G__25937,G__25938,G__25939,G__25940,G__25941,G__25942,G__25943,G__25944));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__25945 = a;
var G__25946 = b;
var G__25947 = c;
var G__25948 = d;
var G__25949 = e;
var G__25950 = f;
var G__25951 = g;
var G__25952 = h;
var G__25953 = i;
var G__25954 = j;
var G__25955 = k;
var G__25956 = l;
var G__25957 = m;
var G__25958 = n;
var G__25959 = o;
var G__25960 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__25945,G__25946,G__25947,G__25948,G__25949,G__25950,G__25951,G__25952,G__25953,G__25954,G__25955,G__25956,G__25957,G__25958,G__25959,G__25960) : self__.dispatch_fn.call(null,G__25945,G__25946,G__25947,G__25948,G__25949,G__25950,G__25951,G__25952,G__25953,G__25954,G__25955,G__25956,G__25957,G__25958,G__25959,G__25960));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25961 = a;
var G__25962 = b;
var G__25963 = c;
var G__25964 = d;
var G__25965 = e;
var G__25966 = f;
var G__25967 = g;
var G__25968 = h;
var G__25969 = i;
var G__25970 = j;
var G__25971 = k;
var G__25972 = l;
var G__25973 = m;
var G__25974 = n;
var G__25975 = o;
var G__25976 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__25961,G__25962,G__25963,G__25964,G__25965,G__25966,G__25967,G__25968,G__25969,G__25970,G__25971,G__25972,G__25973,G__25974,G__25975,G__25976) : target_fn.call(null,G__25961,G__25962,G__25963,G__25964,G__25965,G__25966,G__25967,G__25968,G__25969,G__25970,G__25971,G__25972,G__25973,G__25974,G__25975,G__25976));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__25977 = a;
var G__25978 = b;
var G__25979 = c;
var G__25980 = d;
var G__25981 = e;
var G__25982 = f;
var G__25983 = g;
var G__25984 = h;
var G__25985 = i;
var G__25986 = j;
var G__25987 = k;
var G__25988 = l;
var G__25989 = m;
var G__25990 = n;
var G__25991 = o;
var G__25992 = p;
var G__25993 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__25977,G__25978,G__25979,G__25980,G__25981,G__25982,G__25983,G__25984,G__25985,G__25986,G__25987,G__25988,G__25989,G__25990,G__25991,G__25992,G__25993) : self__.dispatch_fn.call(null,G__25977,G__25978,G__25979,G__25980,G__25981,G__25982,G__25983,G__25984,G__25985,G__25986,G__25987,G__25988,G__25989,G__25990,G__25991,G__25992,G__25993));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25994 = a;
var G__25995 = b;
var G__25996 = c;
var G__25997 = d;
var G__25998 = e;
var G__25999 = f;
var G__26000 = g;
var G__26001 = h;
var G__26002 = i;
var G__26003 = j;
var G__26004 = k;
var G__26005 = l;
var G__26006 = m;
var G__26007 = n;
var G__26008 = o;
var G__26009 = p;
var G__26010 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__25994,G__25995,G__25996,G__25997,G__25998,G__25999,G__26000,G__26001,G__26002,G__26003,G__26004,G__26005,G__26006,G__26007,G__26008,G__26009,G__26010) : target_fn.call(null,G__25994,G__25995,G__25996,G__25997,G__25998,G__25999,G__26000,G__26001,G__26002,G__26003,G__26004,G__26005,G__26006,G__26007,G__26008,G__26009,G__26010));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__26011 = a;
var G__26012 = b;
var G__26013 = c;
var G__26014 = d;
var G__26015 = e;
var G__26016 = f;
var G__26017 = g;
var G__26018 = h;
var G__26019 = i;
var G__26020 = j;
var G__26021 = k;
var G__26022 = l;
var G__26023 = m;
var G__26024 = n;
var G__26025 = o;
var G__26026 = p;
var G__26027 = q;
var G__26028 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__26011,G__26012,G__26013,G__26014,G__26015,G__26016,G__26017,G__26018,G__26019,G__26020,G__26021,G__26022,G__26023,G__26024,G__26025,G__26026,G__26027,G__26028) : self__.dispatch_fn.call(null,G__26011,G__26012,G__26013,G__26014,G__26015,G__26016,G__26017,G__26018,G__26019,G__26020,G__26021,G__26022,G__26023,G__26024,G__26025,G__26026,G__26027,G__26028));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26029 = a;
var G__26030 = b;
var G__26031 = c;
var G__26032 = d;
var G__26033 = e;
var G__26034 = f;
var G__26035 = g;
var G__26036 = h;
var G__26037 = i;
var G__26038 = j;
var G__26039 = k;
var G__26040 = l;
var G__26041 = m;
var G__26042 = n;
var G__26043 = o;
var G__26044 = p;
var G__26045 = q;
var G__26046 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__26029,G__26030,G__26031,G__26032,G__26033,G__26034,G__26035,G__26036,G__26037,G__26038,G__26039,G__26040,G__26041,G__26042,G__26043,G__26044,G__26045,G__26046) : target_fn.call(null,G__26029,G__26030,G__26031,G__26032,G__26033,G__26034,G__26035,G__26036,G__26037,G__26038,G__26039,G__26040,G__26041,G__26042,G__26043,G__26044,G__26045,G__26046));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__26047 = a;
var G__26048 = b;
var G__26049 = c;
var G__26050 = d;
var G__26051 = e;
var G__26052 = f;
var G__26053 = g;
var G__26054 = h;
var G__26055 = i;
var G__26056 = j;
var G__26057 = k;
var G__26058 = l;
var G__26059 = m;
var G__26060 = n;
var G__26061 = o;
var G__26062 = p;
var G__26063 = q;
var G__26064 = r;
var G__26065 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__26047,G__26048,G__26049,G__26050,G__26051,G__26052,G__26053,G__26054,G__26055,G__26056,G__26057,G__26058,G__26059,G__26060,G__26061,G__26062,G__26063,G__26064,G__26065) : self__.dispatch_fn.call(null,G__26047,G__26048,G__26049,G__26050,G__26051,G__26052,G__26053,G__26054,G__26055,G__26056,G__26057,G__26058,G__26059,G__26060,G__26061,G__26062,G__26063,G__26064,G__26065));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26066 = a;
var G__26067 = b;
var G__26068 = c;
var G__26069 = d;
var G__26070 = e;
var G__26071 = f;
var G__26072 = g;
var G__26073 = h;
var G__26074 = i;
var G__26075 = j;
var G__26076 = k;
var G__26077 = l;
var G__26078 = m;
var G__26079 = n;
var G__26080 = o;
var G__26081 = p;
var G__26082 = q;
var G__26083 = r;
var G__26084 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__26066,G__26067,G__26068,G__26069,G__26070,G__26071,G__26072,G__26073,G__26074,G__26075,G__26076,G__26077,G__26078,G__26079,G__26080,G__26081,G__26082,G__26083,G__26084) : target_fn.call(null,G__26066,G__26067,G__26068,G__26069,G__26070,G__26071,G__26072,G__26073,G__26074,G__26075,G__26076,G__26077,G__26078,G__26079,G__26080,G__26081,G__26082,G__26083,G__26084));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__26085 = a;
var G__26086 = b;
var G__26087 = c;
var G__26088 = d;
var G__26089 = e;
var G__26090 = f;
var G__26091 = g;
var G__26092 = h;
var G__26093 = i;
var G__26094 = j;
var G__26095 = k;
var G__26096 = l;
var G__26097 = m;
var G__26098 = n;
var G__26099 = o;
var G__26100 = p;
var G__26101 = q;
var G__26102 = r;
var G__26103 = s;
var G__26104 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__26085,G__26086,G__26087,G__26088,G__26089,G__26090,G__26091,G__26092,G__26093,G__26094,G__26095,G__26096,G__26097,G__26098,G__26099,G__26100,G__26101,G__26102,G__26103,G__26104) : self__.dispatch_fn.call(null,G__26085,G__26086,G__26087,G__26088,G__26089,G__26090,G__26091,G__26092,G__26093,G__26094,G__26095,G__26096,G__26097,G__26098,G__26099,G__26100,G__26101,G__26102,G__26103,G__26104));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26105 = a;
var G__26106 = b;
var G__26107 = c;
var G__26108 = d;
var G__26109 = e;
var G__26110 = f;
var G__26111 = g;
var G__26112 = h;
var G__26113 = i;
var G__26114 = j;
var G__26115 = k;
var G__26116 = l;
var G__26117 = m;
var G__26118 = n;
var G__26119 = o;
var G__26120 = p;
var G__26121 = q;
var G__26122 = r;
var G__26123 = s;
var G__26124 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__26105,G__26106,G__26107,G__26108,G__26109,G__26110,G__26111,G__26112,G__26113,G__26114,G__26115,G__26116,G__26117,G__26118,G__26119,G__26120,G__26121,G__26122,G__26123,G__26124) : target_fn.call(null,G__26105,G__26106,G__26107,G__26108,G__26109,G__26110,G__26111,G__26112,G__26113,G__26114,G__26115,G__26116,G__26117,G__26118,G__26119,G__26120,G__26121,G__26122,G__26123,G__26124));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var mf = this;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});

cljs.core.MultiFn.cljs$lang$type = true;

cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";

cljs.core.MultiFn.cljs$lang$ctorPrWriter = (function (this__12187__auto__,writer__12188__auto__,opt__12189__auto__){
return cljs.core._write(writer__12188__auto__,"cljs.core/MultiFn");
});

cljs.core.__GT_MultiFn = (function __GT_MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
return (new cljs.core.MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy));
});

/**
* Removes all of the methods of multimethod.
*/
cljs.core.remove_all_methods = (function remove_all_methods(multifn){
return cljs.core._reset(multifn);
});
/**
* Removes the method of multimethod associated with dispatch-value.
*/
cljs.core.remove_method = (function remove_method(multifn,dispatch_val){
return cljs.core._remove_method(multifn,dispatch_val);
});
/**
* Causes the multimethod to prefer matches of dispatch-val-x over dispatch-val-y
* when there is a conflict
*/
cljs.core.prefer_method = (function prefer_method(multifn,dispatch_val_x,dispatch_val_y){
return cljs.core._prefer_method(multifn,dispatch_val_x,dispatch_val_y);
});
/**
* Given a multimethod, returns a map of dispatch values -> dispatch fns
*/
cljs.core.methods$ = (function methods$(multifn){
return cljs.core._methods(multifn);
});
/**
* Given a multimethod and a dispatch value, returns the dispatch fn
* that would apply to that value, or nil if none apply and no default
*/
cljs.core.get_method = (function get_method(multifn,dispatch_val){
return cljs.core._get_method(multifn,dispatch_val);
});
/**
* Given a multimethod, returns a map of preferred value -> set of other values
*/
cljs.core.prefers = (function prefers(multifn){
return cljs.core._prefers(multifn);
});

/**
* @constructor
*/
cljs.core.UUID = (function (uuid){
this.uuid = uuid;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2153775104;
})
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__26126 = cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([this$__$1], 0));
return goog.string.hashCode(G__26126);
});

cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (_,writer,___$1){
var self__ = this;
var ___$2 = this;
return cljs.core._write(writer,[cljs.core.str("#uuid \""),cljs.core.str(self__.uuid),cljs.core.str("\"")].join(''));
});

cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
return ((other instanceof cljs.core.UUID)) && ((self__.uuid === other.uuid));
});

cljs.core.UUID.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.uuid;
});

cljs.core.UUID.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.UUID.cljs$lang$type = true;

cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";

cljs.core.UUID.cljs$lang$ctorPrWriter = (function (this__12187__auto__,writer__12188__auto__,opt__12189__auto__){
return cljs.core._write(writer__12188__auto__,"cljs.core/UUID");
});

cljs.core.__GT_UUID = (function __GT_UUID(uuid){
return (new cljs.core.UUID(uuid));
});


/**
* @constructor
*/
cljs.core.ExceptionInfo = (function (message,data,cause){
this.message = message;
this.data = data;
this.cause = cause;
})

cljs.core.ExceptionInfo.cljs$lang$type = true;

cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";

cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = (function (this__12187__auto__,writer__12188__auto__,opt__12189__auto__){
return cljs.core._write(writer__12188__auto__,"cljs.core/ExceptionInfo");
});

cljs.core.__GT_ExceptionInfo = (function __GT_ExceptionInfo(message,data,cause){
return (new cljs.core.ExceptionInfo(message,data,cause));
});

cljs.core.pr_writer_ex_info = (function pr_writer_ex_info(obj,writer,opts){
cljs.core._write(writer,"#ExceptionInfo{:message ");

cljs.core.pr_writer(obj.message,writer,opts);

if(cljs.core.truth_(obj.data)){
cljs.core._write(writer,", :data ");

cljs.core.pr_writer(obj.data,writer,opts);
} else {
}

if(cljs.core.truth_(obj.cause)){
cljs.core._write(writer,", :cause ");

cljs.core.pr_writer(obj.cause,writer,opts);
} else {
}

return cljs.core._write(writer,"}");
});
/**
* Alpha - subject to change.
* Create an instance of ExceptionInfo, an Error type that carries a
* map of additional data.
*/
cljs.core.ex_info = (function() {
var ex_info = null;
var ex_info__2 = (function (msg,data){
return ex_info.cljs$core$IFn$_invoke$arity$3(msg,data,null);
});
var ex_info__3 = (function (msg,data,cause){
cljs.core.ExceptionInfo.prototype = (function (){var G__26131 = msg;
return Error(G__26131);
})();

cljs.core.ExceptionInfo.prototype.name = "ExceptionInfo";

cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;

cljs.core.ExceptionInfo.prototype.toString = cljs.core.pr_str_STAR_;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (obj,writer,opts){
var obj__$1 = this;
return cljs.core.pr_writer_ex_info(obj__$1,writer,opts);
});

return (new cljs.core.ExceptionInfo(msg,data,cause));
});
ex_info = function(msg,data,cause){
switch(arguments.length){
case 2:
return ex_info__2.call(this,msg,data);
case 3:
return ex_info__3.call(this,msg,data,cause);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
return ex_info;
})()
;
/**
* Alpha - subject to change.
* Returns exception data (a map) if ex is an ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_data = (function ex_data(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.data;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns the message attached to the given Error / ExceptionInfo object.
* For non-Errors returns nil.
*/
cljs.core.ex_message = (function ex_message(ex){
if((ex instanceof Error)){
return ex.message;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns exception cause (an Error / ExceptionInfo) if ex is an
* ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_cause = (function ex_cause(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.cause;
} else {
return null;
}
});
/**
* Returns an JavaScript compatible comparator based upon pred.
*/
cljs.core.comparator = (function comparator(pred){
return (function (x,y){
if(cljs.core.truth_((function (){var G__26136 = x;
var G__26137 = y;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__26136,G__26137) : pred.call(null,G__26136,G__26137));
})())){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__26138 = y;
var G__26139 = x;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__26138,G__26139) : pred.call(null,G__26138,G__26139));
})())){
return (1);
} else {
return (0);

}
}
});
});
cljs.core.special_symbol_QMARK_ = (function special_symbol_QMARK_(x){
return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null,"&","&",-2144855648,null),null,new cljs.core.Symbol(null,"defrecord*","defrecord*",-1936366207,null),null,new cljs.core.Symbol(null,"try","try",-1273693247,null),null,new cljs.core.Symbol(null,"loop*","loop*",615029416,null),null,new cljs.core.Symbol(null,"do","do",1686842252,null),null,new cljs.core.Symbol(null,"letfn*","letfn*",-110097810,null),null,new cljs.core.Symbol(null,"if","if",1181717262,null),null,new cljs.core.Symbol(null,"new","new",-444906321,null),null,new cljs.core.Symbol(null,"ns","ns",2082130287,null),null,new cljs.core.Symbol(null,"deftype*","deftype*",962659890,null),null,new cljs.core.Symbol(null,"let*","let*",1920721458,null),null,new cljs.core.Symbol(null,"js*","js*",-1134233646,null),null,new cljs.core.Symbol(null,"fn*","fn*",-752876845,null),null,new cljs.core.Symbol(null,"recur","recur",1202958259,null),null,new cljs.core.Symbol(null,"set!","set!",250714521,null),null,new cljs.core.Symbol(null,".",".",1975675962,null),null,new cljs.core.Symbol(null,"quote","quote",1377916282,null),null,new cljs.core.Symbol(null,"throw","throw",595905694,null),null,new cljs.core.Symbol(null,"def","def",597100991,null),null], null), null),x);
});
/**
* test [v] finds fn at key :test in var metadata and calls it,
* presuming failure will throw exception
*/
cljs.core.test = (function test(v){
var f = v.cljs$lang$test;
if(cljs.core.truth_(f)){
(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));

return new cljs.core.Keyword(null,"ok","ok",967785236);
} else {
return new cljs.core.Keyword(null,"no-test","no-test",-1679482642);
}
});

//# sourceMappingURL=core.js.map